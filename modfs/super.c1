#include <linux/init.h>
#include <linux/module.h>
#include <linux/buffer_head.h>
#include <linux/fs.h>
#include <linux/slab.h>
/*
static struct dentry *aufs_mount(struct file_system_type *type, int flags,
                        char const *dev, void *data)
{
        struct dentry *entry = mount_bdev(type, flags, dev, data, aufs_fill_sb);

        if (IS_ERR(entry))
                pr_err("aufs mounting failed\n");
        else
                pr_debug("aufs mounted\n");
        return entry;
}


static struct file_system_type aufs_type = {
      .owner = THIS_MODULE,
      .name = "aufs",
      .mount = aufs_mount,
      .kill_sb = kill_block_super,
      .fs_flags = FS_REQUIRES_DEV, 
  };
*/
  static int __init aufs_init(void)
  {
      pr_debug("aufs module loaded\n");
      return 0;
  }

  static void __exit aufs_fini(void)
  {
      pr_debug("aufs module unloaded\n");
  }

  module_init(aufs_init);
  module_exit(aufs_fini);

  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("kmu");
