<!DOCTYPE html>
<html><head>

    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ГОСТ Р 51904-2002 - Программное обеспечение встроенных систем. Общие требования к разработке и документированию</title>
    <meta name="description" content="ГОСТ Р 51904-2002 - Программное обеспечение встроенных систем. Общие требования к разработке и документированию">
    <meta name="keywords" content="">
    <link rel="shortcut icon" href="https://engenegr.ru/themes/ico/favicon.ico">
    <link rel="stylesheet" type="text/css" href="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/bootstrap.css">
    <link rel="stylesheet" type="text/css" href="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/jquery-ui.css"> 
    <link rel="stylesheet" type="text/css" href="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/base.css">
    <link rel="stylesheet" type="text/css" href="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/template.css">
    
    <script type="text/javascript" async="" src="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/watch.js"></script><script type="text/javascript" async="" src="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/aci.js"></script><script type="text/javascript" async="" src="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/watch.js"></script><script type="text/javascript" src="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/jquery-1.10.2.min.js"></script>
    <script type="text/javascript" src="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/jquery-ui.min.js"></script>    
    <script type="text/javascript" src="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/bootstrap.min.js"></script>
	<script type="text/javascript">
		jQuery(document).ready(function(){
			$('#search').autocomplete({source:'/ajax/search/gost/', minLength:5});
		});
	</script>

    <script type="text/javascript" src="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/94320.js" async="async"></script>
    <script type="text/javascript" src="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/18147.js" async="async"></script>

    <!-- SAPE RTB JS -->
    <script async="async" src="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/113398.js" type="text/javascript">
    </script>
    <!-- SAPE RTB END -->

    <!-- Yandex.Metrika counter --><script type="text/javascript"> (function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter32282274 = new Ya.Metrika({ id:32282274, clickmap:true, trackLinks:true, accurateTrackBounce:true, webvisor:true, trackHash:true }); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = "https://mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><!-- /Yandex.Metrika counter -->

</head>
<body>


<div class="container">

<div class="row">
    <div class="col-sm-12">
    
<nav class="navbar navbar-default navbar-fixed-top" role="navigation">
      <!-- We use the fluid option here to avoid overriding the fixed width of a normal container within the narrow content columns. -->
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-6">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="https://engenegr.ru/"><img src="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/logo.png" style="margin-top: -8px;"></a>
          
        </div>

        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-6">
          <ul class="nav navbar-nav">
            <li class=""><a href="https://engenegr.ru/oks">Общероссийский классификатор стандартов</a></li>
            <li class=""><a href="https://engenegr.ru/kgs">Классификатор Государственных Стандартов</a></li>
          </ul>
        </div><!-- /.navbar-collapse -->
      </div>
    </nav>    
    
    </div>
</div>

<div class="row">
<div class="col-sm-12" style="padding-top: 50px; margin: 10px 0;">

<form role="form" enctype="multipart/form-data" action="/search/" method="post" id="formsearch">
<div class="input-group input-group-sm animated fadeInDown ">
           <input type="text" class="form-control ui-autocomplete-input" id="search" name="search" placeholder="Поиск по названию или коду" autocomplete="off">
            <span class="input-group-btn">
                <button class="btn btn-default btn-search" type="submit">»</button>
            </span>
        </div>                    
</form>

</div>
</div>

<div style="position: relative;">
										
<div class="row">
<div class="col-sm-12">	
<ol class="breadcrumb" style="margin-bottom: 0px!important;">
  <li><a href="https://engenegr.ru/">Главная</a></li>
<li></li><li><a href="https://engenegr.ru/gost/oks/">Общероссийский классификатор стандартов</a></li><li><a href="https://engenegr.ru/oks/informacionnye-tehnologii-mashiny-kontorskie">Информационные технологии. Машины конторские.</a></li><li><a href="https://engenegr.ru/oks/programmnoe-obespechenie">Программное обеспечение</a></li><li>Программное обеспечение встроенных систем. Общие ...</li></ol>

<div class="clear"></div>
</div>
</div>
<div class="row">
    <div class="col-sm-12"><h1 class="title"><small>ГОСТ Р 51904-2002</small><br> Программное обеспечение встроенных систем. Общие требования к разработке и документированию</h1>

            <div class="content">                              								 										 <p style="text-align: right;">ГОСТ Р 51904-2002<br><br>Группа П85<br><br></p><p class="header" style="text-align: center;">ГОСУДАРСТВЕННЫЙ СТАНДАРТ РОССИЙСКОЙ ФЕДЕРАЦИИ<br></p><p class="header" style="text-align: center;">ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ВСТРОЕННЫХ СИСТЕМ<br></p><p class="header" style="text-align: center;">Общие требования к разработке и документированию<br></p><p class="header" style="text-align: center;">Embedded system software.<br>General requirements for development and documentation<br></p><p style="text-align: justify;">ОКС 35.080<br>ОКСТУ 4090 </p><p style="text-align: right;">Дата введения 2003-07-01<br><br></p><p class="header" style="text-align: center;">Предисловие<br></p><p style="text-align: justify;">1
 РАЗРАБОТАН Государственным научно-исследовательским институтом 
авиационных систем с участием Научно-исследовательского института 
стандартизации и унификации<br><br>ВНЕСЕН Научно-исследовательским институтом стандартизации и унификации<br></p><p style="text-align: justify;">2 УТВЕРЖДЕН И ВВЕДЕН В ДЕЙСТВИЕ Постановлением Госстандарта России от 25 июня 2002 г. N 247-ст<br></p><p style="text-align: justify;">3
 Стандарт подготовлен в развитие ГОСТ Р ИСО/МЭК 12207-99 "Информационная
 технология. Процессы жизненного цикла программных средств" с целью 
учета специфики разработки и документирования программного обеспечения 
встроенных систем реального времени<br></p><p style="text-align: justify;">4 ВВЕДЕН ВПЕРВЫЕ<br></p><p style="text-align: justify;">5 ПЕРЕИЗДАНИЕ. Октябрь 2005 г.<br><br></p><h2 style="visibility:hidden;font-size:0;margin:0;">1 Область применения</h2><p class="header" style="text-align: justify;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 Область применения<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style="text-align: justify;">Настоящий
 стандарт распространяется на процессы разработки и документирования 
программного обеспечения (ПО) встроенных систем реального времени. 
Стандарт распространяется на все действия, имеющие отношение к 
разработке программного обеспечения.<br><br>Настоящий стандарт применяют
 полностью ко всему поставляемому программному обеспечению, включая 
среду разработки, если контрактом не предусмотрено использование 
специальных стандартов для определенных заказчиком типов ПО. Стандарт 
неприменим для аппаратных элементов программно-аппаратного обеспечения.<br><br></p><h2>2 Нормативные ссылки</h2><p style="text-align: justify;">В настоящем стандарте использована ссылка на следующий стандарт:<br><br>ГОСТ Р ИСО/МЭК 12207-99 Информационная технология. Процессы жизненного цикла программных средств<br><br></p><h2>3 Определения и сокращения</h2><p style="text-align: justify;">В настоящем стандарте применяют термины с соответствующими определениями по ГОСТ Р ИСО/МЭК 12207, а также приведенные ниже:<br></p><p style="text-align: justify;">3.1 <b>алгоритм:</b> Конечное множество четко определенных правил, которые задают последовательность действий для выполнения конкретной задачи.<br></p><p style="text-align: justify;">3.2 <b>анализ полноты покрытия:</b> Определения степени, до которой работы процесса верификации ПО удовлетворяют поставленной цели.<br></p><p style="text-align: justify;">3.3 <b>аномальное поведение:</b> Поведение, которое не соответствует заданным требованиям.<br></p><p style="text-align: justify;">3.4 <b>аппаратные средства:</b>
 Материальная часть вычислительной системы, включающая в себя 
электрические и электронные элементы (например, приборы и схемы), 
электромеханические элементы (например, дисководы) и механические 
элементы (например, стойки).<br></p><p style="text-align: justify;">3.5 <b>архитектура:</b>
 Организационная структура системы или ЭКПО, в которой идентифицированы 
компоненты, их интерфейсы и концепция взаимодействия между ними.<br></p><p style="text-align: justify;">3.6 <b>аттестация инструментальных средств:</b>
 Процесс получения сертификационного доверия к программному 
инструментальному средству применительно к конкретной встроенной 
системе.<br></p><p style="text-align: justify;">3.7 <b>база данных:</b> 
Совокупность взаимосвязанных данных, сохраненных в одном или более 
компьютерных файлах в виде, позволяющем обращаться к ним пользователям 
или компьютерным программам с помощью системы управления базой данных.<br></p><p style="text-align: justify;">3.8 <b>библиотека разработки ПО:</b>
 Контролируемая совокупность документов, промежуточных и конечных 
программных продуктов, а также инструментальных средств и процедур, 
используемых для управления текущей разработкой и последующей поддержкой
 ПО.<br></p><p style="text-align: justify;">3.9 <b>верификация:</b> 
Оценка результатов процесса с целью гарантии корректности и 
непротиворечивости в отношении входов и стандартов, существующих для 
данного процесса.<br></p><p style="text-align: justify;">3.10 <b>заплата:</b> Исправление, вносимое непосредственно в объектную программу, а не в текст, на языке программирования.<br></p><p style="text-align: justify;">3.11 <b>изменение ПО:</b> Модификация исходного кода, исполняемого объектного кода или сопутствующих документов относительно их базовой линии.<br></p><p style="text-align: justify;">3.12 <b>имитатор:</b>
 Устройство, компьютерная программа или система, используемая при 
верификации ПО, которая принимает те же входные данные и производит те 
же выходные данные, что и объектная система.<br></p><p style="text-align: justify;">3.13 <b>интегральный процесс:</b> Процесс разработки ПО, который остается активным на протяжении жизненного цикла ПО.<br></p><p style="text-align: justify;">3.14 <b>интеграция аппаратуры и ПО:</b> Процесс объединения ПО с объектным компьютером.<br></p><p style="text-align: justify;">3.15 <b>интеграция ПО:</b> Процесс объединения компонентов кода.<br></p><p style="text-align: justify;">3.16 <b>интерфейс:</b>
 Взаимосвязь между двумя или более объектами (типа ЭКПО/ЭКПО, ЭКПО/ЭКА, 
ЭКПО/пользователь или между модулями ПО), которые совместно используют и
 обеспечивают данные или обмениваются ими.<br></p><p style="text-align: justify;">3.17 <b>инструментальное средство:</b>
 Компьютерная программа, используемая как средство разработки, 
тестирования, анализа, производства или модификации других программ или 
документов на них.<br></p><p style="text-align: justify;">3.18 <b>инструментальный компьютер:</b> Компьютер, на котором разрабатывают ПО.<br></p><p style="text-align: justify;">3.19 <b>исходный код:</b>
 Код, написанный на исходном языке программирования, таком как язык 
ассемблера и/или язык высокого уровня, в машинно-читаемой форме, 
пригодной для ввода в ассемблер или компилятор.<br></p><p style="text-align: justify;">3.20 <b>квалификационное тестирование:</b> Тестирование, выполняемое с целью убедить заказчика, что ПО соответствует заданным требованиям.<br></p><p style="text-align: justify;">3.21 <b>класс эквивалентности:</b>
 Такое разбиение входной области программы, при котором тестирование для
 представительного значения класса эквивалентно тестированию для любого 
другого значения из этого класса.<br></p><p style="text-align: justify;">3.22 <b>код:</b>
 Реализация конкретных данных или конкретной компьютерной программы в 
символьной форме, такой, например, как исходный код, объектный код или 
машинный код.<br></p><p style="text-align: justify;">3.23 <b>коммерчески доступное ПО:</b>
 Коммерчески доступное программное средство, продаваемое производителем 
по официальным каталогам. Коммерчески доступное ПО не предназначено для 
переделки или усовершенствования. ПО, разработанное по специальным 
контрактам для специализированных приложений, не является коммерчески 
доступным ПО.<br></p><p style="text-align: justify;">3.24 <b>компонент:</b> Замкнутая часть, комбинация частей или элемент, которые выполняют в системе отдельную функцию.<br></p><p style="text-align: justify;">3.25 <b>контракт:</b> Соглашение о разработке ПО, установленное между заказчиком и разработчиком.<br></p><p style="text-align: justify;">3.26 <b>критерии перехода:</b> Минимальные условия, определенные процессом планирования ПО, которые должны быть выполнены для входа в процесс.<br></p><p style="text-align: justify;">3.27 <b>мертвый код:</b>
 Исполняемый объектный код (или данные), который в результате ошибки 
проектирования не может быть выполнен (код) или использован (данные) в 
функциональной конфигурации среды объектного компьютера и не может быть 
прослежен в системных или программных требованиях. Исключение составляют
 встроенные идентификаторы.<br></p><p style="text-align: justify;">3.28 <b>многоверсионное неидентичное ПО:</b>
 Множество из двух или более программ, разработанных отдельно по одним и
 тем же функциональным требованиям. Ошибки одной версии обнаруживают 
путем сравнения выходных результатов разных программ.<br></p><p style="text-align: justify;">3.29 <b>модифицированное покрытие условий/решений:</b>
 Такое выполнение программы при тестировании, при котором каждая точка 
входа и выхода программы должна быть вызвана хотя бы один раз; каждое 
условие в решении программы должно быть выполнено со всеми возможными 
результатами хотя бы один раз; все результаты каждого решения должны 
быть выполнены хотя бы один раз, и для каждого условия в решении должно 
быть показано его независимое влияние на результат решения. 
Независимость влияния условия на результат решения демонстрируют путем 
рассмотрения всех возможных комбинаций условий.<br></p><p style="text-align: justify;">3.30 <b>непоставляемое программное средство:</b>
 Программное средство, которое в соответствии с контрактом не требуется 
поставлять заказчику или другому обозначенному получателю.<br></p><p style="text-align: justify;">3.31 <b>объектный код:</b>
 Представление компьютерной программы на низком уровне, обычно не в 
форме, непосредственно пригодной для объектного компьютера, а в форме, 
включающей в себя, помимо информации о процессорных командах, информацию
 о размещении программы.<br></p><p style="text-align: justify;">3.32 <b>объектный компьютер:</b> Компьютер, на котором эксплуатируют ПО.<br></p><p style="text-align: justify;">3.33 <b>отказоустойчивость:</b> Свойство системы продолжать правильное выполнение функций при наличии ограниченного числа аппаратных или программных дефектов.<br></p><p style="text-align: justify;">3.34 <b>отключенный код:</b>
 Исполняемый объектный код (или данные), который согласно проекту 
предназначен для выполнения (код) или использования (данные) только при 
определенных условиях.<br></p><p style="text-align: justify;">3.35 <b>оценка безопасности системы:</b>
 Систематическая, всесторонняя оценка предлагаемой системы с целью 
показать, что она удовлетворяет требованиям, предъявленным к обеспечению
 безопасности.<br></p><p style="text-align: justify;">3.36 <b>ошибка:</b> Неправильность в требованиях, проекте или коде.<br></p><p style="text-align: justify;">3.37 <b>передача ПО:</b>
 Последовательность действий, определяющих ответственность за передачу 
разработанного ПО организацией, имеющей право на эти действия (обычно 
организацией, которая выполняет разработку ПО), в организацию, 
осуществляющую поддержку ПО.<br></p><p style="text-align: justify;">3.38 <b>перепроектирование:</b> Процесс исследования и изменения существующей системы для преобразования ее в новую форму.<br></p><p style="text-align: justify;">3.39 <b>поддержка ПО:</b>
 Набор действий, гарантирующий, что установленное для эксплуатационного 
использования ПО продолжает выполнять все функции в соответствии с 
предназначением системы. Поддержка ПО включает в себя сопровождение ПО, 
помощь пользователям и связанные с этим действия.<br></p><p style="text-align: justify;">3.40 <b>покрытие операторов:</b> Такое выполнение программы при тестировании, при котором каждый оператор в программе должен быть выполнен хотя бы один раз.<br></p><p style="text-align: justify;">3.41 <b>покрытие решений:</b>
 Такое выполнение программы при тестировании, при котором каждая точка 
входа и выхода программы должна быть вызвана хотя бы один раз; каждое 
условие в решении должно быть выполнено с каждым возможным результатом 
хотя бы один раз.<br></p><p style="text-align: justify;">3.42 <b>покрытие условий/решений:</b>
 Такое выполнение программы при тестировании, при котором каждая точка 
входа и выхода программы должна быть вызвана хотя бы один раз; каждое 
условие в решении программы должно быть выполнено со всеми возможными 
результатами хотя бы один раз; все результаты каждого решения должны 
быть выполнены хотя бы один раз.<br></p><p style="text-align: justify;">3.43 <b>поставляемое программное средство:</b> Программное средство, требуемое по контракту, которое будет поставлено заказчику или другому обозначенному получателю.<br></p><p style="text-align: justify;">3.44 <b>построение:</b> Версия ПО, отвечающая определенному подмножеству требований, которые должны быть обеспечены в конечном ПО.<br></p><p style="text-align: justify;">3.45 <b>прерывание:</b>
 Приостановка задачи, например выполнения компьютерной программы, 
вызванная событием, внешним для этой задачи. Прерывание позволяет 
обработать возникшее событие и вернуться к прерванной задаче.<br></p><p style="text-align: justify;">3.46 <b>программная система:</b> Система, состоящая из ПО и, возможно, компьютерного оборудования для его выполнения.<br></p><p style="text-align: justify;">3.47 <b>программное обеспечение (ПО):</b> Совокупность компьютерных программ и программных документов, необходимых для эксплуатации этих программ.<br></p><p style="text-align: justify;">3.48 <b>программное средство:</b> ПО и связанные с ним документы, вновь созданные, модифицированные или сгруппированные для удовлетворения требованиям контракта.<br></p><p style="text-align: justify;">3.49 <b>программное средство многократного использования:</b>
 Программное средство, разработанное для конкретного применения, но с 
возможностью другого применения, или разработанное специально для 
многократного использования в различных проектах или для 
многофункционального использования в одном проекте.<br></p><p style="text-align: justify;">3.50 <b>производные требования:</b>
 Дополнительные требования, появившиеся в результате выполнения 
процессов разработки ПО, которые не являются непосредственно связанными с
 требованиями верхнего уровня.<br></p><p style="text-align: justify;">3.51 <b>процедура тестирования:</b> Детальные инструкции для того, чтобы генерировать и выполнить множество тестовых наборов и оценить результаты их выполнения.<br></p><p style="text-align: justify;">3.52 <b>разработка ПО:</b>
 Набор действий, результатом выполнения которых являются программные 
средства. Разработка ПО может включать в себя новую разработку, 
модификацию, многократное использование, перепроектирование или любое 
другое действие, требуемое для создания программных средств.<br></p><p style="text-align: justify;">3.53 <b>решение:</b>
 Логическое выражение, состоящее из условий и, возможно, логических 
операций. Решение без логических операций - это условие. Если условие 
включено в решение более одного раза, то каждое его вхождение считают 
отдельным условием.<br></p><p style="text-align: justify;">3.54 <b>связность по данным:</b> Зависимость программного компонента от данных, которые используются не только исключительно в этом компоненте.<br></p><p style="text-align: justify;">3.55 <b>связность по управлению:</b> Степень влияния одного программного компонента на выполнение другого программного компонента.<br></p><p style="text-align: justify;">3.56 <b>сертификационное доверие:</b> Принятие сертифицирующей организацией того факта, что процесс или средство удовлетворяет сертификационным требованиям.<br></p><p style="text-align: justify;">3.57 <b>система:</b> Набор аппаратных и программных компонентов, созданный для выполнения определенной функции или множества функций.<br></p><p style="text-align: justify;">3.58 <b>словарь данных:</b> Детальное описание данных, параметров, переменных и констант, используемых в системе.<br></p><p style="text-align: justify;">3.59 <b>совместный просмотр:</b>
 Совещание с участием представителей и заказчика и разработчика, в 
процессе которого проверяют и обсуждают состояние проекта, программные 
средства и/или проблемы проекта.<br></p><p style="text-align: justify;">3.60 <b>соискатель:</b> Человек или организация, претендующая на получение утверждения от сертифицирующей организации.<br></p><p style="text-align: justify;">3.61 <b>соисполнитель разработки:</b>
 Организация, которая не является ни главным подрядчиком, ни 
субподрядчиком данной разработки, но которая принимает участие в 
разработке системы или проекта.<br></p><p style="text-align: justify;">3.62 <b>среда разработки ПО:</b>
 Интегрированная система, включающая в себя аппаратные средства, ПО, 
программно-аппаратные средства, процедуры и документы, необходимые для 
разработки ПО.<br></p><p style="text-align: justify;">3.63 <b>среда верификации/тестирования ПО:</b>
 Интегрированная система, включающая в себя аппаратные средства, ПО, 
программно-аппаратные средства, процедуры и документы, необходимые для 
выполнения верификации/тестирования ПО. Элементами данной среды могут 
являться имитаторы, статические анализаторы, генераторы тестовых данных,
 анализаторы путей и т.п., а также элементы, используемые в среде 
разработки ПО.<br></p><p style="text-align: justify;">3.64 <b>средства достижения согласования:</b> Специальные методы, используемые соискателем для удовлетворения требованиям, заданным в сертификационном базисе.<br></p><p style="text-align: justify;">3.65 <b>статический анализатор:</b> Программное инструментальное средство, которое позволяет получать определенные характеристики программы без ее выполнения.<br></p><p style="text-align: justify;">3.66 <b>тестирование:</b>
 Процесс выполнения системы или компонента системы в целях проверки 
того, что она/он удовлетворяет заданным требованиям, и обнаружения 
ошибок.<br></p><p style="text-align: justify;">3.67 <b>тестовый набор:</b>
 Множество тестовых входных данных, условий выполнения и результатов, 
разработанных для определенных целей, например для выполнения 
конкретного пути в программе или для верификации согласованности с 
заданными требованиями.<br></p><p style="text-align: justify;">3.68 <b>трассируемость:</b>
 Доказательство связи между элементами, например между входной и 
выходной информацией процесса, между требованием и его реализацией.<br></p><p style="text-align: justify;">3.69 <b>требование:</b> Характеристика того, чем система или ЭКПО должны обладать, чтобы быть приемлемыми для заказчика.<br></p><p style="text-align: justify;">3.70 <b>требования верхнего уровня:</b> Требования к ПО, разработанные на основании анализа системных требований и требований, связанных с безопасностью системы.<br></p><p style="text-align: justify;">3.71 <b>требования к ПО:</b>
 Описание того, что должно производить ПО, с заданием входных условий и 
ограничений. Требования к ПО включают в себя как требования верхнего 
уровня, так и требования нижнего уровня.<br></p><p style="text-align: justify;">3.72 <b>требования нижнего уровня:</b>
 Требования к ПО, разработанные на основании требований верхнего уровня,
 производных требований и ограничений проекта, по которым исходный код 
может быть реализован непосредственно, без какой-либо дополнительной 
информации.<br></p><p style="text-align: justify;">3.73 <b>управление конфигурацией:</b> Процесс идентификации и обеспечения целостности элементов конфигурации системы.<br></p><p style="text-align: justify;">3.74 <b>условие:</b> Логическое выражение, не содержащее логических операций.<br></p><p style="text-align: justify;">3.75 <b>устойчивость к ошибкам входных данных:</b> Свойство, благодаря которому ПО может продолжать корректно выполняться, несмотря на ошибки входных данных.<br></p><p style="text-align: justify;">3.76 <b>файл разработки ПО:</b>
 Сохраняемая совокупность данных, необходимых для разработки конкретного
 ПО. Содержит обычно (либо непосредственно, либо путем ссылок) сведения,
 связанные с анализом требований, проектированием и реализацией; 
информацию о тестировании, проводимом разработчиком, а также план и 
информацию о состоянии разработки.<br></p><p style="text-align: justify;">3.77 <b>элемент конфигурации аппаратуры (ЭКА):</b>
 Совокупность компонентов аппаратных средств, которая обеспечивает 
конечную функцию использования и предназначается заказчиком для 
независимого от других элементов управления конфигурацией.<br></p><p style="text-align: justify;">3.78 <b>элемент конфигурации ПО (ЭКПО):</b>
 Совокупность компонентов ПО, которая обеспечивает конечную функцию 
использования и предназначается заказчиком для независимого от других 
элементов управления конфигурацией.<br></p><p style="text-align: justify;">3.79 <b>эмулятор:</b>
 Устройство, компьютерная программа или система, которая принимает те же
 входные данные и производит те же выходные данные, что и данная 
система, и использующая тот же объектный код. Предназначен для 
выполнения на одном компьютере программ, написанных для другого 
компьютера.<br><br></p><h2>4 Общие требования</h2><h3>4.1 Жизненный цикл ПО</h3><p style="text-align: justify;"></p><p style="text-align: justify;">4.1.1 Процессы жизненного цикла ПО<br><br>В настоящем стандарте рассмотрены следующие процессы жизненного цикла ПО:<br><br>Процесс
 планирования, который определяет и координирует действия процессов 
разработки и интегральных процессов для данного проекта (раздел 6).<br><br>Процессы разработки, в ходе выполнения которых создается программное средство. Этими процессами являются:<br><br>- процесс определения требований к ПО;<br><br>- процесс проектирования ПО;<br><br>- процесс кодирования ПО;<br><br>- процесс интеграции.<br><br>Процессы разработки описаны в разделе 7.<br><br>Интегральные
 процессы, которые обеспечивают корректную реализацию и качество 
выполнения процессов разработки и их выходных данных:<br><br>- процесс верификации ПО;<br><br>- процесс управления конфигурацией ПО;<br><br>- процесс обеспечения качества ПО;<br><br>- процесс сертификационного сопровождения.<br><br>Интегральные процессы выполняются одновременно с процессами разработки ПО (разделы 8-11).<br></p><p style="text-align: justify;">4.1.2 Установление модели жизненного цикла ПО<br><br>В
 рамках конкретного проекта создания ПО должны быть установлены одна или
 несколько моделей жизненного цикла ПО, в соответствии с которыми 
выбирают необходимые работы для каждого процесса, определяют 
последовательность их выполнения, назначают ответственных за выполнение 
работ.<br><br>Для конкретного проекта последовательность процессов 
определяется сложностью проекта, функциональными возможностями 
разрабатываемой системы, объемом и сложностью ПО, стабильностью 
требований, использованием ранее полученных результатов, стратегией 
разработки и возможностями аппаратных средств. Обычная 
последовательность процессов разработки ПО - определение требований, 
проектирование, кодирование и интеграция.<br><br>Порядок представления в
 настоящем стандарте процессов и отдельных видов работ внутри процессов 
не предназначен для определения последовательности их выполнения в 
конкретном проекте. Многие работы могут быть выполнены одновременно; 
разные программные средства могут поступать (находиться) на разных 
этапах разработки. Если ПО разрабатывают для нескольких построений, 
некоторые работы могут быть выполнены для каждого построения, другие же -
 только для отдельного построения. Проект, включающий в себя одно 
построение, должен выполнять все требуемые для данного построения 
работы.<br></p><p style="text-align: justify;">4.1.3 Критерии перехода между процессами<br><br>Критерии
 перехода используют для определения возможности первичного или 
повторного перехода к выполнению процессов. Каждый процесс жизненного 
цикла ПО выполняет некоторые виды работ над исходными данными с целью 
получения результирующих данных. Процесс может иметь обратную связь с 
другими, ранее выполненными процессами и, в свою очередь, получать 
обратную связь от тех процессов, которые будут выполнены позже. Под 
обратной связью понимают получение, распознавание и обработку 
информации, которая требует повторной активизации ранее выполненного 
процесса. Примером обратной связи может служить получение сообщения об 
ошибке. Критерии перехода зависят от запланированной последовательности 
выполнения процессов разработки ПО и интегральных процессов, а также от 
уровня ПО. Возможные примеры критериев перехода: выполнение 
верификационного просмотра выходных результатов; получение в качестве 
входных данных идентифицированного элемента конфигурации; выполнение 
анализа трассируемости для входных данных. Процесс может быть 
инициирован только после того, как получены все исходные данные для 
этого процесса и удовлетворен критерий перехода, установленный для этого
 процесса.<br><br></p><h3>4.2 Общие требования для разработки ПО</h3><p style="text-align: justify;"></p><p style="text-align: justify;">4.2.1 Методы разработки ПО<br><br>Разработчик
 должен использовать для всех работ по созданию ПО систематизированные, 
зарегистрированные методы. План разработки ПО должен содержать описание 
этих методов или включать в себя ссылки на источники, в которых они 
описаны.<br></p><p style="text-align: justify;">4.2.2 Стандарты ПО<br><br>Разработчик
 должен разработать и использовать стандарты для представления 
требований, проекта, кода, тестовых вариантов, тестовых процедур и 
результатов тестирования. План разработки ПО должен содержать описание 
этой информации или ссылки на источники, в которых они описаны.<br></p><p style="text-align: justify;">4.2.3 Программные средства многократного использования<br><br>Разработчик
 должен рассмотреть и оценить возможность применения ранее разработанных
 программных средств многократного использования для выполнения 
требований контракта. Область исследования и критерии, используемые для 
оценки, должны быть описаны в Плане разработки ПО. Выбранные для 
применения программные средства должны отвечать требованиям контракта по
 правам собственности.<br><br>Разработчик должен рассмотреть возможность
 многократного использования программных средств, разработанных по 
контракту, оценить и идентифицировать для заказчика выгоды и издержки 
такого использования в случае его совместимости с задачами проекта.<br><br>Примечание
 - В контракт может быть включено требование на разработку программных 
средств, пригодных для многократного использования.<br><br></p><p style="text-align: justify;">4.2.4 Отработка критических требований<br><br>Разработчик
 должен идентифицировать ЭКПО или части их, критические с точки зрения 
безопасности, сбой в которых может привести к отказной ситуации для 
системы (см. 5.2).<br><br>Разработчик должен идентифицировать ЭКПО или 
их части, критические с точки зрения защиты, сбой в которых может 
привести к нарушению защиты системы. Если имеется такое ПО, разработчик 
должен предусмотреть стратегию обеспечения защиты. Эта стратегия должна 
гарантировать, что требования, проект, реализация и эксплуатационные 
процедуры для идентифицированного ПО минимизируют или устраняют 
потенциальные нарушения защиты системы. Разработчик должен описать 
стратегию в Плане разработки ПО, реализовать стратегию и провести 
доказательство как в части требуемых программных средств, так и в части 
выполнения стратегии обеспечения защиты.<br><br>Разработчик должен 
идентифицировать ЭКПО или части их, критические с точки зрения 
секретности, сбой в которых может привести к нарушению секретности 
системы. Если имеется такое ПО, то разработчик должен представить 
стратегию обеспечения секретности. Стратегия должна гарантировать, что 
требования, проект, реализация и эксплуатационные процедуры для 
идентифицированного ПО минимизируют или устраняют потенциальные 
нарушения секретности системы. Разработчик должен описать стратегию в 
Плане разработки ПО, реализовать стратегию и провести доказательство как
 в части требуемых программных средств, так и в части выполнения 
стратегии обеспечения секретности.<br><br>В случаях, когда система 
возлагает на ПО реализацию каких-либо требований, которые в соответствии
 с контрактом или спецификациями системы считаются критическими, 
разработчик должен идентифицировать те ЭКПО или их части, сбой в которых
 может привести к нарушению этих критических требований; разработать 
стратегию для гарантирования того, что требования, проект, реализация и 
эксплуатационные процедуры для идентифицированного ПО минимизируют или 
устраняют потенциал для таких нарушений; описать стратегию в Плане 
разработки ПО; выполнить стратегию и провести доказательство как в части
 требуемых программных средств, так и в части выполнения стратегии.<br></p><p style="text-align: justify;">4.2.5 Использование ресурсов аппаратных средств компьютера<br><br>Разработчик
 должен проанализировать требования контракта, относящиеся к 
использованию ресурсов аппаратных средств компьютера (например, 
максимально возможная производительность процессора, объем памяти, 
пропускная способность устройств ввода/вывода). Разработчик должен 
распределить аппаратные ресурсы компьютера между ЭКПО, контролировать 
использование этих ресурсов при выполнении контракта и перераспределить 
их или идентифицировать потребность в дополнительных ресурсах по мере 
необходимости, чтобы удовлетворить требования контракта.<br></p><p style="text-align: justify;">4.2.6 Доступ для проверки заказчиком<br><br>Разработчик
 должен обеспечить заказчику или его полномочному представителю доступ к
 средствам разработчика и субподрядчика, включая среды разработки и 
верификации ПО, для проверки программных средств и работ, требуемых в 
соответствии с контрактом.<br><br></p><h2>5 Системные аспекты, связанные с разработкой ПО</h2><p style="text-align: justify;">Процесс
 обеспечения безопасности определяет информационный поток между 
процессами жизненного цикла системы управления и процессами жизненного 
цикла ПО. Вследствие взаимозависимости процесса обеспечения безопасности
 системы и процесса проектирования системы поток информации, описанный в
 следующих подразделах, является итерационным.<br><br></p><h3>5.1 Поток информации между процессами жизненного цикла системы и ПО</h3><p style="text-align: justify;"></p><p style="text-align: justify;">5.1.1 Информационный поток от системных процессов к процессам ПО<br><br>В
 процессе оценки безопасности системы должны быть определены возможные 
отказные ситуации для системы и установлены их категории, определены 
требования, связанные с безопасностью, которые специфицируют желаемую 
отказоустойчивость и реакцию системы на отказные ситуации.<br><br>Требования,
 связанные с безопасностью, - это часть системных требований, которые 
являются входной информацией для процессов жизненного цикла ПО. Для 
гарантии правильной реализации требований, связанных с безопасностью, 
системные требования должны содержать (или ссылаются на):<br><br>- описание системы и определение аппаратуры;<br><br>-
 системные требования, относящиеся непосредственно к ПО, включая 
функциональные требования, требования по эффективности и требования, 
связанные с безопасностью;<br><br>- уровень(ни) ПО и информацию, подтверждающую их определение, отказные ситуации, их категории и функции, выполняемые ПО;<br><br>-
 стратегии обеспечения безопасности и ограничения проекта, включая 
методы проектирования, такие как использование разбиения, 
многоверсионного неидентичного ПО, избыточности или мониторинга 
безопасности.<br><br>Процессы жизненного цикла системы могут также 
определять требования к процессам жизненного цикла ПО, которые 
необходимы для поддержки верификации системы.<br></p><p style="text-align: justify;">5.1.2 Информационный поток от процессов ПО к системным процессам<br><br>Процесс
 оценки безопасности системы должен определить влияние проектирования и 
реализации ПО на безопасность системы в целом, используя информацию, 
создаваемую процессами жизненного цикла ПО. Эта информация включает в 
себя идентификацию областей распространения отказов, требования к ПО, 
архитектуру ПО и источники ошибок, которые могут быть обнаружены или 
исключены посредством специальной организации архитектуры ПО или путем 
использования инструментальных средств, или другими методами, 
используемыми в процессе проектирования ПО. Для процесса оценки 
безопасности системы должна быть обеспечена трассируемость между 
системными требованиями и результатами проектирования ПО.<br><br>Изменения,
 внесенные при модификации ПО, могут воздействовать на безопасность 
системы и, следовательно, также должны быть идентифицированы для оценки 
безопасности системы.<br><br></p><h3>5.2 Отказные ситуации и уровни ПО</h3><p style="text-align: justify;"><br>Категорию
 отказной ситуации системы устанавливают, определяя серьезность 
проявления отказной ситуации на объекте управления. Ошибка в ПО может 
вызвать сбой, который приведет к отказной ситуации. Следовательно, 
необходимый для безопасного функционирования уровень ПО определяют 
исходя из отказных ситуаций системы.<br></p><p style="text-align: justify;">5.2.1 Классификация отказных ситуаций<br><br>Категория А - катастрофическая: отказная ситуация, которая препятствует безопасному функционированию объекта управления.<br><br>Категория
 В - опасная/критическая: отказная ситуация, которая приводит к 
уменьшению возможностей объекта управления или способности персонала 
справиться с неблагоприятными эксплуатационными режимами, при которых 
возникают:<br><br>- большое снижение гарантийных резервов или функциональных возможностей;<br><br>- крайне тяжелое положение или перегрузки, которые могут вызвать неточное или неполное выполнение задачи;<br><br><span style="display:inline-block; width:30px"></span>- неблагоприятные или потенциально фатальные воздействия для окружающей среды.<br><br>Категория
 С - существенная: отказная ситуация, которая приводит к снижению 
возможностей объекта управления или способности персонала справиться с 
неблагоприятными эксплуатационными режимами, при продолжении которых 
могут возникать, например, большое снижение гарантийных резервов или 
функциональных возможностей, перегрузки или условия, вызывающие 
ухудшение работоспособности персонала.<br><br>Категория D - 
несущественная: отказная ситуация, незначительно уменьшающая 
безопасность объекта и требующая действий персонала, которые осуществимы
 в пределах их возможностей. Несущественная отказная ситуация может 
включать в себя, например, незначительное уменьшение гарантийных 
резервов или функциональных возможностей, незначительное увеличение 
рабочей нагрузки персонала или некоторое неудобство для персонала.<br><br>Категория
 Е - невлияющая: отказная ситуация, которая не воздействует на 
эксплуатационные возможности объекта управления или не увеличивает 
рабочую нагрузку персонала.<br></p><p style="text-align: justify;">5.2.2 Определения уровня ПО<br><br>Уровень
 ПО определяется возможностью возникновения потенциальных отказных 
ситуаций, выявленных процессом оценки безопасности системы, в результате
 сбоев в ПО. Уровень ПО означает, что трудозатраты, необходимые для 
доказательства согласованности с требованиями сертификации, меняются в 
зависимости от категории отказной ситуации.<br><br>Уровень А: ПО, 
аномальное поведение которого, как показано процессом оценки 
безопасности системы, вызвало бы (или способствовало бы) 
возникновение(ю) отказа функционирования системы, приводящее к 
катастрофической отказной ситуации для объекта управления.<br><br>Уровень
 В: ПО, аномальное поведение которого, как показано процессом оценки 
безопасности системы, вызвало бы (или способствовало бы) 
возникновение(ю) отказа функционирования системы, приводящее к 
опасной/критической отказной ситуации для объекта управления.<br><br>Уровень
 С: ПО, аномальное поведение которого, как показано процессом оценки 
безопасности системы, вызвало бы (или способствовало бы) 
возникновение(ю) отказа функционирования системы, приводящее к 
существенной отказной ситуации для объекта управления.<br><br>Уровень D:
 ПО, аномальное поведение которого, как показано процессом оценки 
безопасности системы, вызвало бы (или способствовало бы) 
возникновение(ю) отказа функционирования системы, приводящее к 
несущественной отказной ситуации для объекта управления.<br><br>Уровень 
Е: ПО, аномальное поведение которого, как показано процессом оценки 
безопасности системы, вызвало бы (или способствовало бы) 
возникновение(ю) отказа функционирования системы, не влияющее на 
эксплуатационные возможности объекта и работоспособность персонала. Если
 для ПО был установлен сертифицирующей организацией уровень Е, то в 
дальнейшем для сертификации такого ПО никакие требования данного 
документа не являются обязательными.<br></p><p style="text-align: justify;">5.2.3 Назначение уровня ПО<br><br>Первоначально
 процесс оценки безопасности системы присваивает уровень(ни) ПО, 
соответствующий(ие) компонентам ПО конкретной системы. При проведении 
данного назначения учитывают воздействие отказов как потери функции или 
неправильного функционирования.<br><br>Примечание - Если систему или 
ЭКПО разрабатывают для нескольких построений, то компоненту ПО данного 
построения может быть назначен более высокий уровень, чем требуется 
процессом оценки безопасности системы, если использование этого 
компонента в других построениях требует такого уровня.<br><br><br>Если 
аномальное поведение компонента ПО вызвано более чем одной отказной 
ситуацией, уровень ПО для данного компонента ПО определяет наиболее 
серьезная категория отказной ситуации. Существуют архитектурные 
стратегии (см. 5.5), использование которых в процессе проектирования 
системы может привести к изменению назначенного уровня ПО.<br><br>Системная
 функция может быть реализована одним или несколькими компонентами ПО. 
Параллельная реализация - это такая реализация, когда функция системы 
реализуется несколькими компонентами ПО. Тогда для возникновения 
отказной ситуации требуется аномальное поведение более чем одного 
компонента. При параллельной реализации по крайней мере один компонент 
ПО будет иметь уровень ПО, связанный с наиболее серьезной категорией 
отказной ситуации этой функции системы. Уровень ПО для других 
компонентов определяют, используя категорию отказной ситуации, связанную
 с потерей этой функции. Примеры таких реализации описаны в 5.5.2 и 
5.5.3.<br><br>Последовательная реализация - это такая реализация, когда 
несколько компонентов ПО используются для реализации функции системы 
так, что аномальное поведение любого из компонентов может привести к 
отказной ситуации. При такой реализации все компоненты ПО будут иметь 
уровень ПО, связанный с наиболее серьезной категорией отказной ситуации 
этой функции системы.<br><br>Разработка ПО с заданным уровнем не 
подразумевает оценку интенсивности отказов для этого ПО. Таким образом, 
уровни ПО или оценки надежности ПО, основанные на уровнях ПО, не могут 
использоваться процессом оценки безопасности системы в отличие от 
использования интенсивности отказов аппаратуры.<br><br></p><h3>5.3 Анализ системных требований</h3><p style="text-align: justify;"><br>Разработчик
 должен принимать участие в анализе требований к системе. Если систему 
разрабатывают для нескольких различных построений, ее требования не 
могут быть полностью определены до завершения конечного построения. В 
этом случае разработчик должен идентифицировать подмножество требований 
системы, которые будут определены в каждом построении, и подмножество, 
которое будет реализовано в каждом из построений. Анализ требований к 
системе для данного построения следует интерпретировать так, чтобы 
определять требования к системе, идентифицированные для данного 
построения.<br></p><p style="text-align: justify;">5.3.1 Анализ информации о потребностях пользователя<br><br>Разработчик
 должен принимать участие в анализе обеспечиваемой заказчиком 
информации, необходимой для достижения понимания потребностей 
пользователя. Эта информация может быть представлена в форме 
предложений, обзоров, сообщений о дефектах/изменениях, обратной связи к 
прототипам, интервью о потребностях пользователя или любой другой форме.<br></p><p style="text-align: justify;">5.3.2 Эксплуатационная концепция<br><br>Разработчик
 должен принимать участие в определении и документировании 
эксплуатационной концепции для системы. Результат данной работы должен 
быть представлен в качестве документа "Описание эксплуатационной 
концепции" (12.32).<br></p><p style="text-align: justify;">5.3.3 Требования к системе<br><br>Разработчик
 должен принимать участие в определении и документировании требований, 
которым должна удовлетворять система, и методов, которые необходимо 
использовать в целях гарантирования выполнения каждого требования. 
Результат данной работы должен быть представлен в качестве документа 
"Спецификация системы/подсистемы" (12.12). В зависимости от условий 
контракта требования относительно интерфейсов системы могут быть 
включены в Спецификацию системы/подсистемы или в Спецификацию требований
 к интерфейсу (12.14).<br><br>Если система состоит из подсистем, то 
предполагают, что работы, указанные в 5.3.3, будут выполнены итеративно с
 работами, указанными в 5.4 (проектирование системы) для определения 
требований к системе, проектирования системы и идентификации ее 
подсистем, определения требований к этим подсистемам, проектировании 
подсистем, идентификации их компонентов и т.д.<br></p><p style="text-align: justify;">5.3.4 Модифицируемое пользователем ПО. ПО с возможностью выбора вариантов. Коммерчески доступное ПО.<br><br>Если
 системные требования предусматривают возможность модификации, 
осуществляемой пользователем, то пользователи могут изменять ПО в 
заданном диапазоне без рассмотрения, осуществляемого сертифицирующей 
организацией. В этом случае системные требования должны определить 
механизмы, которые устраняют влияние на безопасность системы 
осуществляемой пользователем модификации независимо от того, как она 
выполнена. ПО, обеспечивающее защиту, должно иметь уровень, такой как у 
функции, которую оно защищает от ошибок в модифицируемом компоненте. При
 проведении модификации пользователем последний должен нести 
ответственность за все аспекты модифицируемого им ПО, например 
управление конфигурацией, обеспечение качества и верификацию.<br><br>Системные
 требования к ПО с возможностью выбора вариантов должны определить 
средства для гарантии того, что не может быть сделан несанкционированный
 выбор.<br><br>Коммерчески доступное ПО, включаемое в состав системы, 
должно удовлетворять требованиям данного документа. Если существуют 
несоответствия в документах жизненного цикла коммерчески доступного ПО, 
то информация, представленная в них, должна быть расширена, чтобы 
удовлетворить требования данного документа.<br></p><p style="text-align: justify;">5.3.5 Системные требования для ПО, загружаемого в полевых условиях<br><br>Загружаемое
 в полевых условиях прикладное ПО - программный продукт или таблицы 
данных, которые могут быть загружены без демонтажа системы или 
оборудования. Требования, определяемые безопасностью, связанные с 
функцией загрузки данных ПО, являются частью системных требований. Если 
нечеткое представление функции загрузки данных ПО может вызвать отказную
 ситуацию в системе, то требования, связанные с обеспечением 
безопасности для функции загрузки ПО, должны быть определены в системных
 требованиях. Требования обеспечения безопасности системы для ПО, 
загружаемого в полевых условиях, следующие:<br><br>- обнаружение разрушенного или частично загруженного ПО;<br><br>- обнаружение загрузки несоответствующей конфигурации ПО;<br><br>- совместимость аппаратных и программных средств;<br><br>- совместимость компонентов ПО;<br><br>- совместимость типа объекта и ПО;<br><br>- отображение потери или искажения идентификации конфигурации ПО.<br><br>Требования к ПО, загружаемому в полевых условиях:<br><br>-
 если процессом оценки безопасности системы не определено специально, то
 механизму обнаружения разрушенного или частично загруженного ПО должна 
быть установлена такая же категория отказной ситуации или уровень ПО, 
как наиболее серьезной отказной ситуации или наиболее высокому уровню 
ПО, связанному с функцией, которая использует загрузку ПО;<br><br>- если
 для системы определен режим, заданный по умолчанию, в случае, когда 
загружено несоответствующее ПО или данные, то для каждого выделенного 
компонента системы должны быть указаны требования по обеспечению 
безопасности, определяющие действия в этом режиме;<br><br>- механизм 
загрузки ПО должен включать в себя программные и/или аппаратные средства
 для обнаружения некорректно загруженного ПО и обеспечивать защиту, 
определяемую отказной ситуацией;<br><br>- если ПО представляет собой 
часть встроенного бортового механизма отображения, являющегося средством
 гарантии того, что объект соответствует сертифицированной конфигурации,
 то такое ПО должно быть либо разработано как ПО с самым высоким уровнем
 из того, которое должно быть загружено, либо процесс оценки обеспечения
 безопасности системы должен подтверждать целостность конфигурации ПО.<br></p><p style="text-align: justify;">5.3.6 Анализ системных требований при верификации ПО<br><br>Системные
 требования разрабатывают на основе эксплуатационных требований к 
системе и требований, связанных с обеспечением безопасности, которые 
являются выходным результатом процесса оценки безопасности системы.<br><br>В системных требованиях для прикладного ПО устанавливают следующие характеристики ПО:<br><br>- ПО должно выполнять специфицированные функции, как определено системными требованиями;<br><br>-
 ПО не должно проявлять аномального поведения, не определяемого 
процессом оценки безопасности системы. Должны быть сформулированы 
дополнительные системные требования для обработки возможного аномального
 поведения.<br><br>Системные требования должны быть переработаны затем в
 требования верхнего уровня к ПО, которые проверяются работами процесса 
верификации ПО.<br></p><p style="text-align: justify;">5.3.7 Анализ ПО при верификации системы<br><br>Требования
 по выполнению верификации системы выходят за область применения 
настоящего стандарта. Однако процессы жизненного цикла ПО поддерживают 
процесс верификации системы и взаимодействуют с ним. Детали 
проектирования ПО, касающиеся функциональных возможностей системы, 
должны быть доступными при выполнении верификации системы. Верификация 
системы может обеспечивать значительное покрытие структуры кода. Для 
достижения критериев тестового покрытия, описанных в Плане верификации 
ПО, может быть использован анализ покрытия ПО тестами верификации 
системы.<br><br></p><h3>5.4 Проектирование системы</h3><p style="text-align: justify;"><br>Разработчик
 должен принимать участие в проектировании системы. Если систему 
разрабатывают для нескольких различных построений, то ее проект не может
 быть полностью определен до завершения всех построений. Разработчик 
должен идентифицировать части проекта системы, которые будут определены в
 каждом построении.<br></p><p style="text-align: justify;">5.4.1 Проектные решения системного уровня<br><br>Разработчик
 должен принимать участие в определении и документировании проектных 
решений системного уровня (таких, как решения, относящиеся к 
проектированию режимов работы системы, и решения, влияющие на выбор и 
проектирование компонентов системы).<br><br>Результаты должны быть 
включены в раздел проектных решений системного уровня документа 
"Описание проекта системы/подсистемы" (12.15). В зависимости от условий 
контракта часть проекта, имеющая отношение к интерфейсам, может быть 
включена в Описание проекта системы/подсистемы или в Описание проекта 
интерфейса (12.17), а часть проекта, имеющая отношение к базам данных, -
 в Описание проекта системы/подсистемы или в Описание проекта базы 
данных (12.18).<br><br>Примечание - Проектные решения являются 
прерогативой разработчика, если они формально не преобразованы в 
требования в процессе выполнения контракта. Разработчик ответствен за 
выполнение всех требований и демонстрацию этого выполнения посредством 
квалификационного тестирования (8.5.4). Реализация проектных решений, 
действующих как "внутренние требования" разработчика, должна быть 
подтверждена внутренним тестированием разработчика, выполнение которого 
нет необходимости демонстрировать заказчику.<br><br></p><p style="text-align: justify;">5.4.2 Проектирование архитектуры системы<br><br>Разработчик
 должен участвовать в определении и документировании проекта архитектуры
 системы (идентификации компонентов системы, их интерфейсов и концепции 
их совместного выполнения) и прослеживании соответствия между 
компонентами системы и системными требованиями. Результат этих работ 
должен быть включен в документ "Описание проекта системы/подсистемы" 
(12.15). В зависимости от условий контракта часть проекта, имеющая 
отношение к интерфейсам, может быть включена в Описание проекта 
системы/подсистемы или в Описание проекта интерфейса (12.17).<br><br></p><h3>5.5 Стратегии архитектурного проектирования системы</h3><p style="text-align: justify;"><br>В
 процессе оценки безопасности системы устанавливают, как архитектурное 
проектирование системы предотвращает аномальное поведение ПО при 
появлении отказных ситуаций для системы. Уровень ПО назначают в 
соответствии с наиболее серьезной категорией возможных отказных 
ситуаций. Далее описаны некоторые архитектурные стратегии, которые 
позволяют ограничивать воздействие ошибок, обнаруживать ошибки и 
обеспечивать приемлемую реакцию системы для устранения их воздействия. 
Эти архитектурные стратегии не следует рассматривать как 
предпочтительные или обязательные.<br></p><p style="text-align: justify;">5.5.1 Разбиение<br><br>Стратегию
 разбиения применяют для обеспечения изоляции между функционально 
независимыми компонентами ПО, чтобы предотвратить и/или изолировать 
дефекты и потенциально уменьшить трудозатраты процесса верификации ПО. 
Если с помощью разбиения обеспечивают защиту от ошибок, то уровень ПО 
для каждого полученного при разбиении компонента следует назначать в 
соответствии с наиболее серьезной категорией отказной ситуации, 
связанной с этим компонентом.<br></p><p style="text-align: justify;">5.5.2 Многоверсионное неидентичное ПО<br><br>Многоверсионное
 неидентичное ПО является стратегией проектирования, которая 
предусматривает создание двух или более компонентов ПО для реализации 
одной и той же функции способами, исключающими источники общих ошибок в 
нескольких компонентах. Вместо термина многоверсионное неидентичное ПО 
могут быть использованы также термины многоверсионное ПО, неидентичное 
ПО, N-версионное ПО или разнесенная разработка ПО.<br><br>Конфигурация 
аппаратуры, которая обеспечивает выполнение многоверсионного 
неидентичного ПО, должна быть определена в системных требованиях. 
Степень неидентичности и, следовательно, степень защиты обычно не 
измеряют.<br></p><p style="text-align: justify;">5.5.3 Мониторинг безопасности<br><br>Мониторинг
 безопасности применяют как средство защиты от конкретных отказных 
ситуаций с помощью прямого мониторинга функций, которые могут привести к
 отказной ситуации. Функции мониторинга могут быть реализованы 
аппаратными средствами, программными средствами или комбинацией 
аппаратных и программных средств.<br><br>Использование методов 
мониторинга безопасности может понизить уровень ПО, выполняющего функцию
 контроля, до уровня, связанного с потерей реализуемой данным ПО функции
 системы. Существуют три важных параметра мониторинга, которые должны 
быть определены, чтобы обеспечить снижение уровня:<br><br>- уровень ПО: 
ПО, которое осуществляет мониторинг безопасности, предписывается 
уровень, связанный с наиболее серьезной категорией отказной ситуации для
 контролируемой функции;<br><br>- покрытие отказов системы: оценка 
покрытия отказов системы с помощью мониторинга безопасности гарантирует,
 что проект монитора и его реализация таковы, что отказы, которые 
предполагается обнаружить, будут обнаружены при всех возможных условиях;<br><br>-
 независимость функции и монитора: монитор и защитный механизм не должны
 активизироваться теми же самыми отказными ситуациями, которые вызывают 
опасность.<br><br></p><h3>5.6 Библиотека разработки ПО</h3><p style="text-align: justify;"><br>Разработчик
 должен создать, контролировать и сопровождать Библиотеку разработки ПО,
 чтобы обеспечить упорядоченную разработку и последующую поддержку ПО. 
Библиотека разработки ПО может быть частью среды разработки ПО и среды 
верификации. Разработчик должен сопровождать Библиотеку разработки ПО на
 протяжении действия контракта. <span style="display:inline-block; width:20px"></span><br></p><h3>5.7 Файлы разработки ПО</h3><p style="text-align: justify;"><br>Разработчик
 должен создать, контролировать и сопровождать файлы разработки ПО для 
каждого модуля ПО или логически связанной группы модулей ПО, для каждого
 ЭКПО и, если применимо, для логических групп ЭКПО, для подсистем и для 
полной системы. Разработчик должен записывать информацию относительно 
разработки ПО в соответствующем файле разработки ПО и должен 
сопровождать файл разработки ПО на протяжении действия контракта.<br><br></p><h3>5.8 Непоставляемое ПО</h3><p style="text-align: justify;"><br>Разработчик
 может использовать непоставляемое ПО в разработке поставляемого ПО в 
том случае, если функционирование и поддержка поставляемого ПО после 
поставки заказчику не зависят от непоставляемого ПО или предусмотрены 
меры, гарантирующие, что заказчик имеет или может получить то же самое 
ПО. Разработчик должен гарантировать, что все непоставляемое ПО, 
используемое в проекте, выполняет предназначенные функции.<br><br></p><h3>5.9 Подготовка к использованию ПО</h3><p style="text-align: justify;"><br>Разработчик
 должен запланировать, какое конкретно ПО поставляется пользователю в 
рамках каждого построения, и объем устанавливаемого ПО (например, полная
 установка или установка только части, выбранной заказчиком). Подготовка
 к использованию ПО в каждом построении должна включать в себя все 
действия, необходимые для выполнения Плана установки для этого 
построения.<br></p><p style="text-align: justify;">5.9.1 Подготовка исполняемого ПО<br><br>Разработчик
 должен подготовить к установке на каждом рабочем месте пользователя 
исполняемое ПО, включая все файлы пакетного режима, командные файлы, 
файлы данных или другие файлы ПО, необходимые для установки и 
эксплуатации ПО на объектном компьютере. Описания всех требуемых 
элементов должны быть включены в раздел, посвященный исполняемому ПО 
документа "Спецификация программного средства" (12.27).<br></p><p style="text-align: justify;">5.9.2 Подготовка описания версии для пользователя<br><br>Разработчик
 должен идентифицировать и зарегистрировать каждую версию ПО, 
предназначенную для конкретного пользователя. Вся необходимая информация
 должна быть включена в документ "Описание версии ПО" (12.39).<br></p><p style="text-align: justify;">5.9.3 Подготовка руководств пользователя<br></p><p style="text-align: justify;">Разработчик должен подготовить следующие руководства пользователя:<br><br>-
 Руководство пользователя ПО. В данном руководстве разработчик должен 
идентифицировать и зарегистрировать информацию, необходимую для работы 
пользователям ПО (людям, которые и эксплуатируют ПО, и используют 
результаты его работы). Вся информация должна быть включена в документ 
"Руководство пользователя ПО" (12.38).<br><br>- Руководство по 
входной/выходной информации ПО. В данном руководстве разработчик должен 
идентифицировать и зарегистрировать информацию, необходимую тем, кто 
будет формировать входные данные и получать выходные данные при 
эксплуатации ПО в компьютерном центре или другой централизованной или 
сетевой установке ПО. Вся информация должна быть включена в документ 
"Руководство по входной/выходной информации ПО" (12.37).<br><br>- 
Руководство оператора ПО. В данном руководстве разработчик должен 
идентифицировать и зарегистрировать информацию, необходимую для 
эксплуатации ПО в компьютерном центре или другой централизованной или 
сетевой установке ПО. Вся информация должна быть включена в документ 
"Руководство оператора ПО" (12.36).<br><br>- Руководство по эксплуатации
 компьютера. В данном руководстве разработчик должен идентифицировать и 
зарегистрировать всю информацию, необходимую для эксплуатации 
компьютера, на котором будет выполнено ПО. Эта информация должна быть 
включена в документ "Руководство по эксплуатации компьютера" (12.33).<br><br>Примечание
 - Не все перечисленные руководства будут необходимы для каждой системы.
 Заказчик на основании информации, полученной от разработчика, должен 
определить, какие руководства являются необходимыми для данной системы, и
 требовать разработки только этих руководств. Все документы допускают 
замену на существующие коммерческие или другие руководства, которые 
содержат требуемую информацию. Руководства, перечисленные в 5.9.3, 
обычно разрабатываемые параллельно с разработкой ПО, должны быть готовы 
для использования при тестировании ЭКПО.<br><br></p><p style="text-align: justify;">5.9.4 Установка на рабочих местах пользователя<br><br>Разработчик должен:<br></p><p style="text-align: justify;">-
 установить исполняемое ПО и проверить функционирование всех его 
режимов, определенных в контракте, на рабочих местах пользователя;<br><br>- обеспечить обучение пользователей в соответствии с контрактом;<br><br>- обеспечить другую необходимую помощь пользователям в соответствии с контрактом.<br><br></p><h3>5.10 Подготовка к передаче ПО</h3><p style="text-align: justify;"><br>Разработчик
 должен идентифицировать ПО, передаваемое агентству поддержки, в составе
 каждого построения. Подготовка к передаче ПО каждого построения должна 
включать в себя действия, определенные Планами передачи данного 
построения.<br></p><p style="text-align: justify;">5.10.1 Подготовка исполняемого ПО<br><br>Разработчик
 должен подготовить исполняемое ПО для передачи в организацию, 
осуществляющую поддержку, включая файлы пакетного режима, командные 
файлы, файлы данных или другие файлы ПО, необходимые для установки и 
эксплуатации ПО на объектном компьютере. Вся необходимая информация 
должна быть включена в раздел документа "Спецификация программного 
средства" (12.27).<br></p><p style="text-align: justify;">5.10.2 Подготовка исходных файлов<br><br>Разработчик
 должен подготовить исходные файлы, которые должны быть переданы в 
организацию, осуществляющую поддержку: файлы пакетного режима, командные
 файлы, файлы данных и другие файлы ПО, необходимые для регенерации 
исполняемого ПО. Вся необходимая информация должна быть включена в 
раздел, описывающий исходные файлы, документа "Спецификация программного
 средства" (12.27).<br></p><p style="text-align: justify;">5.10.3 Подготовка описания версии для организации, осуществляющей поддержку<br><br>Разработчик
 должен идентифицировать и зарегистрировать версию ПО для организации, 
осуществляющей поддержку. Вся необходимая информация должна быть 
включена в документ "Описание версии ПО" (12.39).<br></p><p style="text-align: justify;">5.10.4 Подготовка проекта ЭКПО для построения ПО и связанной с ним информации<br><br>Разработчик
 должен модифицировать описание проекта каждого ЭКПО, чтобы оно 
соответствовало конкретному построению ПО, и должен определить и 
зарегистрировать следующее: методы, которые нужно использовать, чтобы 
проверить копии ПО; использование аппаратных ресурсов компьютера для 
ЭКПО; другую информацию, необходимую для поддержки ПО; прослеживание 
соответствия между исходными файлами ЭКПО и модулями ПО и между объемами
 используемых аппаратных ресурсов компьютера и требованиями ЭКПО 
относительно них. Все результаты должны быть включены в разделы, 
посвященные аттестации, поддержке ПО и прослеживанию соответствия, 
документа "Спецификация программного средства" (12.27).<br></p><p style="text-align: justify;">5.10.5 Модификация описания проекта системы<br><br>Разработчик
 должен участвовать в модификации описания проекта системы в 
соответствии с конкретным построением системы. Все результаты должны 
быть включены в документ "Описание проекта системы/подсистемы" (12.15).<br></p><p style="text-align: justify;">5.10.6 Подготовка руководств поддержки<br><br>Разработчик должен подготовить следующие руководства поддержки:<br><br>-
 Руководство по программированию для компьютера. Разработчик должен 
идентифицировать и зарегистрировать информацию, необходимую для 
программирования на компьютерах, на которых будет создаваться и 
выполняться ПО. Вся необходимая информация должна быть включена в 
документ "Руководство по программированию для компьютера" (12.34).<br><br>-
 Руководство поддержки программно-аппаратных средств. Разработчик должен
 идентифицировать и зарегистрировать информацию, необходимую для 
программирования и перепрограммирования программно-аппаратных устройств.
 Вся необходимая информация должна быть включена в документ "Руководство
 поддержки программно-аппаратных средств" (12.35).<br><br>Примечание - 
Перечисленные руководства не являются необходимыми для всех систем. 
Заказчик на основании данных, полученных от разработчика, должен 
определить, какие руководства являются необходимыми для данной системы, и
 требовать разработки только этих руководств. Все документы допускают 
замену на коммерческие или другие руководства, которые содержат 
требуемую информацию. Перечисленные руководства дополняют Описание 
проекта системы/подсистемы и Спецификации программного средства, которые
 служат как основные источники информации для поддержки ПО. Руководства 
пользователя, перечисленные в 5.9.3, также полезны для персонала, 
осуществляющего поддержку.<br><br></p><p style="text-align: justify;">5.10.7 Передача организации, осуществляющей поддержку<br><br>Разработчик должен:<br><br>- установить и проверить поставляемое ПО в среде поддержки, обозначенной в контракте;<br><br>-
 продемонстрировать заказчику возможность регенерации 
(компиляции/редактирования связей/загрузки) и сопровождения 
поставляемого ПО с использованием коммерчески доступного, находящегося в
 собственности у заказчика или поставляемого по контракту ПО и 
аппаратных средств, указанных в контракте или одобренных заказчиком;<br><br>- обеспечить обучение персонала организации, осуществляющей поддержку, в соответствии с контрактом;<br><br>- обеспечить любую иную помощь организации, осуществляющей поддержку, в соответствии с контрактом.<br><br></p><h3>5.11 Совместные технические и административные просмотры</h3><p style="text-align: justify;"></p><p style="text-align: justify;">5.11.1 Совместные технические просмотры<br><br>Разработчик
 должен принимать участие в совместных с заказчиком технических 
просмотрах, проводимых в течение всего периода выполнения контракта. В 
этих просмотрах как со стороны разработчика, так и со стороны заказчика 
должны принимать участие лица с достаточными техническими знаниями о 
разрабатываемом ПО. Время и место проведения совместных просмотров 
должны быть запланированы разработчиком и одобрены заказчиком. 
Назначение совместных технических просмотров:<br><br>- просмотр и оценка состояния разработки ПО;<br><br>- анализ и оценка предложенных технических решений;<br><br>- рассмотрение критических для выполнения контракта ситуаций, связанных с техническими, стоимостными и временными аспектами;<br><br>- достижение согласованных стратегий предотвращения критических ситуаций в рамках предоставленных полномочий;<br><br>- идентификация проблем, которые будут рассмотрены на совместных административных просмотрах;<br><br>- гарантия постоянной связи между заказчиком и техническим персоналом разработчика.<br></p><p style="text-align: justify;">5.11.2 Совместные административные просмотры<br><br>Разработчик
 должен принимать участие в совместных с заказчиком административных 
просмотрах, проводимых в течение периода выполнения контракта. В этих 
просмотрах как со стороны разработчика, так и со стороны заказчика 
должны принимать участие лица, обладающие полномочиями для принятия 
решений о стоимостных и временных затратах. Назначение совместных 
административных просмотров:<br><br>- информирование администрации 
разработчика и заказчика относительно состояния проекта, о выбранных 
направлениях, о достигнутых технических соглашениях и общем состоянии 
разработки ПО;<br><br>- разрешение проблем, которые не могли быть решены во время совместных технических просмотров;<br><br>-
 достижение согласованных стратегий предотвращения критических ситуаций,
 которые не могли быть выработаны во время совместных технических 
просмотров;<br><br>- идентификация и решение проблем административного 
уровня и критических ситуаций, не рассмотренных во время совместных 
технических просмотров;<br><br>- получение заключения и одобрения заказчика, необходимого для своевременного выполнения проекта.<br><br></p><h3>5.12 Другие действия</h3><p style="text-align: justify;"></p><p style="text-align: justify;">5.12.1 Контроль критических ситуаций<br><br>Разработчик
 должен осуществлять контроль за критическими для выполнения контракта 
ситуациями, которые могут возникнуть во время разработки ПО. Разработчик
 должен выявить, идентифицировать и проанализировать потенциальные 
технические, стоимостные или временные критические ситуации; разработать
 стратегии для предотвращения или устранения таких ситуаций; 
зарегистрировать возможные критические ситуации и стратегии их 
предотвращения в Плане разработки ПО и реализовать эти стратегии в 
соответствии с Планом.<br></p><p style="text-align: justify;">5.12.2 Показатели управления разработкой ПО<br><br>Разработчик
 должен использовать показатели управления разработкой ПО для поддержки 
управления процессом разработки ПО и уведомления заказчика о состоянии 
разработки. Разработчик должен идентифицировать данные, необходимые для 
определения показателей, методы, которые нужно использовать для 
интерпретации и применения этих данных, и механизм регистрации. 
Разработчик должен включить эту информацию в План разработки ПО и 
использовать показатели управления разработкой в соответствии с Планом.<br></p><p style="text-align: justify;">5.12.3 Защита и секретность<br><br>Разработчик должен удовлетворять требования защиты и секретности, определенные в контракте.<br></p><p style="text-align: justify;">5.12.4 Управление субподрядчиком<br><br>Если
 в проекте принимают участие субподрядчики, разработчик должен включить в
 контракт все договорные требования, необходимые для гарантии, что ПО 
будет разработано в соответствии с требованиями контракта.<br></p><p style="text-align: justify;">5.12.5 Связь с агентством независимой верификации ПО<br><br>Разработчик должен поддерживать постоянную связь с агентством независимой верификации ПО, если это определено в контракте.<br></p><p style="text-align: justify;">5.12.6 Координация действий с соисполнителями<br><br>Разработчик должен координировать действия соисполнителей, рабочих групп и групп связи в соответствии с контрактом.<br></p><p style="text-align: justify;">5.12.7 Изменения в выполнении процессов проекта<br><br>Разработчик
 должен периодически оценивать процессы жизненного цикла ПО, 
используемые в данном проекте, для определения их пригодности и 
эффективности. Основываясь на этих оценках, разработчик должен 
идентифицировать любые необходимые и полезные изменения в выполнении 
процессов, идентифицировать эти изменения для заказчика в форме 
предлагаемых модификаций к Плану разработки ПО и в случае их одобрения 
должен реализовать эти изменения в проекте.<br><br></p><h2>6 Процесс планирования ПО</h2><h3>6.1 Цели процесса планирования ПО</h3><p style="text-align: justify;"><br>Назначение
 процесса планирования ПО состоит в том, чтобы определить методы 
создания такого ПО, которое позволит реализовать системные требования и 
обеспечить уровень качества, соответствующий требованиям настоящего 
стандарта. Таблица А.1 содержит резюме целей и результатов процесса 
планирования ПО в зависимости от уровня ПО.<br><br>Цели процесса планирования ПО:<br></p><p style="text-align: justify;">а)
 определить конкретные виды работ процессов разработки и интегральных 
процессов жизненного цикла, которые позволят реализовать системные 
требования и создать ПО требуемого уровня (6.2);<br></p><p style="text-align: justify;">б)
 определить модели жизненного цикла ПО, включающие в себя описание 
взаимосвязей между процессами, последовательность их выполнения, 
механизмы обратной связи и критерии перехода (4.1);<br></p><p style="text-align: justify;">в)
 выбрать среду поддержки жизненного цикла, включающую в себя методы и 
инструментальные средства, которые нужно использовать для выполнения 
работ в каждом процессе жизненного цикла (6.4);<br></p><p style="text-align: justify;">г) в случае необходимости рассмотреть дополнительные аспекты разработки, обсуждаемые в разделе 13;<br></p><p style="text-align: justify;">д) определить стандарты разработки, позволяющие обеспечить требования по безопасности системы в части разрабатываемого ПО (6.5);<br></p><p style="text-align: justify;">е) разработать документы процесса планирования ПО в соответствии с 6.3 и разделом 12;<br></p><p style="text-align: justify;">ж) координировать разработку и изменение планов ПО (6.3).<br><br></p><h3>6.2 Состав работ, выполняемых в процессе планирования ПО</h3><p style="text-align: justify;"><br>В процессе планирования ПО должны быть выполнены следующие работы:<br><br>-
 разработка планов создания ПО и передача их исполнителям, 
осуществляющим процессы разработки и интегральные процессы (см. 
требования 11.1);<br><br>- определение и выбор стандартов разработки ПО, которые будут использованы для данного проекта;<br><br>- выбор методов и инструментальных средств, которые позволят в процессах разработки предотвратить внесение ошибок в ПО;<br><br>-
 обеспечение координации между планами разработки ПО и планами 
интегральных процессов для получения согласованных стратегий выполнения 
различных процессов жизненного цикла;<br><br>- определение процедуры пересмотра и уточнение планов по мере развития проекта;<br><br>-
 выбор методов и инструментальных средств, позволяющих предотвратить и 
обнаружить ошибки и обеспечивающих безопасность системы в случае 
использования многоверсионного неидентичного ПО;<br><br>- если 
предполагается использование отключенного кода (7.4.3), то в процессе 
планирования должно быть описано, как отключенный код будет определен, 
верифицирован и обработан для обеспечения требований безопасности 
системы;<br><br>- если предполагается использовать модифицируемый 
пользователем код, то в стандартах и планах ПО в соответствии с 
требованиями 7.2.3 должны быть указаны используемые инструментальные 
средства и элементы данных;<br><br>- процесс планирования считают 
завершенным, если были выполнены контроль изменений и просмотры для всех
 планов ПО и стандартов разработки ПО (6.7).<br><br>До завершения 
процесса планирования могут быть инициированы другие процессы жизненного
 цикла ПО, если разработаны планы и стандарты для этих процессов.<br><br></p><h3>6.3 Типы планов ПО</h3><p style="text-align: justify;"><br>Цель
 создания планов ПО состоит в том, чтобы определить средства для 
удовлетворения требованиям настоящего стандарта, в том числе определить 
организационные подразделения, которые будут выполнять эти работы. В 
процессе планирования должны быть разработаны следующие типы планов ПО:<br><br>-
 План сертификации в части ПО (12.1) служит основным средством для 
согласования предложенных методов разработки с сертифицирующей 
организацией и определяет средства для выполнения требований данного 
документа;<br><br>- План разработки ПО (12.2) определяет используемые модели жизненного цикла ПО и среду разработки ПО;<br><br>- План верификации ПО (12.3) определяет средства, с помощью которых будут удовлетворены цели процесса верификации ПО;<br><br>- План квалификационного тестирования ПО (12.4) определяет порядок выполнения квалификационного тестирования ПО;<br><br>-
 План управления конфигурацией ПО (12.5) определяет средства, с помощью 
которых будут удовлетворены цели процесса управления конфигурацией ПО;<br><br>-
 План обеспечения качества ПО (12.6) определяет средства, с помощью 
которых будут удовлетворены цели процесса обеспечения качества ПО;<br><br>-
 План установки ПО (12.7) определяет действия по установке 
разработанного ПО на рабочих местах пользователей, включая подготовку и 
обучение персонала и адаптацию существующих систем;<br><br>- План 
передачи ПО (12.8) определяет аппаратное обеспечение и ПО, а также 
другие ресурсы, необходимые для поддержки жизненного цикла передаваемого
 ПО, и описывает планы разработчиков для поставки передаваемых элементов
 через организации, осуществляющие поддержку.<br><br>Планы ПО должны 
соответствовать требованиям настоящего стандарта, устанавливать 
процедуры, используемые для реализации требуемых изменений в ПО до его 
применения на сертифицируемом объекте. Такие изменения могут быть 
результатом обратной связи от других процессов и могут, в свою очередь, 
вызывать изменение планов ПО. Планы ПО должны определять критерии 
переходов между процессами жизненного цикла ПО путем указания:<br><br>- входных данных для процесса, включая обратную связь от других процессов;<br><br>- действий интегральных процессов, которые могут потребоваться для обработки этих входных данных;<br><br>- необходимых инструментальных средств, методов, стандартов и процедур.<br><br></p><h3>6.4 Планирование среды жизненного цикла ПО</h3><p style="text-align: justify;"><br>Цель
 планирования среды жизненного цикла ПО состоит в определении методов, 
инструментальных средств, процедур, языков программирования и аппаратных
 средств, которые будут использованы для выполнения процессов жизненного
 цикла ПО и подготовки документов жизненного цикла ПО (раздел 12). 
Основными элементами среды жизненного цикла ПО являются среда разработки
 ПО и среда верификации ПО.<br></p><p style="text-align: justify;">6.4.1 Среда разработки ПО<br><br>Среда
 разработки - важный фактор создания ПО высокого качества. Разработчик 
должен установить, контролировать и сопровождать среду разработки ПО. 
Разработчик должен гарантировать, что каждый элемент среды корректно 
выполняет предназначенные функции. Основные принципы выбора методов и 
инструментальных средств среды разработки ПО следующие:<br><br>- в 
процессе планирования ПО должна быть выбрана такая среда 
программирования, которая минимизирует потенциальный риск применения 
конечного программного средства;<br><br><span style="display:inline-block; width:30px"></span>-
 использование аттестованных инструментальных средств или комбинаций 
инструментальных средств и частей среды разработки ПО должно 
обеспечивать уверенность в том, что ошибка, внесенная одной частью, 
будет обнаружена другой. Среда разработки ПО считается приемлемой, если 
такие части используются согласованно;<br><br>- при определении работ 
процесса верификации ПО или стандартов разработки ПО необходимо 
учитывать уровень ПО для того, чтобы минимизировать число потенциальных 
ошибок, связанных со средой программирования;<br><br>- если 
сертификационное доверие к использованию определенной комбинации 
инструментальных средств достаточно высокое, то применение этих 
инструментальных средств должно быть определено в соответствующем плане;<br><br>-
 если дополнительные возможности (опции) инструментальных средств 
разработки ПО выбраны для использования в проекте, то эффект их 
применения должен быть рассмотрен и определен в соответствующем плане.<br></p><p style="text-align: justify;">6.4.2 Язык программирования и компилятор<br><br>В
 процессе планирования ПО должна быть оценена допустимость использования
 конкретного языка программирования и компилятора. Необходимо учитывать 
следующее:<br><br>- некоторые компиляторы имеют возможности 
оптимизировать эффективность объектного кода. Если тестовые варианты 
дают покрытие, требуемое в соответствии с уровнем ПО, правильность 
оптимизации не нуждается в проверке, в противном случае воздействие этих
 возможностей на структурное покрытие должно быть определено в 
соответствии с требованиями 8.4.4;<br><br>- для реализации определенных 
возможностей компиляторы для некоторых языков могут производить 
объектный код, который не является непосредственно трассируемым к 
исходному тексту, например инициализация, встроенное обнаружение ошибок 
или обработка исключительных ситуаций (8.4.4.2, перечисление б); процесс
 планирования ПО должен определить в соответствующем плане средства, 
обнаруживающие этот объектный код, и гарантировать его тестовое 
покрытие;<br><br>- если в течение жизненного цикла ПО вводится новая 
версия компилятора, редактора связей или загрузчика или изменены опции 
компилятора, результаты предыдущих тестов и анализ покрытия больше не 
могут быть рассмотрены как адекватные. Планирование верификации должно 
предусматривать средства повторной верификации в соответствии с 
требованиями раздела 8.<br></p><p style="text-align: justify;">6.4.3 Среда верификации ПО<br><br>Цель
 планирования среды верификации ПО состоит в том, чтобы определить 
методы, инструментальные средства, процедуры и аппаратные средства, 
которые будут использованы, чтобы проверить выходные результаты 
процессов разработки. Разработчик должен установить, контролировать и 
сопровождать среду верификации ПО. Разработчик должен гарантировать, что
 каждый элемент среды корректно выполняет предназначенные функции. 
Верификационное тестирование может быть выполнено на объектном 
компьютере, эмуляторе объектного компьютера или с использованием 
моделирования на инструментальном компьютере (интерпретатора). Основные 
требования следующие:<br><br>- эмулятор или интерпретатор в некоторых случаях требуется аттестовать как описано в 13.2;<br><br>-
 должны быть рассмотрены различия между результатами, полученными на 
объектном компьютере и эмуляторе или интерпретаторе, и воздействие этих 
различий на способности обнаруживать ошибки и проверять функциональные 
возможности; обнаружение тех ошибок, которые остаются невыявленными, 
необходимо обеспечивать другими процессами верификации ПО, которые 
должны быть определены в Плане верификации ПО. <span style="display:inline-block; width:20px"></span><br><span style="display:inline-block; width:20px"></span></p><h3>6.5 Стандарты разработки ПО</h3><p style="text-align: justify;"></p><p style="text-align: justify;"><br>Целью
 стандартов разработки ПО является определение правил и ограничений для 
процессов разработки. К стандартам разработки ПО относятся стандарты на 
требования к ПО, проектирование и кодирование ПО. Процесс верификации ПО
 использует эти стандарты для оценки соответствия фактических выходных 
данных некоторого процесса ожидаемым результатам. Стандарты разработки 
ПО должны:<br><br>- удовлетворять требованиям раздела 11;<br><br>- обеспечивать единообразие разработки компонентов ПО данного программного продукта или необходимого набора средств;<br><br>-
 исключать использование конструкций или методов, результаты которых не 
могут быть верифицированы или несовместимы с требованиями безопасности.<br><br></p><h3>6.6 Ответственность за выполнение планирования</h3><p style="text-align: justify;"><br>Разработчик
 должен осуществлять планирование проекта и надзор за его выполнением в 
соответствии со следующими требованиями. Если систему или ЭКПО 
разрабатывают для нескольких различных построений, планирование для 
каждого построения должно предусматривать:<br><br>- полное планирование для контракта;<br><br>- детализированное планирование для текущего построения;<br><br>-
 планирование будущих построений, предусмотренных контрактом, с уровнем 
детализации, соответствующим доступной на данный момент информации.<br><br>Разработчик
 должен создать официальный документ, планирующий проведение работ в 
соответствии с требованиями настоящего стандарта и требованиями 
контракта, связанными с ПО. Планирование должно быть выполнено в 
соответствии с уровнем системы и завершено включением всей требуемой 
информации в документы планирования.<br><br>Примечания<br></p><p style="text-align: justify;">1 Эта формулировка здесь и далее в настоящем стандарте предназначена для того, чтобы:<br><br>-
 подчеркнуть, что создание и регистрация информации о планировании и 
технологии разработки - существенная часть процесса разработки ПО - 
должны быть выполнены независимо от требований к поставляемому средству;<br><br>- использовать документ как контрольный список построений, которые покрываются действиями разработки или планирования;<br><br>-
 допустить для регистрации представления информацию, отличную от 
традиционных документов (например, автоматизированные инструментальные 
средства проектирования ПО).<br></p><p style="text-align: justify;">2 
Если контракт предусматривает передачу информации в соответствии с 
настоящим стандартом, в обязанности разработчика входит форматирование, 
сбор, маркировка, копирование и рассылка поставляемых документов, что 
требует дополнительного времени и усилий со стороны разработчика.<br></p><p style="text-align: justify;">3
 План разработки ПО может покрывать все виды работ, требуемых настоящим 
стандартом, и включать в себя описание планирования интегральных 
процессов, если контрактом не предусмотрены отдельные документы 
планирования для этих процессов.<br><br><br>Разработчик должен 
участвовать в разработке и регистрации планов проведения 
квалификационного тестирования системы, результаты должны быть включены в
 документ "План квалификационного тестирования ПО".<br><br>Разработчик 
должен создать и зарегистрировать план выполнения установки ПО и 
обучения пользователей, определенный в контракте, результаты должны быть
 включены в документ "План установки ПО".<br><br>Разработчик должен 
идентифицировать все ресурсы разработки ПО, которые будут необходимы для
 реализации концепции поддержки организации, осуществляющей поддержку. 
Разработчик должен создать и зарегистрировать планы, идентифицирующие 
эти ресурсы, и описать действия, необходимые при передаче поставляемых 
элементов агентству поддержки. Результаты данного планирования должны 
быть включены в документ "План передачи ПО".<br><br>После утверждения 
заказчиком любого из планов, указанных в данном подразделе, разработчик 
должен выполнить релевантные действия в соответствии с планами. 
Руководство разработчика и Служба обеспечения качества ПО должны 
осуществлять аудит процесса разработки ПО в интервалах, определенных в 
Плане разработки ПО, для гарантии того, что процесс будет выполнен в 
соответствии с контрактом и утвержденными планами. За исключением 
внутреннего планирования разработчика и информации, связанной с 
укомплектованием персонала, любая модификация планов должна быть 
одобрена заказчиком.<br><br></p><h3>6.7 Просмотр результатов процесса планирования ПО</h3><p style="text-align: justify;"><br>Просмотры
 результатов процесса планирования ПО проводят для гарантии того, что 
планы ПО и стандарты разработки ПО соответствуют требованиям настоящего 
стандарта и обеспечивают согласованное выполнение процессов жизненного 
цикла ПО.<br><br></p><h2>7 Процессы разработки ПО</h2><p style="text-align: justify;">Процессы
 разработки ПО должны быть выполнены в соответствии с процессом 
планирования ПО (раздел 6) и Планом разработки ПО (12.2). Таблица А.2 
содержит резюме целей и результатов процессов разработки ПО в 
зависимости от уровня ПО. Процессами разработки ПО являются следующие 
процессы:<br><br>- определение требований к ПО;<br><br>- проектирование ПО;<br><br><span style="display:inline-block; width:30px"></span>- кодирование ПО;<br><br>- интеграция.<br><br></p><h3>7.1 Процесс определения требований к ПО</h3><p style="text-align: justify;"><br>Разработчик
 должен определить и зарегистрировать требования к ПО, которые будут 
выполнены каждым ЭКПО, методы, которые нужно использовать, для гарантии 
того, что каждое требование было выполнено, и проследить соответствие 
между требованиями к ЭКПО и системными требованиями. Результат этих 
работ должен быть включен в документ "Спецификация требований к ПО". В 
зависимости от условий контракта требования относительно интерфейсов 
ЭКПО могут быть включены либо в Спецификацию требований к ПО, либо в 
Спецификацию требований к интерфейсу.<br><br>Примечание - Если ЭКПО 
разрабатывают для нескольких различных построений, требования к ЭКПО не 
могут быть полностью определены до завершения конечного построения. 
Планирование, выполняемое разработчиком, для каждого ЭКПО должно 
идентифицировать подмножество требований, которые будут определены в 
каждом построении, и подмножество, которое будет реализовано в каждом 
построении. Анализ требований к ПО для данного построения следует 
интерпретировать как определение требований к ЭКПО, идентифицированных 
для этого построения.<br><br></p><p style="text-align: justify;">7.1.1 Цели процесса определения требований к ПО<br><br>Цели данного процесса состоят в том, чтобы:<br></p><p style="text-align: justify;">а) разработать требования верхнего уровня;<br></p><p style="text-align: justify;">б) оценить производные требования верхнего уровня с точки зрения безопасности системы.<br></p><p style="text-align: justify;">7.1.2 Состав работ, выполняемых в процессе определения требований к ПО<br><br>Входными
 данными для процесса определения требований к ПО являются системные 
требования, описания аппаратного интерфейса и архитектуры системы (если 
они не включены в системные требования), определяемые процессами 
жизненного цикла системы. План разработки ПО и стандарты на разработку 
требований к ПО, определяемые процессом планирования. После того как 
удовлетворены указанные в Плане разработки ПО критерии перехода к 
данному процессу разработки, входные данные используют для разработки 
требований верхнего уровня к ПО. Требования верхнего уровня включают в 
себя функциональные требования, требования к эффективности, требования к
 интерфейсу и требования, связанные с безопасностью. Результатами 
данного процесса являются документы "Спецификация требований к ПО" 
(12.13) и "Спецификация требований к интерфейсу" (12.14). Процесс 
определения требований к ПО считают завершенным, когда достигнуты его 
цели и цели связанных с ним интегральных процессов. Процесс определения 
требований к ПО должен обеспечить следующее:<br><br>- анализ 
функциональных системных требований и требований к интерфейсам, которые 
предназначены для программной реализации, на отсутствие противоречий, 
несоответствий и неопределенностей;<br><br>- регистрацию для 
последующего уточнения или исправления и передачи в качестве входной 
информации обратной связи к исходным процессам тех входных данных 
процесса определения требований к ПО, которые оказались неадекватными 
или некорректными;<br><br>- спецификацию в документе требований верхнего
 уровня каждого системного требования, которое предназначено для 
программной реализации;<br><br>- определение всех требований верхнего уровня, соответствующих системным требованиям, которые связаны с предотвращением риска;<br><br>- верифицируемость, непротиворечивость и соответствие требований верхнего уровня стандартам на разработку требований к ПО;<br><br>- установление требований верхнего уровня в количественных показателях с погрешностями в тех случаях, когда это необходимо;<br><br>-
 требования верхнего уровня не должны описывать детали проектирования 
или верификации, исключая определения и обоснования ограничений 
проектирования;<br><br>- трассируемость каждого системного требования, 
которое предназначено для программной реализации, к одному или 
нескольким требованиям верхнего уровня для ПО;<br><br>- трассируемость каждого требования верхнего уровня, кроме производных требований к одному или нескольким системным требованиям;<br><br>- оценку производных требований верхнего уровня с точки зрения безопасности системы.<br><br></p><h3>7.2 Процесс проектирования ПО</h3><p style="text-align: justify;"><br>Требования
 верхнего уровня к ПО уточняют далее в процессе проектирования ПО одной 
или несколькими итерациями, чтобы разработать архитектуру ПО и 
требования нижнего уровня, которые могут быть непосредственно 
использованы для получения исходного кода.<br></p><p style="text-align: justify;">7.2.1 Цели процесса проектирования ПО<br><br>Цели данного процесса состоят в том, чтобы:<br></p><p style="text-align: justify;">а) разработать архитектуру ПО и требования нижнего уровня на основе требований верхнего уровня;<br></p><p style="text-align: justify;">б) оценить с точки зрения безопасности системы производные требования нижнего уровня.<br></p><p style="text-align: justify;">7.2.2 Состав работ, выполняемых в процессе проектирования ПО<br><br>Входными
 данными процесса проектирования ПО являются требования к ПО, План 
разработки ПО и стандарты на процесс проектирования ПО. После того как 
удовлетворены указанные в Плане разработки ПО критерии перехода к 
данному процессу разработки, эти входные данные используются в процессе 
проектирования для разработки архитектуры ПО и требований нижнего 
уровня. Требования нижнего уровня могут включать в себя одно или 
несколько требований более низких уровней. Основным выходным результатом
 процесса является документ "Описание проекта ПО" (12.16), который 
содержит описание архитектуры ПО и требования нижнего уровня. Если это 
предусмотрено условиями контракта, часть проекта, имеющая отношение к 
интерфейсам, может быть включена в документ "Описание проекта 
интерфейса" (12.17), а часть проекта, имеющая отношение к базам данных, 
может быть включена в документ "Описание проекта базы данных" (12.18). 
Процесс проектирования ПО считают завершенным, когда удовлетворены его 
цели и цели связанных с ним интегральных процессов. Процесс 
проектирования ПО должен обеспечивать следующее:<br><br>- архитектура ПО
 и требования нижнего уровня, разработанные в процессе проектирования 
ПО, должны соответствовать стандартам на процесс проектирования ПО и 
быть прослеживаемыми, верифицируемыми и непротиворечивыми;<br><br>- 
производные требования должны быть определены и проанализированы для 
гарантии того, что они не противоречат требованиям верхнего уровня;<br><br>-
 работы процесса проектирования ПО могут привести к появлению возможных 
отказов в ПО или, наоборот, предотвратить их. Использование метода 
разбиения или других архитектурных методов при проектировании ПО может 
изменить установленный уровень критичности ПО для некоторых компонентов 
ПО. В таких случаях должна быть определена информация о производных 
требованиях, позволяющая обеспечить процесс оценки безопасности системы;<br><br>- необходимо контролировать поток управления и поток данных, когда это связано с требованиями безопасности;<br><br>- реакция на отказные ситуации должна быть согласована с требованиями безопасности;<br><br>-
 при обнаружении в процессе проектирования ПО неадекватных или 
некорректных входных данных следует осуществлять обратную связь с 
процессами жизненного цикла системы, с процессами определения требований
 к ПО или с процессом планирования ПО для исследования проблемы или 
исправления входных данных.<br><br>Примечание - На современном уровне 
развития технологии разработки ПО не применяют количественную корреляцию
 между сложностью и достигаемой безопасностью. Тем не менее, в процессе 
проектирования ПО необходимо избегать сложных конструкций, поскольку с 
увеличением сложности ПО становятся более трудными верификация и 
доказательство того, что удовлетворены цели безопасности.<br><br></p><p style="text-align: justify;">7.2.3 Проектирование модифицируемого пользователем ПО<br><br>Для
 разработки ПО, которое предназначено для модификации пользователями, 
необходимы дополнительные требования. Модифицируемый компонент - часть 
ПО, которая предназначена для изменения пользователем, а 
немодифицируемый компонент не допускает изменения пользователем. 
Модифицируемое пользователем ПО может широко варьироваться по сложности.
 ПО любого уровня может включать в себя модифицируемые компоненты. 
Требования для проектирования модифицируемого пользователем ПО 
следующие:<br><br>- немодифицируемый компонент должен быть защищен от 
модифицируемого компонента, чтобы предотвратить влияние на безопасность 
функционирования немодифицируемого компонента. Эта защита может быть 
обеспечена аппаратными, программными, инструментальными средствами, 
используемыми для реализации изменений, или их комбинацией;<br><br>- 
нужно показать, что специально предназначенные для реализации изменений 
средства являются единственно допустимыми для модификации.<br></p><p style="text-align: justify;">7.2.4 Проектные решения уровня ЭКПО<br><br>Разработчик
 должен определить и зарегистрировать проектные решения уровня ЭКПО. 
Результаты должны быть включены в раздел проектных решений уровня ЭКПО 
документов проектирования ПО (12.16, 12.17, 12.18).<br><br>Разработчик 
должен определить и зарегистрировать проект архитектуры ПО 
(идентифицировать модули ПО, входящие в ЭКПО, их интерфейсы и концепцию 
их совместного выполнения) и проследить соответствие между модулями ПО и
 требованиями к ЭКПО. Результат этих работ должен быть включен в разделы
 документа "Описание проекта ПО", посвященные архитектуре ПО и 
прослеживанию соответствия. В зависимости от условий контракта часть 
проекта, имеющая отношение к интерфейсам, может быть включена либо в 
Описание проекта ПО, либо в Описание проекта интерфейса.<br><br>Разработчик
 должен разработать и зарегистрировать описание каждого модуля ПО. 
Результат этих работ должен быть включен в соответствующий раздел 
документа "Описание проекта ПО". В зависимости от условий контракта 
часть проекта, которая относится к интерфейсам, может быть включена либо
 в Описание проекта ПО, либо в Описание проекта интерфейса. В свою 
очередь проект программных модулей, которые являются базами данных или 
осуществляют доступ к базам данных или управление ими, может быть 
включен либо в Описание проекта ПО, либо в Описание проекта базы данных.<br><br>Примечание
 - Если ЭКПО разрабатывают для нескольких различных построений, проект 
не может быть полностью определен до завершения последнего построения. 
Проект ПО для данного построения должен обязательно удовлетворять 
требованиям к ЭКПО, которые должны быть реализованы для этого 
построения.<br><br></p><h3>7.3 Процесс кодирования ПО</h3><p style="text-align: justify;"><br>В процессе кодирования ПО на основании архитектуры ПО и требований нижнего уровня создают исходный код.<br><br>Разработчик
 должен разработать и зарегистрировать исходный код ПО, соответствующий 
каждому модулю ПО в проекте ЭКПО. Реализация ПО должна включать в себя, 
если это применимо, кодирование машинных команд и определение данных, 
создание базы данных, заполнение базы данных и других файлов данных 
значениями данных, а также другие работы, необходимые для реализации 
проекта. Если для кодирования поставляемого ПО предполагается 
использовать язык программирования, отличный от указанного в контракте, 
разработчик должен получить одобрение заказчика на использование этого 
языка.<br></p><p style="text-align: justify;">7.3.1 Цели процесса кодирования ПО<br><br>Цели
 процесса кодирования ПО состоят в том, чтобы разработать исходный код, 
который должен быть прослеживаемым, верифицируемым, непротиворечивым и 
корректно реализующим требования нижнего уровня.<br></p><p style="text-align: justify;">7.3.2 Состав работ, выполняемых в процессе кодирования ПО<br><br>Входными
 данными процесса кодирования ПО являются требования нижнего уровня, 
архитектура ПО, План разработки ПО и стандарты кодирования ПО. Когда 
указанные в плане критерии перехода удовлетворены, может быть 
осуществлен первичный или повторный переход к процессу кодирования ПО. 
Исходный код, полученный при выполнении этого процесса, базируется на 
архитектуре ПО и требованиях нижнего уровня. Результат этого процесса - 
исходный код (12.19) и объектный код. Процесс кодирования ПО является 
завершенным, когда реализованы все его цели и цели интегральных 
процессов, связанных с ним. Требования для этого процесса следующие:<br><br>- исходный код должен реализовывать требования нижнего уровня и соответствовать архитектуре ПО;<br><br>- исходный код должен соответствовать стандартам кодирования ПО;<br><br>- исходный код должен быть трассируемым к описанию проекта;<br><br>-
 для неадекватных или некорректных входных данных, обнаруженных при 
выполнении процесса кодирования ПО, необходимо обеспечить обратную связь
 с процессами определения требований к ПО, проектирования ПО или 
планирования ПО для исследования или исправления.<br><br></p><h3>7.4 Процесс интеграции</h3><p style="text-align: justify;"><br>Объектный
 компьютер, исходный код и объектный код, полученные в процессе 
кодирования ПО, используют при редактировании связей и загрузке с целью 
создать интегрированную систему.<br></p><p style="text-align: justify;">7.4.1 Цели процесса интеграции<br><br>Цели процесса интеграции состоят в получении интегрированной системы.<br></p><p style="text-align: justify;">7.4.2 Состав работ, выполняемых в процессе интеграции<br><br>После
 того как указанные в Плане разработки ПО критерии перехода будут 
удовлетворены, может быть осуществлен первичный или повторный переход к 
процессу интеграции. Входными данными процесса интеграции являются 
описание архитектуры ПО из процесса проектирования ПО, а также исходный и
 объектный код из процесса кодирования ПО.<br><br>Выходной результат 
процесса интеграции - исполняемый объектный код, описанный в 12.20, и 
информация о редактировании связей и загрузке. Процесс интеграции 
является завершенным, когда удовлетворены его цели и цели интегральных 
процессов, связанных с ним. Требования для этого процесса:<br><br>- исполняемый объектный код должен быть генерирован на основе исходного кода и информации о редактировании связей и загрузке;<br><br>- ПО должно быть загружено в объектный компьютер для интеграции аппаратных средств и ПО;<br><br>-
 для неадекватных или некорректных входных данных, обнаруженных в 
процессе интеграции, необходимо обеспечить обратную связь с процессами 
определения требований к ПО, проектирования ПО, кодирования ПО или 
планирования ПО для исследования или исправления.<br></p><p style="text-align: justify;">7.4.3 Дополнительные задачи интеграции<br><br>Далее
 рассмотрены задачи, связанные с отключенным кодом и заплатами в ПО. 
Управляющая система или оборудование могут быть предназначены для 
включения нескольких вариантов конфигураций, не все из которых 
предназначены для использования в каждом приложении. Это может привести к
 появлению отключенного кода, который может быть не выполнен, или 
данных, которые могут быть не использованы. Такой код отличается от 
мертвого кода, который определен в разделе 3 и объяснен в 8.4.4. 
Требования для отключенного кода и заплат следующие:<br><br>- должно 
быть приведено доказательство того, что отключенный код заблокирован для
 среды, где его использование не предусмотрено. Непреднамеренную 
активацию отключенного кода, возникающую в аварийных ситуациях системы, 
следует рассматривать также как непреднамеренную активацию обычного 
активизированного кода;<br><br>- должны быть использованы методы работы с отключенным кодом в соответствии с планами ПО;<br><br>-
 нельзя использовать заплаты в ПО, предназначенном для поставки в 
сертифицируемый объект, для выполнения изменения в требованиях или 
архитектуре, или изменений, оказавшихся необходимыми в результате работ 
процесса верификации ПО. Заплаты следует использовать в ограниченных 
случаях, например, чтобы устранить замеченные неточности среды 
программирования, типа обнаружения ошибки компилятора и др.;<br><br>- 
при использовании заплаты необходимо подтвердить, что процесс управления
 конфигурацией ПО может эффективно прослеживать эту заплату; провести 
регрессионный анализ для доказательства того, что включение заплаты 
удовлетворяет всем требованиям к ПО, разработанному с помощью обычных 
методов; обосновать использование заплаты в Итоговом документе 
разработки ПО.<br><br></p><h3>7.5 Трассируемость</h3><p style="text-align: justify;"><br>Требования трассируемости включают в себя обеспечение соответствия:<br><br>-
 между системными требованиями и требованиями к ПО, чтобы гарантировать 
полноту реализации системных требований и видимость производных 
требований;<br><br>- между требованиями нижнего уровня и требованиями 
верхнего уровня, чтобы гарантировать полноту реализации требований 
верхнего уровня и видимость производных требований и архитектурных 
решений, принятых при выполнении процесса проектирования ПО;<br><br>- 
между исходным кодом и требованиями нижнего уровня, чтобы верифицировать
 отсутствие неописанного исходного кода и полноту реализации требований 
нижнего уровня.<br><br></p><h2>8 Процесс верификации ПО</h2><p style="text-align: justify;">Верификация
 ПО обеспечивает техническую оценку всех средств разработки ПО, в том 
числе и результатов верификации ПО. Верификацию ПО выполняют в 
соответствии с Планом верификации ПО (12.3) и Планом квалификационного 
тестирования ПО (12.4), которые разрабатывают в процессе планирования 
ПО.<br><br>Таблицы А.3-А.7 содержат резюме целей и результатов верификации в зависимости от уровня ПО.<br><br>Примечание - Чем ниже уровень ПО, тем меньше внимания уделяют:<br><br>- верификации требований нижнего уровня;<br><br>- верификации архитектуры ПО;<br><br>- полноте покрытия тестами;<br><br>- контролю процедур верификации;<br><br>- независимости работ процесса верификации ПО;<br><br>-
 перекрытию работ процесса верификации ПО, т.е. выполнению различных 
верификационных работ, каждая из которых обнаруживает ошибки одного и 
того же класса;<br><br>- тестированию отказоустойчивости;<br><br>- 
верификационным работам, обнаруживающим ошибки, которые оказывают лишь 
косвенное влияние на результаты разработки, например отклонение от 
стандартов разработки ПО.<br><br></p><h3>8.1 Цели верификации ПО</h3><p style="text-align: justify;"><br>Назначение
 верификации ПО состоит в том, чтобы обнаружить и зарегистрировать 
ошибки, которые могли быть внесены в ПО во время его разработки 
(устранение ошибок является задачей разработки ПО). Основное назначение 
верификации ПО - проверить что:<br><br>- системные требования, 
предназначенные для программной реализации, были должным образом 
переработаны в требования верхнего уровня к ПО, которые удовлетворяют 
этим системным требованиям;<br><br>- требования верхнего уровня были 
переработаны в архитектуру ПО и требования нижнего уровня, которые 
удовлетворяют требованиям верхнего уровня; если разработано несколько 
уровней требований к ПО между требованиями верхнего уровня и 
требованиями нижнего уровня, то каждый последующий уровень требований 
разработан так, чтобы удовлетворять требованиям более высокого уровня;<br><br>- архитектура ПО и требования нижнего уровня должным образом преобразованы в исходный код, удовлетворяющий им;<br><br>- исполняемый объектный код удовлетворяет требованиям к ПО;<br><br>-
 инструментальные средства, используемые для выполнения указанных работ,
 являются технически корректными и полными для заданного уровня ПО.<br><br></p><h3>8.2 Состав работ, выполняемых в процессе верификации ПО</h3><p style="text-align: justify;"><br>Цели
 верификации ПО должны быть достигнуты посредством выполнения комбинации
 просмотров, анализов, разработки тестовых наборов и процедур и 
последующего выполнения этих тестовых процедур. Просмотры и анализы 
обеспечивают оценку точности, полноты и верифицируемости требований к 
ПО, архитектуры ПО и исходного кода. Разработка тестовых наборов должна 
обеспечивать дальнейшую оценку внутренней непротиворечивости и полноты 
требований. Выполнение тестовых процедур обеспечивает демонстрацию 
соответствия требованиям.<br><br>Входная информация для процесса 
верификации ПО включает в себя системные требования, требования к ПО, 
описание архитектуры, данные о трассируемости, исходный код, исполняемый
 объектный код, План верификации ПО, План квалификационного тестирования
 ПО.<br><br>Выходные результаты верификации ПО должны быть включены в 
документы "Процедуры верификации ПО" (12.21), "Результаты верификации 
ПО" (12.23), "Описание квалификационного тестирования ПО" (12.22), 
"Отчет о квалификационном тестировании ПО" (12.24).<br><br></p><h3>8.3 Просмотры и анализы ПО</h3><p style="text-align: justify;"><br>Просмотры
 и анализы ПО применяют к результатам процессов разработки и верификации
 ПО. Различия между просмотрами и анализами заключаются в том, что 
анализ дает воспроизводимое доказательство, а просмотр предоставляет 
качественную (экспертную) оценку. Просмотр может включать в себя 
инспекцию выходных результатов указанных процессов, использующую 
контрольные листы или другие подобные средства. Анализ может заключаться
 в детальном исследовании функциональности, эффективности и безопасности
 компонентов ПО, а также их связи с другими компонентами системы или с 
оборудованием.<br></p><p style="text-align: justify;">8.3.1 Просмотры и анализы требований верхнего уровня<br><br>Цель
 этих просмотров и анализов - обнаружить и зарегистрировать ошибки, 
которые могли быть внесены в процессе разработки требований к ПО. Данные
 просмотры и анализы должны подтвердить, что требования верхнего уровня 
удовлетворяют следующим целям:<br></p><p style="text-align: justify;">а)
 согласованность с системными требованиями: гарантировать, что функции 
системы, которые должно выполнять ПО, определены, что требования по 
функциональности, эффективности и требования, связанные с безопасностью 
системы, удовлетворены в требованиях верхнего уровня к ПО и что 
правильно определены производные требования и обоснована их 
необходимость;<br></p><p style="text-align: justify;">б) точность и 
непротиворечивость: гарантировать, что каждое требование верхнего уровня
 является точным, однозначным и достаточно детализированным и что 
требования не противоречат друг другу;<br></p><p style="text-align: justify;">в)
 совместимость с объектным компьютером: гарантировать, что не существует
 никаких противоречий между требованиями верхнего уровня и возможностями
 аппаратных/программных средств объектного вычислителя, особенно такими,
 как время реакции системы и аппаратура ввода/вывода;<br></p><p style="text-align: justify;">г) верифицируемость: гарантировать, что каждое требование верхнего уровня может быть верифицировано;<br></p><p style="text-align: justify;">д)
 соответствие стандартам: гарантировать, что процесс разработки 
требований к ПО полностью соответствует стандартам на разработку 
требований и обоснованы любые отклонения от данных стандартов;<br></p><p style="text-align: justify;">е)
 трассируемость: гарантировать, что функциональные системные требования,
 требования по эффективности и требования к безопасности системы, 
предназначенные для программной реализации, были включены в требования 
верхнего уровня;<br></p><p style="text-align: justify;">ж) 
алгоритмические аспекты: гарантировать точность и корректность поведения
 предложенных алгоритмов, особенно в областях отсутствия непрерывности.<br></p><p style="text-align: justify;">8.3.2 Просмотры и анализы архитектуры ПО<br><br>Цель
 этих просмотров и анализов - обнаружить и зарегистрировать ошибки, 
которые могли быть внесены во время разработки архитектуры ПО. Данные 
просмотры и анализы должны подтвердить, что архитектура ПО соответствует
 следующим требованиям:<br></p><p style="text-align: justify;">а) 
согласованность с требованиями верхнего уровня: гарантировать, что 
архитектура ПО не находится в противоречии с требованиями верхнего 
уровня, особенно те функции, которые гарантируют целостность системы, 
например схемы разбиения;<br></p><p style="text-align: justify;">б) 
непротиворечивость: гарантировать, что существует корректная связь между
 компонентами архитектуры ПО, осуществляемая через потоки данных и поток
 управления;<br></p><p style="text-align: justify;">в) совместимость с 
объектным компьютером: гарантировать, что не существует никаких 
противоречий между архитектурой ПО и программно-аппаратными 
возможностями объектного компьютера, особенно такими, как инициализация,
 асинхронные операции, синхронизация и прерывания;<br></p><p style="text-align: justify;">г)
 верифицируемость: гарантировать, что архитектура ПО может быть 
верифицирована, например не существует неограниченных рекурсивных 
алгоритмов;<br></p><p style="text-align: justify;">д) соответствие 
стандартам: гарантировать, что процесс проектирования ПО полностью 
соответствовал стандартам на процесс проектирования ПО и отклонения от 
этих стандартов обоснованы, особенно ограничения сложности и 
использования конструкций проекта, которые не согласуются с задачами 
безопасности системы;<br></p><p style="text-align: justify;">е) целостность разбиения: гарантировать, что будут предотвращены или изолированы любые нарушения в декомпозиции.<br></p><p style="text-align: justify;">8.3.3 Просмотры и анализы требований нижнего уровня<br><br>Цель
 этих просмотров и анализов - обнаружить и зарегистрировать ошибки, 
которые могли быть внесены в процессе проектирования ПО. Эти просмотры и
 анализы должны подтвердить, что требования нижнего уровня удовлетворяют
 следующим целям:<br></p><p style="text-align: justify;">а) 
согласованность с требованиями верхнего уровня: гарантировать, что 
требования нижнего уровня к ПО удовлетворяют требованиям верхнего уровня
 к ПО, что формируемые требования правильно определены и обоснована их 
необходимость;<br></p><p style="text-align: justify;">б) точность и 
непротиворечивость: гарантировать, что каждое требование нижнего уровня 
является точным, однозначным и достаточно детализированным и что 
требования нижнего уровня не противоречат друг другу;<br></p><p style="text-align: justify;">в)
 совместимость с объектным компьютером: гарантировать, что не существует
 никаких противоречий между требованиями к ПО и возможностями аппаратных
 и программных средств объектного компьютера, особенно по использованию 
ресурсов (таких, как загрузка шины, время реакции системы и аппаратуры 
ввода/вывода);<br></p><p style="text-align: justify;">г) верифицируемость: гарантировать, что каждое требование нижнего уровня может быть верифицировано;<br></p><p style="text-align: justify;">д)
 соответствие стандартам: гарантировать, что процесс проектирования ПО 
полностью соответствует стандартам на процесс проектирования ПО и что 
отклонения от этих стандартов обоснованы;<br></p><p style="text-align: justify;">е)
 трассируемость: гарантировать, что требования верхнего уровня и 
производные требования были реализованы в требованиях нижнего уровня;<br></p><p style="text-align: justify;">ж)
 алгоритмические аспекты: гарантировать точность и корректность 
поведения предложенных алгоритмов, особенно в областях отсутствия 
непрерывности.<br></p><p style="text-align: justify;">8.3.4 Просмотры и анализы исходного кода<br><br>Цель
 этих просмотров и анализов - выявление и регистрация ошибок, которые 
могли быть внесены в процессе кодирования ПО. Эти просмотры и анализы 
подтверждают, что выходные результаты кодирования являются точными, 
полными и могут быть верифицированы. Прежде всего проверяют корректность
 кода по отношению к требованиям к ПО и архитектуре ПО и соответствие 
стандартам на кодирование. Эти просмотры и анализы обычно ограничиваются
 исходным кодом. На данном этапе необходимо показать:<br></p><p style="text-align: justify;">а)
 согласованность с требованиями нижнего уровня: гарантировать, что 
исходный код является корректным, полным и соответствует требованиям 
нижнего уровня, а также то, что исходный код не содержит неописанных 
функций;<br></p><p style="text-align: justify;">б) согласованность с 
архитектурой ПО: гарантировать, что исходный код соответствует потоку 
данных и потоку управления, которые определены архитектурой ПО;<br></p><p style="text-align: justify;">в)
 верифицируемость: гарантировать, что исходный код не содержит 
операторов и структур, которые не могут быть верифицированы, и что код 
не подвергался изменениям в целях тестирования;<br></p><p style="text-align: justify;">г)
 соответствие стандартам: гарантировать, что процесс разработки кода ПО 
полностью соответствует стандартам кодирования ПО и отклонения от этих 
стандартов обоснованы, особенно в случаях ограничения сложности и 
использования конструкций кода, предназначенных для удовлетворения целей
 безопасности системы (сложность в данном контексте - степень связности 
программных компонентов, уровень вложенности управляющих структур и 
сложность логических или числовых выражений); этот анализ также должен 
гарантировать, что отклонения от стандартов оправданы;<br></p><p style="text-align: justify;">д) трассируемость: гарантировать, что требования нижнего уровня к ПО были воплощены в исходный код;<br></p><p style="text-align: justify;">е)
 точность и непротиворечивость: гарантировать правильность и 
непротиворечивость исходного кода, включая реализацию стеков, 
переполнение и разрешающую способность для арифметики с фиксированной 
точкой, конкуренцию ресурсов, синхронизацию выполнения самых сложных 
случаев, обработку особых ситуаций, использование неинициализированных 
переменных или констант, неиспользуемые переменные или константы и 
нарушения целостности данных из-за конфликтов прерываний или задач.<br></p><p style="text-align: justify;">8.3.5 Просмотры и анализы выходных результатов процесса интеграции<br><br>Цель
 этих просмотров и анализов - гарантировать, что результаты процесса 
интеграции ЭКПО являются полными и корректными. Это может быть выполнено
 путем детального исследования информации о редактировании связей, 
загрузке и картах памяти. Должны быть проконтролированы и исключены:<br><br>- неправильные аппаратные адреса;<br><br>- перекрытия памяти;<br><br>- отсутствующие компоненты ПО.<br></p><p style="text-align: justify;">8.3.6 Просмотры и анализы тестовых вариантов, процедур и результатов<br><br>Цель
 этих просмотров и анализов - гарантировать, что тестирование кода было 
разработано и выполнено точно и полностью. Должны быть рассмотрены 
следующие вопросы:<br></p><p style="text-align: justify;">а) тестовые варианты: верификация тестовых вариантов представлена в 8.4.4;<br></p><p style="text-align: justify;">б)
 тестовые процедуры: проверить, что тестовые варианты правильно 
представлены в процедурах тестирования и ожидаемых результатах;<br></p><p style="text-align: justify;">в)
 результаты тестирования: гарантировать, что результаты тестирования 
корректны и что расхождения между фактическими и ожидаемыми результатами
 объяснимы.<br><br></p><h3>8.4 Цели и методы тестирования ПО</h3><p style="text-align: justify;"><br>Тестирование
 ПО систем управления имеет две взаимодополняющие цели. Первая цель - 
показать, что ПО удовлетворяет требованиям к нему. Вторая цель - 
продемонстрировать с высокой степенью доверия, что были устранены 
ошибки, которые могли бы привести к возникновению отказных ситуаций, 
определенных процессом оценки безопасности системы. Выделяют три уровня 
тестирования:<br><br>- тестирование интеграции ЭКПО/ЭКА, верифицирующее корректность функционирования ПО в среде объектного вычислителя;<br><br>-
 тестирование интеграции ЭКПО, верифицирующее взаимосвязи между 
требованиями и компонентами ПО и реализацию требований и компонентов в 
рамках архитектуры;<br><br>- тестирование нижнего уровня (модульное тестирование), верифицирующее реализацию требований нижнего уровня.<br><br>Примечание
 - Если разработан тестовый вариант и выполнена соответствующая 
процедура для тестирования интеграции ЭКПО/ЭКА или тестирования 
интеграции ЭКПО и удовлетворены критерии покрытия, базирующиеся на 
требованиях и структуре, то нет необходимости дублировать этот тестовый 
вариант для тестирования нижнего уровня. Замена тестов верхнего уровня 
номинально эквивалентными тестами нижнего уровня может быть менее 
эффективной из-за меньшего объема тестированных функциональных 
требований.<br><br><br>Для удовлетворения целей тестирования ПО:<br><br>- тестовые варианты должны быть основаны, прежде всего, на требованиях к ПО;<br><br><span style="display:inline-block; width:30px"></span>-
 тестовые варианты должны быть разработаны так, чтобы верифицировать 
корректность функционирования и сформировать условия, которые выявляют 
потенциальные ошибки;<br><br>- анализ покрытия требований к ПО должен определить, какие требования к ПО не были тестированы;<br><br>- анализ структурного покрытия должен определить, какие структуры ПО не были выполнены при тестировании.<br></p><p style="text-align: justify;">8.4.1 Среда тестирования<br><br>Для
 достижения целей тестирования ПО может потребоваться более одной среды 
тестирования. Идеальная среда тестирования включает в себя ПО, 
загруженное в объектный вычислитель и тестируемое в среде, которая 
имитирует среду объектного вычислителя с высокой точностью.<br><br>Возможно
 сертификационное доверие для эмулятора или имитатора объектного 
вычислителя на инструментальном компьютере. Однако рекомендации 
относительно среды тестирования сводятся к следующему: некоторые тесты 
должны быть выполнены только в интегрированной объектной вычислительной 
среде, так как некоторые ошибки могут быть обнаружены только в этой 
среде.<br></p><p style="text-align: justify;">8.4.2 Выбор тестовых вариантов, основанных на требованиях<br><br>Тестированию,
 основанному на требованиях, уделяют особое внимание, потому что эту 
стратегию признают наиболее эффективной в обнаружении ошибок. 
Рекомендации для выбора тестовых вариантов, основанных на требованиях, 
заключаются в следующем:<br><br>- для того чтобы выполнить задачи 
тестирования ПО, необходимы две категории тестовых вариантов: тесты для 
проверки функционирования в области допустимых значений и тесты для 
проверки на устойчивость к ошибкам входных данных (вне данной области);<br><br>-
 обеспечить особые тестовые варианты, разработанные на основе требований
 к ПО с учетом потенциальных источников ошибок, присущих процессам 
разработки ПО.<br><br>Назначение тестовых вариантов для области 
допустимых значений - продемонстрировать способность ПО корректно 
функционировать в штатных условиях и для входных данных из области 
допустимых значений. Тестовые варианты данной категории включают в себя 
следующее:<br><br>- вещественные и целые входные переменные, которые 
выбирают с использованием допустимых классов эквивалентности и граничных
 значений;<br><br>- выполнение многократных итераций кода для функций, 
зависящих от времени, таких как фильтры и задержки, чтобы проверить 
характеристики этих функций в правильном контексте;<br><br>- для проверки перехода состояний разрабатывают тестовые варианты, реализующие переходы, возможные при нормальной работе;<br><br>-
 тестовые наборы, которые должны проверить использование переменных и 
выполнение булевых операторов для требований к ПО, выраженных 
логическими уравнениями.<br><br>Цель тестовых вариантов проверки 
устойчивости к ошибкам - показать способность ПО отрабатывать 
недопустимые входные данные и условия. Требования к тестовым вариантам 
устойчивости к ошибкам следующие. Должны быть:<br><br>- выбраны вещественные и целые переменные из недопустимых классов эквивалентности;<br><br>- проверена инициализация системы для недопустимых условий;<br><br>-
 определены режимы с возможными ошибками для поступающих данных, 
особенно для сложных цифровых последовательностей данных из внешней 
системы;<br><br>- разработаны тестовые наборы для циклов, когда счетчик 
цикла - вычисляемое значение, чтобы попытаться получить значения 
счетчика цикла, выходящие из диапазона допустимых значений, и таким 
образом показать устойчивость кода, связанного с циклом;<br><br>- 
разработаны тестовые наборы для проверки механизмов защиты от 
арифметического переполнения для функций, зависящих от времени, типа 
фильтров и задержек;<br><br>- разработаны тестовые наборы, чтобы проверить переходы в состояния, которые невозможны в соответствии с требованиями к ПО.<br></p><p style="text-align: justify;">8.4.3 Методы тестирования, основанные на требованиях<br><br>Тестирование,
 основанное на требованиях, является основным методом для тестирования 
любого уровня: тестирования интеграции ЭКПО/ЭКА, тестирования интеграции
 ЭКПО и модульного тестирования. За исключением тестирования интеграции 
ЭКПО/ЭКА, эти методы не требуют специальной среды тестирования или 
специальной стратегии. Рекомендации для выполнения тестирования, 
основанного на требованиях, следующие:<br></p><p style="text-align: justify;">а)
 тестирование, основанное на требованиях, интеграции ЭКПО/ЭКА: данный 
метод тестирования должен быть сконцентрирован на источниках ошибок, 
связанных с выполнением ПО в среде объектного вычислителя, и на 
функционировании на верхнем уровне. Цель тестирования интеграции 
ЭКПО/ЭКА - гарантировать, что ПО в объектной среде функционирует в 
соответствии с требованиями верхнего уровня. Типичные ошибки, выявляемые
 этим методом тестирования, следующие:<br></p><p style="text-align: justify;">1) неправильная обработка прерываний;<br></p><p style="text-align: justify;">2) отказы, связанные с требованиями по времени выполнения;<br></p><p style="text-align: justify;">3)
 некорректная реакция ПО на переходные процессы в аппаратуре или 
аппаратные отказы, например упорядочение начальных действий, сбой при 
загрузке входных данных и нестабильность питания;<br></p><p style="text-align: justify;">4) проблемы конкуренции для шин данных и других ресурсов;<br></p><p style="text-align: justify;">5) неспособность встроенных тестов обнаруживать некоторые виды отказов;<br></p><p style="text-align: justify;">6) ошибки в интерфейсах аппаратных/программных средств;<br></p><p style="text-align: justify;">7) некорректное поведение циклов обратной связи;<br></p><p style="text-align: justify;">8) некорректная работа аппаратуры, управляющей памятью, или другой аппаратуры, работающей под управлением ПО;<br></p><p style="text-align: justify;">9) переполнение стека;<br></p><p style="text-align: justify;">10)
 неправильное функционирование механизмов, поддерживающих корректность и
 совместимость ПО, загружаемого в условиях эксплуатации;<br></p><p style="text-align: justify;">11) нарушения разбиения ПО;<br></p><p style="text-align: justify;">б)
 тестирование, основанное на требованиях, интеграции ЭКПО: данный метод 
тестирования должен быть сконцентрирован на взаимосвязях между 
требованиями к ПО и на реализации требований архитектурой ПО. Цель 
такого тестирования - гарантировать, что программные компоненты 
взаимодействуют друг с другом корректно и удовлетворяют требованиям к ПО
 и архитектуре ПО. Этот метод может быть реализован путем расширения 
области действия требований посредством последовательной интеграции 
компонентов кода с соответствующим расширением области действия тестовых
 вариантов. Типичные ошибки, обнаруживаемые этим методом:<br></p><p style="text-align: justify;">1) некорректная инициализация переменных и констант;<br></p><p style="text-align: justify;">2) ошибки передачи параметров;<br></p><p style="text-align: justify;">3) затирание данных, особенно глобальных;<br></p><p style="text-align: justify;">4) некорректная последовательность событий и действий;<br></p><p style="text-align: justify;">в)
 модульное тестирование, основанное на требованиях: этот метод 
тестирования следует применять для демонстрации того, что каждый 
программный компонент выполняет требования нижнего уровня. Цель 
тестирования нижнего уровня, основанного на требованиях, - 
гарантировать, что программные компоненты удовлетворяют этим требованиям
 нижнего уровня. Типичные ошибки, выявляемые данным методом 
тестирования:<br></p><p style="text-align: justify;">1) ошибка алгоритма в реализации требования к ПО;<br></p><p style="text-align: justify;">2) некорректная работа цикла;<br></p><p style="text-align: justify;">3) некорректные логические решения;<br></p><p style="text-align: justify;">4) отказ при обработке правильно сформированных комбинаций входных условий;<br></p><p style="text-align: justify;">5) некорректная реакция на отсутствующие или искаженные входные данные;<br></p><p style="text-align: justify;">6) некорректная обработка исключительных ситуаций типа арифметических ошибок или выхода за границы массива;<br></p><p style="text-align: justify;">7) некорректная последовательность вычислений;<br></p><p style="text-align: justify;">8) неадекватные точность вычисления в алгоритме, точность представления данных или выполнение расчетов.<br></p><p style="text-align: justify;">8.4.4 Анализ тестового покрытия<br><br>Анализ
 тестового покрытия - процесс, состоящий из двух шагов, включающий в 
себя анализ покрытия, основанного на требованиях, и анализ структурного 
покрытия. Первый шаг - анализ тестовых наборов относительно требований 
ПО, чтобы подтвердить, что выбранные наборы тестов удовлетворяют 
установленным критериям. Второй шаг - подтверждение того, что процедуры 
тестирования, основанные на требованиях, покрыли структуру кода. Анализ 
структурного покрытия может в некоторых случаях не удовлетворять 
заданному критерию покрытия. Например, предусмотрены дополнительные 
рекомендации для разрешения таких ситуаций, как мертвый код.<br></p><p style="text-align: justify;">8.4.4.1 Анализ тестового покрытия, основанного на требованиях<br><br>Цель
 анализа - определить, насколько полно проверены требования к ПО во 
время выполнения тестирования. Анализ может выявить потребность в 
дополнительных тестовых наборах, основанных на требованиях. Данный 
анализ тестового покрытия должен показать, что:<br><br>- существуют тестовые варианты для каждого требования к ПО;<br><br><span style="display:inline-block; width:30px"></span>-
 тестовые варианты удовлетворяют критериям тестирования области 
определения и тестирования на устойчивость к ошибкам, как установлено в 
8.4.2.<br></p><p style="text-align: justify;">8.4.4.2 Анализ структурного покрытия.<br><br>Цель
 анализа - определить, существуют ли структуры кода, которые не были 
проверены тестовыми процедурами, основанными на требованиях. Тестовые 
варианты, основанные на требованиях, могут не полностью покрыть 
структуру кода, поэтому выполняют анализ структурного покрытия и 
проводят дополнительное тестирование, чтобы обеспечить полное 
структурное покрытие. Рекомендации для анализа структурного покрытия:<br></p><p style="text-align: justify;">а) анализ должен подтвердить полноту структурного покрытия, соответствующую уровню ПО;<br></p><p style="text-align: justify;">б)
 анализ структурного покрытия может быть выполнен для исходного кода 
только в том случае, когда уровень ПО не является уровнем А и компилятор
 генерирует объектный код, который является непосредственно трассируемым
 к операторам исходного кода. В противном случае должна быть выполнена 
дополнительная проверка объектного кода, чтобы установить корректность 
генерированных последовательностей кода. Объектный код, генерированный 
компилятором для контроля границ массива, - пример такого объектного 
кода, который не является непосредственно трассируемым к операторам 
исходного кода;<br></p><p style="text-align: justify;">в) анализ должен подтвердить связность по данным и связность по управлению между компонентами кода.<br><br>Анализ
 структурного покрытия может обнаружить структуры кода, которые не были 
выполнены во время тестирования. В этом случае требуются дополнительные 
работы процесса верификации ПО. Наличие таких невыполненных структур 
кода может быть результатом:<br><br>- недостаточности тестовых вариантов
 или процедур, основанных на требованиях: следовательно, должны быть 
генерированы дополнительные тестовые варианты или изменены процедуры 
тестирования, чтобы обеспечить недостающее покрытие. Может потребоваться
 пересмотреть метод, используемый для выполнения анализа покрытия, 
основанного на требованиях;<br><br>- несоответствия в требованиях к ПО: 
требования к ПО должны быть модифицированы, разработаны дополнительные 
тестовые варианты и выполнены соответствующие процедуры тестирования;<br><br>-
 мертвого кода: код должен быть удален и должен быть проведен анализ, 
чтобы оценить эффект изменения и потребность в повторной верификации;<br><br>-
 отключенного кода: для отключенного кода, не предназначенного для того,
 чтобы быть выполненным в некоторой конфигурации при реальной 
эксплуатации, комбинация анализа и тестирования должна показать, что 
предотвращены, изолированы или устранены ситуации, при которых такой код
 мог бы быть случайно выполнен. Для отключенного кода, который может 
быть выполнен только в специальных конфигурациях среды объектного 
компьютера, должна быть установлена рабочая конфигурация, необходимая 
для нормального выполнения этого кода, и должны быть разработаны 
дополнительные тестовые варианты и процедуры тестирования для достижения
 требуемого критерия покрытия.<br><br></p><h3>8.5 Порядок выполнения тестирования ПО</h3><p style="text-align: justify;"></p><p style="text-align: justify;">8.5.1 Модульное тестирование ПО<br><br>Подготовка
 к тестированию модулей. Разработчик должен определить тестовые варианты
 (в терминах входных данных, ожидаемых результатов и критериев оценки) и
 тестовые процедуры для тестирования каждого модуля ПО. Тестовые 
варианты должны покрывать все аспекты проекта для данного модуля. 
Разработчик должен зарегистрировать эту информацию в соответствующих 
файлах разработки ПО.<br><br>Выполнение модульного тестирования. 
Разработчик должен выполнить тестирование программного кода, 
соответствующего каждому модулю. Тестирование должно быть выполнено в 
соответствии с заранее определенными тестовыми вариантами и тестовыми 
процедурами.<br><br>Изменение и повторное тестирование. Разработчик 
должен выполнить изменения ПО, связанные с коррекцией дефектов, 
выявленных в процессе верификации, выполнить повторное тестирование в 
необходимом объеме и модифицировать файлы разработки ПО и другие 
программные средства, основываясь на результатах модульного 
тестирования.<br><br>Анализ и регистрация результатов модульного 
тестирования. Разработчик должен проанализировать результаты модульного 
тестирования и зарегистрировать результаты тестирования и анализа в 
соответствующих файлах разработки ПО.<br></p><p style="text-align: justify;">8.5.2 Интеграционное тестирование<br><br>Интеграция
 и тестирование модулей означают объединение программного кода, 
соответствующего двум или более программным модулям, тестирование 
полученного в результате кода, чтобы гарантировать, что вместе они 
работают так, как предполагалось, и продолжение этого процесса до полной
 интеграции и тестирования кода каждого ЭКПО. Последняя стадия этого 
тестирования - внутреннее тестирование ЭКПО разработчиком.<br><br>Если 
ЭКПО разрабатывают для нескольких различных построений, то до завершения
 разработки всех построений не могут быть выполнены полностью интеграция
 и тестирование модулей данного ЭКПО. Интеграцию и тестирование модулей 
для каждого построения следует интерпретировать как интеграцию ПО, 
разработанного для текущего построения, с другим ПО, разработанным для 
данного и предыдущих построений, и тестирование результата интеграции.<br><br>Подготовка
 к интеграционному тестированию. Разработчик должен определить тестовые 
варианты (в терминах входных данных, ожидаемых результатов и критериев 
оценки) и тестовые процедуры для выполнения интеграционного 
тестирования. Тестовые варианты должны покрывать все аспекты проекта 
уровня ЭКПО и эскизного проекта ЭКПО. Разработчик должен 
зарегистрировать эту информацию в соответствующих файлах разработки ПО.<br><br>Выполнение
 интеграционного тестирования. Тестирование следует выполнять в 
соответствии с тестовыми вариантами и тестовыми процедурами 
интеграционного тестирования.<br><br>Изменение и повторное тестирование.
 Разработчик должен выполнить изменения ПО, связанные с коррекцией 
дефектов, выявленных в процессе верификации, выполнить повторное 
тестирование в необходимом объеме и модифицировать файлы разработки ПО и
 другие программные средства, основываясь на результатах интеграционного
 тестирования.<br><br>Анализ и регистрация результатов интеграционного 
тестирования. Разработчик должен проанализировать результаты 
интеграционного тестирования и зарегистрировать результаты тестирования и
 анализа в соответствующих файлах разработки ПО.<br></p><p style="text-align: justify;">8.5.3 Интеграция и тестирование ЭКПО/ЭКА<br><br>Интеграция
 и тестирование ЭКПО/ЭКА означают объединение ЭКПО с взаимодействующими 
ЭКА и ЭКПО, тестирование полученного объединения с целью определить, 
работают ли они вместе, как предполагалось, и продолжение этого процесса
 до тех пор, пока интеграция и тестирование не будут выполнены для всех 
ЭКПО и ЭКА в системе. Последняя стадия этого тестирования - внутреннее 
тестирование системы разработчиком.<br><br>Если систему или ЭКПО 
разрабатывают для нескольких различных построений, интеграция и 
тестирование ЭКПО/ЭКА не могут быть выполнены полностью до завершения 
последнего построения. Интеграцию и тестирование для каждого построения 
следует интерпретировать как интеграцию текущего построения каждого ЭКПО
 с текущим построением других ЭКПО и ЭКА и тестирование результатов 
интеграции с целью показать, что системные требования, которые должны 
быть реализованы в данном построении, были удовлетворены.<br><br>Подготовка к интеграции и тестированию ЭКПО/ЭКА.<br><br>Разработчик
 должен разработать и зарегистрировать тестовые варианты (в терминах 
входных данных, ожидаемых результатов и критериев оценки) и тестовые 
процедуры для проведения интеграционного тестирования ЭКПО/ЭКА. Тестовые
 варианты должны покрывать все аспекты системного уровня проектирования.
 Разработчик должен зарегистрировать связанную с тестированием 
информацию в соответствующих файлах разработки ПО.<br><br>Выполнение интеграции и тестирования ЭКПО/ЭКА.<br><br>Разработчик
 должен выполнить интеграционное тестирование ЭКПО/ЭКА. Тестирование 
должно быть выполнено в соответствии с тестовыми вариантами и 
процедурами интеграционного тестирования ЭКПО/ЭКА.<br><br>Изменение и повторное тестирование.<br><br>Разработчик
 должен выполнить все необходимые изменения в ПО, принять участие в 
повторном тестировании в необходимом объеме и модифицировать файлы 
разработки ПО и другие программные средства, основываясь на результатах 
интеграционного тестирования ЭКПО/ЭКА.<br><br>Анализ и регистрация результатов интеграции и тестирования ЭКПО/ЭКА.<br><br>Разработчик
 должен участвовать в выполнении анализа результатов интеграции и 
тестирования ЭКПО/ЭКА. Результаты анализа и тестирования должны быть 
зарегистрированы в соответствующих файлах разработки ПО.<br></p><p style="text-align: justify;">8.5.4 Квалификационное тестирование системы<br><br>Разработчик должен принимать участие в квалификационном тестировании системы.<br><br>Квалификационное
 тестирование системы выполняют для демонстрирования заказчику, что были
 удовлетворены системные требования. Квалификационное тестирование 
системы должно покрывать системные требования в Спецификации 
системы/подсистемы и в соответствующих Спецификациях требований к 
интерфейсу. Это тестирование противопоставляется внутреннему 
тестированию системы, выполненному разработчиком, как заключительная 
стадия интеграции и тестирования ЭКПО/ЭКА.<br><br>Если систему 
разрабатывают для нескольких различных построений, квалификационное 
тестирование системы в целом не может быть выполнено до завершения 
последнего построения. Квалификационное тестирование системы для каждого
 построения следует интерпретировать как планирование и выполнение 
тестирования для текущего построения системы с целью показать выполнение
 системных требований, которые должны быть реализованы в данной 
конфигурации.<br><br>Лицом, ответственным за выполнение требований 
8.5.4, не должно быть лицо, принимавшее участие в выполнении 
проектирования или кодировании ПО системы. Это не исключает возможность 
оказания помощи в проведении квалификационного тестирования со стороны 
лиц, выполнявших проектирование или кодирование, например путем 
предоставления тестовых вариантов, основанных на знании внутренней 
реализации системы.<br><br>Квалификационное тестирование системы, 
выполняемое разработчиком, должно включать в себя тестирование в 
объектной или альтернативной среде, одобренной заказчиком.<br><br>Разработчик
 должен участвовать в разработке и регистрации процесса подготовки к 
тестированию, тестовых вариантов и тестовых процедур, которые нужно 
использовать для квалификационного тестирования системы, и прослеживании
 соответствия между тестовыми вариантами и требованиями к системе. Для 
систем ПО все полученные результаты должны быть включены в документ 
"Описание тестирования ПО". Разработчик должен предварительно уведомить 
заказчика о времени и месте проведения квалификационного тестирования 
системы.<br><br>Если квалификационное тестирование системы должно быть 
засвидетельствовано заказчиком, то до его проведения разработчик должен 
проверить тестовые варианты и тестовые процедуры, чтобы гарантировать, 
что они полны и точны и что ПО готово для проведения тестирования в 
присутствии заказчика. Разработчик должен зарегистрировать результаты 
этой работы в соответствующих файлах разработки ПО и должен 
модифицировать тестовые варианты и тестовые процедуры соответствующим 
образом.<br><br>Разработчик должен участвовать в квалификационном 
тестировании системы. Тестирование должно быть выполнено в соответствии с
 тестовыми вариантами и тестовыми процедурами системного тестирования.<br><br>Разработчик
 должен реализовать все необходимые изменения в ПО и участвовать в 
проведении повторного тестирования в требуемом объеме, заранее уведомляя
 заказчика о повторном тестировании. Разработчик обязан вносить 
необходимые изменения в файлы разработки ПО и другие программные 
средства в соответствии с результатами квалификационного тестирования 
системы.<br><br>Разработчик должен участвовать в анализе и регистрации 
результатов квалификационного тестирования системы. Все полученные 
результаты должны быть включены в соответствующий документ "Отчет о 
тестировании ПО".<br><br></p><h2>9 Процесс управления конфигурацией ПО</h2><p style="text-align: justify;">Процесс
 управления конфигурацией ПО должен быть выполнен так, как определено 
процессом планирования ПО (раздел 6) и документом "План управления 
конфигурацией ПО" (12.5). Выходные результаты процесса управления 
конфигурацией фиксируют в Протоколах управления конфигурацией ПО (12.29)
 или в других документах жизненного цикла. Таблица А.8 представляет 
перечень целей и результатов процесса управления конфигурацией.<br><br>Разработчик должен осуществлять управление конфигурацией ПО в соответствии с нижеперечисленными требованиями.<br><br>Примечание
 - Если систему или ЭКПО разрабатывают для нескольких построений, то 
программные средства для каждого из построений могут иметь изменения или
 дополнения по отношению к программным средствам предыдущих построений. 
Управление конфигурацией ПО в каждом построении следует понимать как 
состояние программных средств и контроля в точке начала построения.<br><br></p><h3>9.1 Цели процесса управления конфигурацией ПО</h3><p style="text-align: justify;"><br>Процесс
 управления конфигурацией, выполняемый совместно с другими процессами 
жизненного цикла ПО, направлен на достижение основных целей, а именно на
 то, чтобы обеспечить:<br><br>- определяемую и управляемую конфигурацию ПО на протяжении жизненного цикла;<br><br>-
 целостность при тиражировании исполняемого объектного кода для 
производства ПО или, в случае необходимости, его повторной генерации для
 проведения исследований или модификации;<br><br>- управление входными и
 выходными данными процесса в течение жизненного цикла, что гарантирует 
непротиворечивость и повторяемость работ в процессах;<br><br>- 
контрольную точку для проверки, оценки состояния и контроля изменений 
посредством управления элементами конфигурации и определения базовой 
линии;<br><br>- контроль над тем, чтобы дефектам и ошибкам было уделено внимание, а изменения были зарегистрированы, утверждены и реализованы;<br><br>- оценку соответствия программного средства требованиям;<br><br>- надежное физическое архивирование, восстановление и сопровождение элементов конфигурации.<br><br>Цели
 процесса управления конфигурацией не зависят от уровня ПО. Однако 
выделяют две категории документов жизненного цикла ПО в зависимости от 
содержания работ управления конфигурацией (9.3).<br><br></p><h3>9.2 Состав работ, выполняемых в процессе управления конфигурацией ПО</h3><p style="text-align: justify;"><br>Процесс
 управления конфигурацией включает в себя работы, связанные с 
идентификацией конфигурации, контролем изменений, определением базовой 
линии разработки и архивированием программного средства, включая 
соответствующие документы жизненного цикла, аудитом конфигурации, 
компоновкой и поставкой программного средства. Процесс управления 
конфигурацией не прекращается после того, как программное средство 
принимается заказчиком, а продолжается в течение жизненного цикла 
системы.<br></p><p style="text-align: justify;">9.2.1 Идентификация конфигурации<br><br>Цель
 работ по идентификации конфигурации заключается в однозначной 
маркировке каждого элемента конфигурации и последующих версий, чтобы 
установить базис для управления и ссылок на элементы конфигурации. 
Должны быть выполнены следующие работы:<br><br>- идентификация конфигурации для документов жизненного цикла ПО;<br><br>-
 идентификация конфигурации для каждого элемента конфигурации, для 
каждого отдельно управляемого компонента элемента конфигурации и для 
комбинаций элементов конфигурации, которые составляют программное 
средство;<br><br>- идентификация элементов конфигурации до начала реализации контроля изменений и трассируемости документов;<br><br>-
 идентификация элемента конфигурации прежде, чем он будет использован 
другими процессами жизненного цикла ПО или же будет использован для 
производства ПО или загрузки ПО;<br><br>- если идентификация 
программного средства не может быть определена физически путем осмотра 
(например, осмотр номера компонента платы), то исполняемый объектный код
 должен содержать идентификацию конфигурации, которая должна быть 
доступна для других компонентов системы. Это также применимо к ПО, 
загружаемому в полевых условиях (5.3.5).<br><br>Разработчик должен 
участвовать в выборе ЭКПО, выполняемом согласно проекту архитектуры 
системы, должен идентифицировать объекты, которые будут помещены под 
управление конфигурацией, и должен назначить уникальный для проекта 
идентификатор каждому ЭКПО и каждому дополнительному объекту, 
находящемуся под управлением конфигурацией. Эти объекты включают в себя 
программные средства, которые должны быть разработаны или использованы 
согласно контракту, и элементы среды разработки ПО. Схема идентификации 
должна быть составлена на том уровне, на котором объекты будут 
фактически контролироваться, например компьютерные файлы, электронные 
носители данных, документы, модули ПО, элементы конфигурации. Схема 
идентификации должна включать в себя статус версии/ревизии/выпуска 
официальной версии для каждого объекта.<br></p><p style="text-align: justify;">9.2.2 Контроль конфигурации<br><br>Разработчик
 должен установить и выполнить процедуры контроля конфигурации в 
соответствии с уровнем контроля, установленным для каждого 
идентифицированного объекта (например, авторский контроль, контроль на 
уровне проекта, контроль заказчика); установить полномочия людей или 
групп для санкционирования и выполнения изменений на каждом уровне 
(например, программист/аналитик, руководитель группы программистов, 
руководитель проекта, заказчик); последовательность работ, которые 
необходимо выполнить для того, чтобы запросить разрешение на изменение; 
обработать запрос на изменение, проследить изменение, распределить 
изменения и сопровождать предыдущие версии. Изменения, которые 
воздействуют на объект, уже находящийся под контролем заказчика, должны 
быть предоставлены заказчику в соответствии с установленными контрактом 
формами и процедурами.<br></p><p style="text-align: justify;">9.2.3 Базовые линии и трассируемость<br><br>Цель
 установления базовой линии - определить основу для последующих работ 
процессов жизненного цикла ПО, позволить осуществлять ссылки, управлять 
элементами конфигурации и контролировать трассируемость. В рамках данной
 работы требуется:<br></p><p style="text-align: justify;">а) установить 
базовые линии для элементов конфигурации, на которые распространяется 
сертификационное доверие (промежуточные базовые линии могут быть 
установлены с целью обеспечить контроль работ процессов жизненного цикла
 ПО);<br></p><p style="text-align: justify;">б) установить базовую линию для программного средства и определить ее в Указателе конфигурации ПО (12.26).<br><br>Примечание
 - Модифицируемое пользователем ПО не входит в базовую линию 
программного средства, за исключением связанных с ним компонентов защиты
 и граничных компонентов. Следовательно, в модифицируемое пользователем 
программное средство могут быть внесены изменения, которые не будут 
влиять на идентификацию конфигурации базового программного средства;<br><br></p><p style="text-align: justify;">в)
 базовые линии следует хранить в контролируемых библиотеках ПО 
(физических, электронных или других), чтобы обеспечить их целостность. 
После того как базовая линия будет установлена, она должна быть защищена
 от внесения изменений;<br></p><p style="text-align: justify;">г) после 
проведения работ, относящихся к контролю изменений, должна быть 
разработана базовая линия, производная от ранее установленной базовой 
линии;<br></p><p style="text-align: justify;">д) базовая линия должна 
быть трассируема к той базовой линии, производной от которой она 
является, если при сертификации новой базовой линии используется 
сертификационное доверие к работам или документам процессов жизненного 
цикла, связанных с разработкой предшествующей базовой линии;<br></p><p style="text-align: justify;">е)
 когда правомерно сертификационное доверие к работам или документам 
процессов жизненного цикла ПО, связанным с разработкой предшествующей 
версии элемента конфигурации, каждый элемент конфигурации должен быть 
трассируем к тому элементу конфигурации, производным от которого он 
является;<br></p><p style="text-align: justify;">ж) базовая линия и 
элемент конфигурации должны быть трассируемы либо к выходным данным, 
которые они идентифицируют, либо к процессу, с которым они связаны.<br></p><p style="text-align: justify;">9.2.4 Отчетность о дефектах, трассируемость и корректирующие действия<br><br>Цель
 отчетности о дефектах, трассируемости и корректирующих действий 
заключается в том, чтобы зарегистрировать несоответствие процесса 
требованиям планов и стандартов, отсутствие выходных данных процессов 
жизненного цикла ПО, аномальное поведение программных средств, а также 
гарантировать разрешение этих проблем.<br><br>Примечание - Дефекты, 
связанные с процессами жизненного цикла ПО, и дефекты, связанные с 
программными средствами, могут быть зафиксированы в отдельных системах 
отчетности о дефектах.<br><br><br>Требования к выполнению данных работ:<br><br>-
 должно быть подготовлено сообщение о дефекте, которое описывает 
несоответствие процесса планам, отсутствие выходных данных или 
аномальное поведение ПО, а также о предпринятых корректирующих действиях
 (как это установлено в 12.28);<br><br>- отчетность о дефектах должна 
предусматривать идентификацию затрагиваемых элементов конфигурации или 
определение затрагиваемых работ в процессах, отчетность о состоянии 
сообщений о дефектах, утверждение и закрытие сообщений о дефектах;<br><br>-
 сообщения о дефектах, для которых требуются корректирующие действия в 
отношении программного средства или выходных данных процессов жизненного
 цикла ПО, должны активизировать работы по контролю изменений.<br><br>Примечание - Отчетность о дефектах и работы по контролю изменений являются взаимосвязанными.<br><br><br>Разработчик
 должен составлять сообщения о дефектах/изменениях, чтобы описать каждый
 дефект, обнаруженный в программных средствах, находящихся под контролем
 конфигурации, и каждую проблему выполнения работ, необходимых по 
контракту или описанных в Плане разработки ПО. Сообщения о 
дефектах/изменениях должны описывать дефекты/изменения, необходимые 
действия, связанные с коррекцией, а также предполагаемые сроки их 
выполнения. Эти сообщения следует использовать как входные данные для 
системы корректирующих действий.<br><br>Разработчик должен реализовать 
систему корректирующих действий для обработки каждого дефекта, 
обнаруженного в программных средствах, находящихся под контролем 
конфигурации, и каждую проблему выполнения работ, необходимых по 
контракту или описанных в Плане разработки ПО. Система должна отвечать 
следующим требованиям:<br><br>- входная информация системы должна состоять из сообщений о дефектах/изменениях;<br><br>-
 система должна быть закрытым циклом, гарантирующим, что все 
обнаруженные дефекты немедленно регистрируются и вводятся в систему, 
необходимые действия инициируются, принятые решения осуществляются, 
состояние корректирующих действий отслеживается и сообщения о дефектах 
сопровождаются в течение срока действия контракта;<br><br>- каждый дефект должен быть классифицирован по категориям и приоритетам;<br><br>- должен быть выполнен анализ для выявления возможных тенденций в зарегистрированных дефектах;<br><br>-
 корректирующие действия должны быть оценены, чтобы определить, были ли 
дефекты устранены, неблагоприятные тенденции преодолены, а изменения 
правильно выполнены без внесения дополнительных дефектов.<br></p><p style="text-align: justify;">9.2.5 Контроль изменений и трассируемость<br><br>Цель
 контроля изменений - обеспечить регистрацию, оценку, рассмотрение и 
утверждение изменений на протяжении жизненного цикла ПО. Требования к 
выполнению работ по контролю изменений:<br></p><p style="text-align: justify;">а)
 контроль изменений должен обеспечить целостность элементов конфигурации
 и базовых линий и защиту их от некорректных изменений;<br></p><p style="text-align: justify;">б)
 контроль изменений должен гарантировать, что каждое изменение элемента 
конфигурации учтено в изменении идентификации конфигурации;<br></p><p style="text-align: justify;">в)
 изменения в базовых линиях и элементах конфигурации, находящихся под 
контролем, должны быть зарегистрированы, утверждены и прослежены. 
Отчетность о дефектах связана с контролем изменений, поскольку 
устранение дефекта, который представлен в сообщении, может привести к 
изменениям элементов конфигурации или базовых линий.<br><br>Примечание -
 Общепризнанно, что ранняя реализация контроля изменений помогает 
управлению и организации работ в процессах жизненного цикла ПО;<br><br></p><p style="text-align: justify;">г)
 изменения ПО должны быть прослежены вплоть до места их источника, а 
выполнение процессов жизненного цикла ПО необходимо повторить с момента,
 начиная с которого изменения сказываются на выходных данных. Так, 
например, ошибка, обнаруженная в интеграции ПО/аппаратуры, которая 
является результатом некорректного проектирования, должна повлечь за 
собой исправление проекта, исправление кода и повторение работ 
соответствующих интеграционных процессов;<br></p><p style="text-align: justify;">д)
 при проведении работ по внесению изменений должны быть модифицированы 
документы жизненного цикла ПО, на которые эти изменения влияют, а 
обновление документов следует сопровождать работами по контролю 
изменений.<br><br>Работы по контролю изменений следует сопровождать работами по просмотру изменений.<br></p><p style="text-align: justify;">9.2.6 Просмотр изменений<br><br>Цель
 работ по просмотру изменений - обеспечить оценку дефектов и изменений, 
их утверждение или неутверждение, реализацию утвержденных изменений и 
обратную связь с процессами, на которые изменения воздействуют, путем 
выполнения отчетности о дефектах и использования методов контроля 
изменений. Методы контроля определяют в процессе планирования ПО. Работы
 по просмотру изменений:<br><br>- подтверждение того, что затронутые изменениями элементы конфигурации идентифицированы;<br><br>- оценка воздействия изменений на требования безопасности и обеспечение обратной связи с процессом оценки безопасности системы;<br><br>- анализ дефектов или изменений и решений о действиях, которые следует предпринять для их коррекции;<br><br>-
 обеспечение обратной связи от сообщений о дефектах, контроля изменений и
 корректирующих действий к процессам, в которых реализуются изменения.<br></p><p style="text-align: justify;">9.2.7 Отчет о состоянии конфигурации<br><br>Цель
 отчетности о состоянии конфигурации состоит в обеспечении информации 
для управления конфигурацией процессов жизненного цикла ПО относительно 
идентификации конфигурации, базовых линий, сообщений о дефектах и 
контроля изменений. Работы, связанные с отчетностью о состоянии 
конфигурации:<br><br>- регистрация идентификации элементов конфигурации,
 идентификации базовых линий, состояния сообщений о дефектах, хронологии
 изменений и состояния выпускаемой линии;<br><br>- определение 
информации, подлежащей сопровождению, и способов регистрации и ведения 
отчетности о состоянии конфигурации этой информации.<br><br>Разработчик 
должен создавать периодические отчеты о состоянии конфигурации всех 
объектов, которые были помещены под управление конфигурацией. Эти отчеты
 должны поддерживаться в течение срока действия контракта. Они должны 
включать в себя информацию о текущем состоянии базовой линии, ревизии, 
официальной выпускаемой версии каждого объекта и информацию об истории 
изменений объекта с момента его помещения под контроль конфигурации, а 
также о состоянии сообщений о дефектах /изменениях, связанных с данным 
объектом.<br></p><p style="text-align: justify;">9.2.8 Архивирование и получение документов. Выпуск версии<br><br>Цель
 работ по архивированию и получению документов - обеспечить получение 
связанных с программным средством документов жизненного цикла ПО, 
которые необходимы для копирования, повторной генерации, повторного 
тестирования и модификации программного средства. Целью работы по 
выпуску версии является гарантирование использования, особенно для 
производства, исключительно санкционированного ПО, которое 
предварительно должно быть архивировано и официальная версия которого 
должна быть получена только из архива. Требования к выполнению работ 
данного вида:<br></p><p style="text-align: justify;">а) документы 
жизненного цикла ПО, связанные с программным средством, должны быть 
получены из утвержденного источника (например, от 
организации-разработчика);<br></p><p style="text-align: justify;">б) следует установить процедуры, обеспечивающие целостность хранимых данных (независимо от носителей данных), которые должны:<br></p><p style="text-align: justify;">1) гарантировать, что никакое несанкционированное изменение не может быть выполнено;<br></p><p style="text-align: justify;">2) выбирать носители данных, которые минимизируют ошибки регенерации и износа;<br></p><p style="text-align: justify;">3) проверять и/или обновлять архивные данные с частотой, соответствующей сроку службы носителя;<br></p><p style="text-align: justify;">4) хранить копии в физически отдаленных архивах, что минимизирует риск потери данных в катастрофической ситуации;<br></p><p style="text-align: justify;">в)
 процесс копирования должен быть верифицирован, чтобы гарантировать 
получение точных копий, и должны существовать процедуры, гарантирующие 
безошибочное копирование исполняемого объектного кода;<br></p><p style="text-align: justify;">г)
 элементы конфигурации должны быть идентифицированы и должна быть 
выпущена их официальная версия до того, как осуществляется производство 
ПО. Должны быть установлены полномочия по выпуску версий элементов 
конфигурации, как минимум, должен быть выполнен выпуск версий 
компонентов программного средства, загружаемого в вычислительную систему
 или оборудование;<br></p><p style="text-align: justify;">д) необходимо 
установить процедуры хранения, включения, удаления и т.д., чтобы 
удовлетворить требования пригодности к применению и обеспечить 
модификацию ПО.<br></p><p style="text-align: justify;">9.2.9 Контроль загрузки ПО<br><br>Цель
 работ по контролю загрузки ПО заключается в обеспечении загрузки 
исполняемого объектного кода в систему с соответствующей защитой. 
Контроль загрузки ПО относится к процессу, посредством которого 
программные инструкции и данные передаются из главного запоминающего 
устройства в вычислительную систему и оборудование. Используемыми 
методами могут быть, например, установка заранее запрограммированных в 
заводских условиях запоминающих устройств или повторное программирование
 управляющей системы или оборудования на месте с использованием 
устройства загрузки в полевых условиях (выбор метода является предметом 
для утверждения сертифицирующей организацией). Какой бы метод ни 
использовали, контроль загрузки должен включать в себя:<br><br>- 
процедуры присваивания регистрационных номеров и идентификации носителей
 данных, которые определяют конфигурацию ПО, предназначенного для 
загрузки в управляющую систему;<br><br>- обеспечение информации, 
подтверждающей совместимость ПО с управляющей системой и аппаратурой 
независимо от того, поставляют ли ПО в качестве конечного элемента или 
его устанавливают в вычислительной системе.<br></p><p style="text-align: justify;">9.2.10 Контроль среды жизненного цикла ПО<br><br>Цель
 контроля среды жизненного цикла ПО - гарантировать, что 
инструментальные средства, используемые для создания ПО, 
идентифицируются, контролируются и могут быть получены из 
соответствующих источников. Инструментальные средства среды жизненного 
цикла ПО определяются в процессе планирования ПО и идентифицируются в 
документе "Указатель конфигурации среды жизненного цикла ПО" (12.25). 
Требования к выполнению работ данного вида:<br><br>- установка 
идентификации конфигурации для исполняемого объектного кода (или его 
эквивалента), используемого для разработки, управления, компоновки, 
верификации и загрузки ПО;<br><br><span style="display:inline-block; width:30px"></span>-
 контроль соответствия процесса управления конфигурацией для управления 
аттестованными инструментальными средствами целям, относящимся к 
категории 1 или 2 контроля документов (9.3), как определено в 13.2.3, 
перечисление б);<br><br>- если требования 9.2.9 неприменимы, то процесс 
управления конфигурацией для управления исполняемым объектным кодом (или
 его эквивалентом) для инструментальных средств, используемых для 
компоновки и загрузки ПО (например, компиляторов, ассемблеров, 
редакторов связей), должен соответствовать целям, относящимся, как 
минимум, к категории 2 контроля документов.<br><br></p><h3>9.3 Категории контроля документов</h3><p style="text-align: justify;"><br>Документы
 жизненного цикла ПО могут быть отнесены к одной из двух категорий: 
категории контроля 1 (КК1) и категории контроля 2 (КК2). Эти категории 
касаются функций управления конфигурацией в части документов. Таблица 1 
определяет перечень целей процесса управления кoнфигypациeй, связанных с
 каждой категорией контроля. В таблице 1 указано, какие функции 
управления конфигурацией должны быть выполнены для документов жизненного
 цикла ПО, относящихся к данной категории. Таблицы приложения А 
определяют категорию контроля каждого документа жизненного цикла ПО для 
уровней ПО. Для категорий контроля документов требуется:<br><br>- 
целевые функции процесса управления конфигурацией для документов 
жизненного цикла ПО, отнесенных к категории КК1, применять согласно 
таблице 1;<br><br>- целевые функции процесса управления конфигурацией 
для документов жизненного цикла ПО, отнесенных к категории КК2, 
применять согласно таблице 1, как минимум.<br><br><br>Таблица 1 - Целевые функции процесса управления конфигурацией, связанные с документами категорий КК1 и КК2<br></p><p></p><table class="table table-condensed"><tbody><tr><td style="" valign="top"><p style="text-align: center;">Цель процесса управления конфигурацией<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">КК1<br></p></td><td style="" valign="top"><p style="text-align: center;">КК2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Идентификация конфигурации<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.1<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Базовая линия<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.3 а), б), в), г), д)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Трассируемость<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.3 е), ж)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Отчетность о дефектах<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.4<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Контроль изменений - целостность и идентификация<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.5 а), б)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Контроль изменений - трассируемость<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.5 в), г), д)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Просмотр изменений<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.6<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Отчетность о состоянии конфигурации<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.7<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Получение документа из архива<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.8 а)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Защита от несанкционированных изменений<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.8 б 1)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Выбор носителей, обновление, копирование<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.8 б 2), б 3), б 4), в)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Выпуск версии<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.8 г)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Хранение данных<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.8 д)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td></tr><tr><td colspan="4" style="" valign="top"><p style="text-align: justify;">Обозначения:<br><br>* - цель должна быть удовлетворена для документов данной категории;<br><br>пробел - удовлетворение цели на усмотрение разработчика.<br></p></td></tr></tbody></table><p></p><p style="text-align: justify;"><br></p><h3>9.4 Аудит конфигурации</h3><p style="text-align: justify;"><br>Разработчик должен поддерживать проводимый заказчиком аудит конфигурации, как определено в контракте.<br><br></p><h3>9.5 Компоновка и поставка ПО</h3><p style="text-align: justify;"><br>Разработчик
 должен устанавливать и выполнять процедуры по компоновке, хранению, 
обработке и поставке программного средства. Разработчик должен сохранять
 оригинал поставляемого программного средства в течение срока действия 
контракта.<br><br></p><h2>10 Процесс обеспечения качества ПО</h2><p style="text-align: justify;">Процесс
 обеспечения качества ПО должен быть выполнен в соответствии с процессом
 планирования ПО (раздел 6) и документом "План обеспечения качества ПО" 
(12.6). Выходные результаты процесса обеспечения качества представлены в
 Протоколах обеспечения качества ПО (12.30) или в других документах 
жизненного цикла ПО. Процесс обеспечения качества оценивает процессы 
жизненного цикла ПО, их выходные результаты и гарантирует, что цели этих
 процессов удовлетворены, отклонения от установленных требований 
обнаружены, оценены, прослежены, разрешены и что программные средства и 
документы жизненного цикла ПО соответствуют сертификационным 
требованиям. Работы процесса обеспечения качества должны быть выполнены 
разработчиком.<br><br>Если систему или ЭКПО разрабатывают для нескольких
 различных построений, работы и программные средства для каждого 
построения следует оценивать для целей данного конкретного построения. 
Работы или программное средство, соответствующее этим целям, можно 
считать удовлетворительным даже в случае отсутствия информации для 
разработки в более поздних построениях. Планирование обеспечения 
качества ПО в данном случае должно быть включено в планирование 
разработки ПО (6.6).<br><br></p><h3>10.1 Цели процесса обеспечения качества ПО</h3><p style="text-align: justify;"><br>Цель процесса обеспечения качества - обеспечить уверенность в том, что:<br></p><p style="text-align: justify;">а) процессы разработки ПО и интегральные процессы выполняют по утвержденным планам ПО и стандартам;<br></p><p style="text-align: justify;">б) критерии перехода для процессов жизненного цикла ПО удовлетворены;<br></p><p style="text-align: justify;">в)
 просмотр соответствия программного средства выполнен для каждого 
программного средства, разрабатываемого в соответствии с требованиями 
настоящего стандарта и условиями контракта.<br><br>Применимость целей обеспечения качества для конкретного уровня ПО определена в таблице А.9.<br><br></p><h3>10.2 Состав работ, выполняемых в процессе обеспечения качества ПО</h3><p style="text-align: justify;"><br>Для того чтобы цели процесса обеспечения качества были выполнены:<br></p><p style="text-align: justify;">а)
 процесс обеспечения качества должен играть активную роль в работах 
процессов жизненного цикла ПО на всех этапах жизненного цикла, обладая 
при этом необходимыми полномочиями, ответственностью и независимостью, 
чтобы гарантировать удовлетворение целям процесса обеспечения качества;<br></p><p style="text-align: justify;">б) процесс обеспечения качества должен гарантировать, что планы ПО и стандарты разработаны и проверены на непротиворечивость;<br></p><p style="text-align: justify;">в)
 процесс обеспечения качества должен гарантировать, что процессы 
жизненного цикла ПО выполнены в соответствии с утвержденными планами ПО и
 стандартами;<br></p><p style="text-align: justify;">г) процесс 
обеспечения качества должен включать в себя аудиты процессов разработки 
ПО и интегральных процессов в течение жизненного цикла ПО, позволяющие 
гарантировать, что:<br></p><p style="text-align: justify;">1) разработаны планы ПО, определенные в 6.2;<br></p><p style="text-align: justify;">2) обнаружены, зарегистрированы, прослежены и утверждены заказчиком отклонения в выполнении требований планов ПО и стандартов;<br></p><p style="text-align: justify;">3) зарегистрированы принятые отклонения;<br></p><p style="text-align: justify;">4) обеспечена среда разработки ПО в соответствии с определением в планах ПО;<br></p><p style="text-align: justify;">5) отчетность о дефектах, трассируемость и корректирующие действия соответствуют Плану управления конфигурацией ПО;<br></p><p style="text-align: justify;">6)
 ввод данных, требуемых для процессов жизненного цикла ПО, находится под
 контролем постоянно выполняемого процесса оценки безопасности системы;<br></p><p style="text-align: justify;">д)
 процесс обеспечения качества должен гарантировать, что критерии 
переходов для процессов жизненного цикла ПО были удовлетворены в 
соответствии с утвержденными планами ПО;<br></p><p style="text-align: justify;">е)
 процесс обеспечения качества должен гарантировать, что для документов 
жизненного цикла ПО осуществлен контроль в соответствии с категориями 
контроля, определенными в 9.3 и таблицах приложения А;<br></p><p style="text-align: justify;">ж) должен быть проведен просмотр согласованности ПО до поставки программных средств, представленных для сертификации;<br></p><p style="text-align: justify;">з)
 должны быть выполнены работы, связанные с отчетностью по работам 
процесса обеспечения качества (12.30), включающие в себя результаты 
аудита и доказательство завершения просмотра согласованности ПО для 
каждого программного средства, представленного для сертификации.<br><br></p><h3>10.3 Просмотр согласованности ПО</h3><p style="text-align: justify;"><br>Цель
 просмотра согласованности ПО - гарантировать, что полностью 
подготовлены процессы и документы жизненного цикла ПО для 
сертифицируемого программного средства, а исполняемый объектный код 
находится под контролем конфигурации и может быть повторно генерирован. 
Этот просмотр должен определить, что:<br><br>- завершены запланированные
 работы процессов жизненного цикла ПО для получения сертификационного 
доверия, включая генерацию документов жизненного цикла ПО, и отчеты об 
их завершении сохранены;<br><br><span style="display:inline-block; width:30px"></span>-
 документы жизненного цикла ПО, которые разработаны в соответствии со 
специфицированными системными требованиями и с требованиями, 
определяемыми безопасностью, или требованиями к ПО, удовлетворяют этим 
требованиям;<br><br>- документы жизненного цикла ПО сформированы в 
соответствии с планами ПО и стандартами разработки (12.9-12.11) и 
проконтролированы в соответствии с Планом управления конфигурацией ПО;<br><br>- сообщения о дефектах подготовлены в соответствии с Планом управления конфигурацией ПО, их статус был оценен и зарегистрирован;<br><br>- отклонения реализации от требований к ПО зарегистрированы и утверждены;<br><br>- исполняемый объектный код может быть восстановлен из исходного текста, зарегистрированного в архиве;<br><br>- утвержденный код ПО может быть успешно загружен;<br><br>-
 сообщения о дефектах, оставшиеся от предыдущего просмотра 
согласованности ПО, заново переоцениваются, чтобы определить их 
состояние;<br><br>- если сертификационное доверие распространяется на 
использование ранее разработанного ПО, то текущая базовая линия 
программного средства должна быть трассируемой к предыдущей базовой 
линии и изменения в базовой линии должны быть утверждены.<br><br></p><h3>10.4 Документирование обеспечения качества ПО</h3><p style="text-align: justify;"><br>Разработчик
 должен регистрировать отчеты о каждой выполненной работе по обеспечению
 качества ПО. Эти отчеты следует сохранять в течение срока действия 
контракта. Проблемы, обнаруженные в программных средствах, при 
управлении конфигурацией должны быть обработаны, как описано в 9.2.4.<br><br></p><h3>10.5 Независимость в обеспечении качества ПО</h3><p style="text-align: justify;"><br>Лица,
 ответственные за обеспечение качества ПО, не должны участвовать в 
разработке программного средства или быть ответственными за программное 
средство или работы по его созданию. Однако это не запрещает таким лицам
 принимать участие в оценках программных средств или выполненных работ. 
Лица, ответственные за обеспечение качества ПО в соответствии с 
контрактом, должны иметь возможности, обязательства, полномочия и 
организационную независимость для объективной оценки качества ПО, а 
также для инициирования и верификации действий, связанных с коррекцией.<br><br></p><h2>11 Процесс сертификационного сопровождения  </h2><p style="text-align: justify;">Цель
 процесса сертификационного сопровождения - установить взаимодействие и 
взаимопонимание между соискателем и сертифицирующей организацией для 
поддержки процесса сертификации. Процесс сертификационного сопровождения
 выполняют так, как определено процессом планирования ПО (раздел 6) и 
Планом сертификации в части ПО (12.1). Таблица А.10 содержит резюме 
целей и результатов данного процесса.<br><br></p><h3>11.1 Средства согласования и планирования</h3><p style="text-align: justify;"><br>Соискатель
 предлагает средства согласования, которые показывают, что система будет
 удовлетворять сертификационному базису. План сертификации в части ПО 
(12.1) определяет аспекты ПО прикладной системы или оборудования 
применительно к предлагаемым средствам согласования. Этот план 
устанавливает также уровни ПО, которые определяются процессом оценки 
безопасности системы. Соискатель должен:<br><br>- передать План 
сертификации в части ПО и другие требуемые документы для просмотра 
сертифицирующей организации в тот момент времени, когда влияние 
изменений минимально, т.е. когда они могут быть проведены в рамках 
проектных ограничений;<br><br>- разрешить разногласия, идентифицируемые сертифицирующей организацией, касающиеся аспектов сертификации;<br><br>- получить согласие сертифицирующей организации на реализацию Плана сертификации в части ПО.<br><br></p><h3>11.2 Обоснование согласованности</h3><p style="text-align: justify;"><br>Соискатель
 должен обеспечить доказательства того, что процессы жизненного цикла ПО
 удовлетворяют требованиям планов ПО. Эти доказательства могут включать в
 себя просмотры и обсуждения работ, составляющих процессы жизненного 
цикла ПО, и, в случае необходимости, документов жизненного цикла ПО, 
проводимые с соискателем или его поставщиками. Соискатель должен:<br><br><span style="display:inline-block; width:30px"></span>- разрешить спорные вопросы, поднятые сертифицирующей организацией и являющиеся результатом выполненных ею просмотров;<br><br>- передать Итоговый документ разработки ПО (12.31) и Указатель конфигурации ПО (12.26) сертифицирующей организации;<br><br>- передать или сделать доступными другие документы и доказательства соответствия, требуемые сертифицирующей организацией.<br><br></p><h3>11.3 Минимальный состав документов жизненного цикла ПО, передаваемых сертифицирующей организации</h3><p style="text-align: justify;"><br>Минимальный состав документов жизненного цикла ПО, передаваемых сертифицирующей организации на утверждение:<br><br>- План сертификации в части ПО;<br><br>- Указатель конфигурации ПО;<br><br>- Итоговый документ разработки ПО.<br><br></p><h3>11.4 Документы жизненного цикла ПО, относящиеся к типовому проекту</h3><p style="text-align: justify;"><br>Если
 ничто другое не согласовано с сертифицирующей организацией, то правила 
получения и утверждения документов жизненного цикла ПО, связанных с 
типовым проектом, распространяются на следующие документы:<br><br>- Спецификация требований к ПО;<br><br>- Описание проекта ПО;<br><br>- Исходный код ПО;<br><br>- Исполняемый объектный код ПО;<br><br>- Указатель конфигурации ПО;<br><br>- Итоговый документ разработки ПО.<br><br></p><h2>12 Документы, создаваемые в процессах жизненного цикла ПО  </h2><p style="text-align: justify;">Документы
 создают в течение всего жизненного цикла ПО, чтобы планировать 
требуемые действия, управлять ими, объяснять, определять, регистрировать
 выполнение требуемых действий или обеспечивать доказательство 
процессов. Эти документы позволяют реализовать процессы жизненного цикла
 ПО, сертификацию системы и постсертификационную модификацию 
программного средства. Заказчик осуществляет выбор необходимого и 
экономически обоснованного состава и содержания документов для 
конкретной разработки. Заказчик разрешает любые конфликты между 
требованиями сертифицирующей организации и требованиями контракта. В 
настоящем стандарте не ставилась задача описать все документы, которые 
могут быть необходимы для разработки конкретного программного средства, и
 предложить конкретные методы объединения и организации информации. 
Дополнительно к документам, определяемым в указанных подразделах, могут 
быть подготовлены другие документы для поддержки процесса сертификации и
 удовлетворения требованиям контракта. В настоящем разделе обсуждаются 
характеристики, форма, методы контроля конфигурации и содержание 
документов жизненного цикла ПО. Характеристиками документов жизненного 
цикла ПО являются:<br><br>- однозначность: информация является 
однозначной, если она написана в терминах, которые допускают только 
единственную интерпретацию, уточненную, если необходимо, 
соответствующими определениями;<br><br>- полнота: информация является 
полной, если она включает в себя необходимые, релевантные требования 
и/или описательные материалы, определяет ответную реакцию для всего 
диапазона допустимых входных данных, используемые рисунки и таблицы 
сопровождаются необходимыми обозначениями, термины и единицы измерений 
определены;<br><br>- верифицируемость: информация является 
верифицируемой, если она может быть проверена на корректность человеком 
или инструментальным средством;<br><br>- согласованность: информация является согласованной, если не существует противоречий внутри нее;<br><br>-
 модифицируемость: информация является модифицируемой, если она 
структурирована и имеет такой стиль, что изменения могут быть выполнены в
 необходимом объеме, согласованно и корректно без нарушения структуры;<br><br>- трассируемость: информация является трассируемой, если для каждого ее компонента может быть определен первоисточник.<br><br>Дополнительные требования:<br><br>-
 форма: форма должна обеспечивать эффективный поиск и просмотр 
документов жизненного цикла ПО в процессе обслуживания систем. Состав 
документов и их конкретная форма должны быть определены в Плане 
сертификации в части ПО.<br><br>Примечания<br></p><p style="text-align: justify;">1
 Документы жизненного цикла ПО могут иметь различные формы. Например, 
они могут быть подготовлены как компьютерный файл, хранящийся на 
магнитных носителях, или как отображение на удаленном терминале. 
Документация может быть оформлена в виде отдельных документов, может 
объединять несколько документов или быть разделена на несколько 
документов.<br></p><p style="text-align: justify;">2 План сертификации в
 части ПО и Итоговый документ разработки ПО могут быть потребованы 
сертифицирующей организацией как отдельно напечатанные документы.<br><br><br>Документы
 жизненного цикла ПО могут быть отнесены к одной из двух категорий 
контроля в соответствии с применяемыми методами управления 
конфигурацией: категории контроля 1 (КК1) и категории контроля 2 (КК2) 
(9.3). Введение различных категорий контроля позволяет снизить стоимость
 разработки в случаях, когда менее строгий контроль может быть применен 
без снижения безопасности. Минимальная категория контроля для каждого 
документа и ее изменения в зависимости от уровня ПО определены в 
приложении А. Хотя назначение и содержание этих документов могут быть 
разными, к ним, как минимум, следует применять метод контроля КК2.<br><br></p><h3>12.1 План сертификации в части ПО</h3><p style="text-align: justify;"><br>План
 сертификации в части ПО, в первую очередь, предназначен для 
использования сертифицирующей организацией с целью определить, что 
предлагаемый соискателем жизненный цикл ПО соответствует требованиям для
 разработки ПО указанного уровня. Этот план должен иметь следующие 
разделы:<br></p><p style="text-align: justify;">а) Обзор системы. Этот 
раздел представляет обзор системы, включающий в себя описание ее функций
 и их распределения между аппаратным и программным обеспечением, 
архитектуру, используемые процессоры, аппаратно-программные интерфейсы и
 особенности обеспечения безопасности.<br></p><p style="text-align: justify;">б)
 Обзор ПО. Этот раздел кратко описывает функции ПО, уделяя особое 
внимание предлагаемым концепциям обеспечения безопасности и разбиения 
структуры, например совместное использование ресурсов, резервирование, 
многоверсионное программирование, обеспечение отказоустойчивости, 
стратегия синхронизации и планирования выполнения ПО.<br></p><p style="text-align: justify;">в)
 Вопросы сертификации. Этот раздел описывает сертификационный базис, 
включая средства доказательства соответствия разработки ПО требованиям 
сертификации ПО; раздел также устанавливает предлагаемые уровни ПО 
(уровни критичности) и суммирует пояснения, обеспечивающие процесс 
оценки безопасности системы, включая потенциальный вклад ПО в создание 
отказных ситуаций.<br></p><p style="text-align: justify;">г) Жизненный 
цикл ПО. Этот раздел определяет используемую модель жизненного цикла ПО,
 которая должна быть выполнена и которую контролируют процессы 
жизненного цикла ПО, детализируемая информация для последних определена в
 соответствующих планах ПО. Данный раздел поясняет то, каким образом 
должны быть удовлетворены цели каждого процесса жизненного цикла, и 
точно определяет организации, участвующие в разработке, организационную 
ответственность, а также ответственность за процессы жизненного цикла 
системы и процесс сертификационного взаимодействия.<br></p><p style="text-align: justify;">д)
 Документы жизненного цикла ПО. Этот раздел точно специфицирует 
документы жизненного цикла ПО, которые должны быть разработаны и должны 
контролироваться процессами жизненного цикла ПО. Данный раздел также 
описывает отношения между этими документами или другими документами, 
определяющими систему, документами жизненного цикла, представляемыми на 
рассмотрение сертифицирующей организации, форму документов и способ, 
посредством которого документы жизненного цикла становятся доступными 
для сертифицирующей организации.<br></p><p style="text-align: justify;">е)
 План-график. Этот раздел описывает средства соискателя, которые должны 
обеспечивать прозрачность работ процессов жизненного цикла ПО для 
сертифицирующей организации (в целях планирования просмотров).<br></p><p style="text-align: justify;">ж)
 Дополнительные вопросы. Этот раздел описывает специфические 
особенности, которые могут влиять на процесс сертификации, например:<br></p><p style="text-align: justify;">1) альтернативные методы согласования;<br></p><p style="text-align: justify;">2) аттестация инструментальных средств;<br></p><p style="text-align: justify;">3) использование ранее разработанного ПО;<br></p><p style="text-align: justify;">4) использование ПО, разработанного в необязательном порядке;<br></p><p style="text-align: justify;">5) использование модифицируемого пользователем ПО;<br></p><p style="text-align: justify;">6) использование коммерчески доступного ПО;<br></p><p style="text-align: justify;">7) использование ПО, загружаемого в полевых условиях;<br></p><p style="text-align: justify;">8) использование многоверсионного неидентичного ПО.<br><br></p><h3>12.2 План разработки ПО</h3><p style="text-align: justify;"><br>План
 разработки ПО содержит описание целей, стандартов и модели жизненного 
цикла ПО, которые должны быть использованы в процессах разработки ПО. 
Этот план может быть включен в План сертификации в части ПО. План 
разработки ПО должен включать в себя следующие разделы:<br></p><p style="text-align: justify;">а)
 Стандарты: идентификация стандартов на разработку требований к ПО, 
стандартов на процесс проектирования ПО, стандартов кодирования ПО для 
данного проекта, а также ссылки на стандарты для ранее разработанного 
ПО, включая коммерчески доступное ПО, если эти стандарты различаются.<br></p><p style="text-align: justify;">б)
 Жизненный цикл ПО: описание процессов жизненного цикла ПО, которые 
должны быть использованы для формирования конкретного жизненного цикла 
данного проекта, включая критерии перехода между процессами ПО. Это 
описание отличается от резюме в Плане сертификации в части ПО тем, что 
оно содержит подробности, необходимые для гарантии соответствующей 
реализации процессов жизненного цикла ПО.<br></p><p style="text-align: justify;">в) Среда разработки ПО: обоснование выбора используемой среды разработки ПО в аппаратной и программной частях, включая:<br></p><p style="text-align: justify;">1) выбор методов и средств разработки требований;<br></p><p style="text-align: justify;">2) выбор методов и средств проектирования ПО;<br></p><p style="text-align: justify;">3) выбор языков программирования, средств кодирования, компиляторов, редакторов связей и загрузчиков;<br></p><p style="text-align: justify;">4) аппаратную поддержку для инструментальных средств.<br><br></p><h3>12.3 План верификации ПО</h3><p style="text-align: justify;"><br>План
 верификации ПО включает в себя описание процедур верификации, 
удовлетворяющих целям процесса верификации. Эти процедуры могут 
варьироваться в зависимости от уровня ПО, как определено в таблицах 
приложения А. Данный план должен включать в себя следующие разделы:<br></p><p style="text-align: justify;">а)
 Организация: организационная ответственность внутри процесса 
верификации ПО и интерфейсы с другими процессами жизненного цикла ПО.<br></p><p style="text-align: justify;">б) Независимость: описание методов для обеспечения независимости верификации, когда это требуется.<br></p><p style="text-align: justify;">в) Методы верификации: описание методов верификации, которые будут использованы на каждом этапе процесса верификации ПО:<br></p><p style="text-align: justify;">1) методы просмотра, включающие в себя контрольные листы и другие средства поддержки;<br></p><p style="text-align: justify;">2) методы анализа, включающие в себя методы анализа трассируемости и оценки полноты покрытия;<br></p><p style="text-align: justify;">3)
 методы тестирования, включающие в себя рекомендации для выбора тестовых
 вариантов, используемых тестовых процедур, генерации тестовых данных.<br></p><p style="text-align: justify;">г)
 Среда верификации: описание оборудования для тестирования, 
инструментальных средств тестирования и анализа, а также руководств по 
применению этих средств и аппаратного тестового оборудования.<br></p><p style="text-align: justify;">д) Критерии перехода: критерии перехода к процессу верификации ПО, определяемому в этом плане.<br></p><p style="text-align: justify;">е) Проверка разбиения: если используют разбиение на части, то описывают метод верификации целостности.<br></p><p style="text-align: justify;">ж)
 Допустимость использования компилятора: описание соглашений 
относительно корректности применения компилятора, редактора связей или 
загрузчика (6.4.2).<br></p><p style="text-align: justify;">з) 
Руководство по повторной верификации: описание методов идентификации 
модифицируемых областей ПО и измененных частей исполняемого объектного 
кода. Повторная верификация должна гарантировать, что ранее 
зарегистрированные ошибки или классы ошибок были устранены.<br></p><p style="text-align: justify;">и)
 Ранее разработанное ПО: если для базовой линии ранее разработанного ПО 
требования к процессу верификации не согласуются с требованиями данного 
документа, приводят описание методов верификации, удовлетворяющих этим 
требованиям.<br></p><p style="text-align: justify;">к) Многоверсионное ПО: при использовании многоверсионного ПО необходимо описание работ процесса верификации для него.<br><br></p><h3>12.4 План квалификационного тестирования ПО</h3><p style="text-align: justify;"><br>План
 квалификационного тестирования ПО содержит информацию для проведения 
квалификационного тестирования (испытаний) систем и подсистем ПО, 
описание тестовой среды, которая будет использована при тестировании, 
идентифицирует выполняемые тесты и указывает план-график выполнения 
тестирования.<br><br>Для каждой предполагаемой тестовой установки должны быть указаны:<br><br>- идентификация, перечень и используемые версии ПО, для которых будет выполнено тестирование на данной установке, их назначение;<br><br>-
 идентификация, перечень и используемые виды аппаратных средств, 
интерфейсного оборудования, устройств связи, дополнительных внешних 
устройств, генераторов тестовых сообщений, устройств синхронизации 
тестов и т.п.;<br><br>- права собственности и лицензирование;<br><br>- организации, принимающие участие в квалификационном тестировании, их роли и ответственность.<br><br>Кроме
 того, в данном документе должны быть представлены план-график 
тестирования и матрица трассирования тестов к требованиям к ПО.<br><br>Допускается
 включение перечисленной в настоящем подразделе информации в документ 
"План верификации ПО" (см. 12.3), если заказчик не требует разработки 
отдельного документа, описывающего план квалификационного тестирования.<br><br></p><h3>12.5 План управления конфигурацией ПО</h3><p style="text-align: justify;"><br>План
 управления конфигурацией ПО устанавливает методы, используемые для 
достижения целей процесса управления конфигурацией ПО на протяжении 
жизненного цикла ПО. Разделы плана следующие:<br><br>- Среда: описание 
среды управления конфигурацией, которая будет использована, включая 
процедуры, инструментальные средства, методы, стандарты, организационную
 ответственность и интерфейсы.<br><br>- Состав работ: описание работ 
процесса управления конфигурацией в жизненном цикле ПО, которые 
обеспечат реализацию целей данного процесса.<br><br>- Идентификация 
конфигурации: элементы конфигурации, которые должны быть 
идентифицированы; срок, когда они будут идентифицированы; методы 
идентификации документов жизненного цикла ПО (например, регистрационные 
номера) и связь идентификации ПО и системы.<br><br>- Базовая линия и 
трассируемость: средства установки базовой линии, как базовая линия 
будет установлена, когда эта базовая линия будет установлена, средства 
управления библиотекой ПО и трассируемость элементов конфигурации и 
базовой линии.<br><br>- Отчетность о дефектах: содержание и 
идентификация сообщений о дефектах для программного средства и процессов
 жизненного цикла, в каких случаях они должны быть оформлены, процедуры 
закрытия сообщений о дефектах и взаимодействие отчетности о дефектах с 
контролем изменений.<br><br>- Контроль изменений: элементы конфигурации и
 базовая линия, которые следует контролировать, в каких случаях они 
должны быть проконтролированы, работы по контролю дефектов/изменений, 
предсертификационный и постсертификационный контроль, средства, 
обеспечивающие целостность элементов конфигурации и базовой линии.<br><br>-
 Просмотр изменений: метод установления обратной связи с процессами 
жизненного цикла ПО; методы оценки и определения приоритетности в 
устранении дефектов, утверждение изменений, реализация решений об 
изменениях и связь этих методов с отчетностью о дефектах и работами по 
контролю за изменениями.<br><br>- Отчет о состоянии конфигурации: 
информация, которая должна быть зарегистрирована, чтобы можно было 
осуществлять отчетность о состоянии управления конфигурацией, 
определение места хранения информации, как она будет воспроизведена для 
отчетности и когда она будет доступна.<br><br>- Архивирование, получение
 из архива и выпуск официальной версии: контроль целостности, способы 
внесения информации в архив и получения из архива, метод и полномочия 
для выпуска версии.<br><br>- Контроль загрузки ПО: описание защиты и регистрации контроля загрузки ПО.<br><br>-
 Контроль среды жизненного цикла ПО: контроль инструментальных средств, 
используемых для разработки, комплексирования, верификации и загрузки 
ПО. Кроме того, в раздел должен быть включен контроль аттестованных 
инструментальных средств.<br><br><span style="display:inline-block; width:30px"></span>- Контроль документов жизненного цикла ПО: средства контроля документов, требуемые для категорий контроля 1 и 2.<br><br>- Критерии перехода: критерии перехода для начала процесса управления конфигурацией.<br><br>-
 Документы управления конфигурацией: определение документов жизненного 
цикла ПО, генерируемых в процессе управления конфигурацией, включая 
отчеты управления конфигурацией, указатель конфигурации ПО и указатель 
среды жизненного цикла ПО.<br><br>- Контроль поставщика: использование требований процесса управления конфигурацией для контроля поставщика.<br><br></p><h3>12.6 План обеспечения качества ПО</h3><p style="text-align: justify;"><br>План
 обеспечения качества ПО устанавливает методы, которые должны быть 
использованы для того, чтобы достичь цели процесса обеспечения качества 
ПО. Содержание плана следующее:<br><br>- Среда: описание среды 
обеспечения качества, включая область действия, организационную 
ответственность и интерфейсы, стандарты, процедуры, инструментальные 
средства и методы.<br><br>- Полномочия: утверждение полномочий службы 
обеспечения качества, ответственности и независимости, включая 
полномочия на утверждение (одобрение) программных средств.<br><br>- 
Состав работ: работы обеспечения качества, которые должны быть выполнены
 для каждого процесса жизненного цикла ПО и на протяжении всего 
жизненного цикла ПО, включая:<br></p><p style="text-align: justify;">1) методы обеспечения качества, например просмотры, аудиты, отчетность, инспекции и мониторинг процессов жизненного цикла ПО;<br></p><p style="text-align: justify;">2) работы, связанные с отчетностью о дефектах, трассируемостью и системой корректирующих действий;<br></p><p style="text-align: justify;">3) описание работ во время просмотров согласованности ПО.<br><br>- Критерии перехода: критерии перехода для начала процесса обеспечения качества.<br><br>- Синхронизация: синхронизация работ процесса обеспечения качества относительно работ других процессов жизненного цикла ПО.<br><br>- Отчеты обеспечения качества: определение отчетов, которые будут произведены процессом обеспечения качества.<br><br>-
 Контроль поставщика: описание средств, гарантирующих, что действия 
поставщиков и результаты их работы соответствуют Плану обеспечения 
качества ПО.<br><br></p><h3>12.7 План установки ПО</h3><p style="text-align: justify;"><br>План
 установки ПО содержит описание работ для установки ПО на 
пользовательских местах, включая подготовку, обучение пользователей и 
адаптацию существующих систем.<br><br>Данный план необходим, когда 
разработчик должен выполнить установку ПО на пользовательских местах и 
когда процесс установки ПО настолько сложен, что без оформленного в виде
 документа плана обойтись невозможно.<br><br>План установки ПО включает в себя:<br><br>- перечень пользовательских мест, на которых должно быть установлено ПО;<br><br>- запланированные сроки установки ПО;<br><br>- методы установки ПО;<br><br>- организационные сведения: номер телефона, факс, официальное наименование организации, осуществляющей установку, и т.д.;<br><br>-
 технические средства поддержки: перечень всех типов, характеристик и 
источников средств, необходимых для установки ПО (магнитные ленты, 
диски, бумага для принтера и т.д.);<br><br>- организация процесса обучения персонала: классные комнаты, расписание теоретических и практических занятий и т.д.<br><br></p><h3>12.8 План передачи ПО</h3><p style="text-align: justify;"><br>План
 передачи ПО определяет аппаратное и программное обеспечение, а также 
другие ресурсы, необходимые для поддержки жизненного цикла передаваемого
 ПО, и описывает планы разработчиков для поставки передаваемых элементов
 через организации, осуществляющие поддержку.<br><br>Данный план разрабатывают в том случае, если используют концепцию передачи ПО отдельной организации, осуществляющей поддержку.<br><br>План
 должен содержать краткий обзор системы и документов, относящихся к 
передаваемому ПО, общий обзор разработки системы и сопровождения, 
идентифицировать спонсоров, заказчиков, пользователей, разработчиков и 
организаций, осуществляющих поддержку, запланированные рабочие места и 
перечень передаваемых документов.<br><br>План содержит детальное 
описание ресурсов, необходимых для поддержки передаваемого ПО, 
требования к квалификации и составу персонала. Такие ресурсы должны 
включать в себя элементы, необходимые для копирования, контроля и 
распространения ПО и соответствующей документации, а также чтобы 
специфицировать, разрабатывать, документировать, тестировать, оценивать,
 контролировать, копировать и распространять ПО.<br><br>План содержит 
перечень рекомендуемых мероприятий, в том числе консультации и лекции, 
которые должен проводить разработчик в целях поддержки передаваемого ПО и
 соответствующей среды поддержки.<br><br>План включает в себя описание 
процесса подготовки персонала, который будет осуществлять поддержку 
передаваемого ПО: тематика, дата, продолжительность и место проведения 
занятий по подготовке как теоретических, так и практических, в том числе
 знакомство с системным ПО, объектными компьютерами, программной 
поддержкой и базовой системой.<br><br>В плане должны быть указаны предполагаемые области изменений передаваемого ПО.<br><br>План
 содержит порядок передачи, включающий в себя все работы, необходимые 
при передаче ПО со стороны организаций, осуществляющих поддержку, с 
детальной проработкой координационных встреч.<br><br></p><h3>12.9 Стандарты на разработку требований к ПО</h3><p style="text-align: justify;"><br>Цель
 стандартов на разработку требований к ПО состоит в том, чтобы 
определить методы, правила и инструментальные средства, которые должны 
быть использованы при разработке требований верхнего уровня. Эти 
стандарты должны включать в себя:<br><br>- методы, которые должны быть применены для разработки требований к ПО;<br><br>-
 системы обозначений, которые применяют для описания требований, такие 
как диаграммы потока данных и формальные языки спецификаций;<br><br>- ограничения на использование инструментальных средств разработки требований;<br><br>- метод, который должен быть применен для получения производных требований.<br><br></p><h3>12.10 Стандарты на процесс проектирования ПО</h3><p style="text-align: justify;"><br>Цель
 стандартов на процесс проектирования ПО состоит в определении методов, 
правил и инструментальных средств, которые следует применять для 
разработки архитектуры ПО и требований нижнего уровня. Эти стандарты 
должны содержать:<br><br>- методы описания проекта, которые будут использованы;<br><br>- соглашения по наименованию;<br><br>-
 ограничения, налагаемые на применяемые методы проектирования, например 
распределение ресурсов, использование прерываний и структур, управляемых
 событиями, использование динамических задач, повторный вход, 
использование глобальных данных, механизм обработки исключительных 
ситуаций и обоснования для их использования;<br><br>- ограничения на использования инструментальных средств проектирования;<br><br>-
 ограничения на проектирование (например, запрещение использования 
рекурсий, динамических объектов, альтернативных имен, сокращенных 
выражений);<br><br>- ограничения по сложности (например, максимальный 
уровень вложенности вызовов и условных структур, использование 
безусловных переходов, число входных/выходных точек элементов кода 
программы).<br><br></p><h3>12.11 Стандарты кодирования ПО</h3><p style="text-align: justify;"><br>Целью
 стандартов кодирования ПО является определение языков программирования,
 методов, правил и инструментальных средств, которые будут использованы 
для кодирования ПО. Стандарты кодирования должны включать в себя:<br><br>-
 используемые языки программирования и/или какое-либо их заданное 
подмножество; должна быть указана ссылка на документы, которые 
однозначно определяют синтаксис, режим контроля, характер данных и 
побочные эффекты языка программирования; стандарты могут требовать 
ограничений на использование некоторых возможностей языка;<br><br>- 
стандарты представления исходного текста (например, ограничение на длину
 строки, структурное расположение текста, использование пустых строк) и 
стандарты документирования исходного кода (например, имя автора, история
 изменений, входные и выходные данные, а также наиболее значимые 
глобальные данные);<br><br>- соглашения по наименованию для компонентов, подпрограмм, переменных, констант;<br><br>-
 условия и ограничения, налагаемые на установленные соглашения 
кодирования, такие как информационная связность между компонентами ПО, 
сложность логических или числовых выражений, а также обоснования для их 
использования;<br><br>- ограничения на использование инструментальных средств кодирования.<br><br></p><h3>12.12 Спецификация системы/подсистемы</h3><p style="text-align: justify;"><br>Спецификация
 системы/подсистемы определяет требования для системы или подсистемы и 
методы, которые должны быть использованы для гарантии того, что каждое 
требование выполнено. Требования, относящиеся к внешним интерфейсам 
системы или подсистемам, должны быть представлены либо в данной 
спецификации, либо в спецификации требований к интерфейсу, на которую 
должны быть ссылки в спецификации системы/подсистемы.<br><br>Каждое 
требование соответствует конкретным обоснованным характеристикам 
системы, имеет уникальный для проекта идентификатор, чтобы можно было 
провести тестирование и проследить его выполнение с помощью объективного
 теста. Для каждого требования выбирают квалификационный(е) метод(ы), 
требования для подсистемы должны быть прослеживаемы к требованиям к 
системе. Степень детализации выбирают, исходя из следующих правил: 
указывают те характеристики системы, которые внесены в условия приемки 
системы; предпочтение отдают тем характеристикам, которые требует 
обеспечить заказчик.<br><br>Должны быть описаны требования:<br><br>- к режимам работы;<br><br>- к производительности системы;<br><br>- к внешнему интерфейсу системы;<br><br>- к внутреннему интерфейсу системы;<br><br>- к внутренним данным системы;<br><br>- по адаптации;<br><br>- по безопасности;<br><br>- по обеспечению защиты и секретности;<br><br>- к системному окружению (среде);<br><br>-
 к ресурсам вычислителя (к аппаратуре, коэффициенту использования 
ресурсов аппаратуры, ПО вычислителя, организации сети компьютеров, если 
она необходима);<br><br>- по ограничениям проекта;<br><br>- по обучению персонала.<br><br>Должны быть также определены:<br><br>- относительная важность и критичность требований;<br><br>-
 средства аттестации, включающие в себя демонстрацию, тестирование, 
анализ, инспекцию и требуемые специальные методы для конкретной системы.<br><br>Все указанные требования должны быть трассируемыми.<br><br></p><h3>12.13 Спецификация требований к ПО</h3><p style="text-align: justify;"><br>Спецификация
 требований к ПО - документ, который определяет требования верхнего 
уровня, включая производные требования. Этот документ должен содержать:<br><br>-
 описание распределения системных требований по компонентам ПО с учетом 
требований, которые обеспечивают безопасность, и потенциальным отказным 
ситуациям;<br><br>- функциональные и эксплуатационные требования для каждого режима работы;<br><br>- критерии производительности, например точность представления;<br><br>- временные требования и ограничения;<br><br>- ограничения объема памяти;<br><br>- интерфейсы аппаратуры и ПО, например протоколы, форматы, частоту ввода и вывода данных;<br><br>- требования к обнаружению отказов и мониторингу безопасности;<br><br>- требования по разбиению ПО, по взаимодействию выделенных компонентов ПО друг с другом и к уровням ПО для каждой части.<br><br></p><h3>12.14 Спецификация требований к интерфейсу</h3><p style="text-align: justify;"><br>Спецификация
 требований к интерфейсу определяет требования к интерфейсам между 
системными компонентами: системами, подсистемами, элементами 
конфигурации ПО и аппаратуры. Данный документ включает в себя:<br><br>- идентификацию и диаграммы функционирования интерфейсов;<br><br>- требования по типам интерфейсов;<br><br>-
 характеристики передаваемых элементов данных (идентификация, типы 
данных, размер и формат, единицы измерений, точность, источники и 
приемники);<br><br>- характеристики методов коммуникации;<br><br>- характеристики протоколов обмена;<br><br>- приоритеты и критичность требований;<br><br>- методы аттестации, которые должны быть использованы для демонстрации выполнения требований;<br><br>- доказательство трассируемости требований.<br><br></p><h3>12.15 Описание проекта системы/подсистемы</h3><p style="text-align: justify;"><br>Документ
 "Описание проекта системы/подсистемы" описывает проект 
системы/подсистемы как целого, а также проект архитектуры 
системы/подсистемы, может быть дополнен описанием проекта интерфейса и 
описанием проекта базы данных. Данный документ включает в себя:<br><br>-
 обоснование выбора проектных решений уровня системы, выбора компонентов
 системы, описание поведения системы с точки зрения пользователя;<br><br>-
 проект архитектуры системы, содержащий идентификацию компонентов 
системы, их назначение, статус/тип разработки, аппаратные ресурсы;<br><br>- концепцию совместного функционирования компонентов, описание их динамических связей;<br><br>- описание интерфейсов между компонентами;<br><br>- анализ трассируемости проекта системы к системным требованиям.<br><br>Данный
 документ содержит обоснование выбора конкретной системы/подсистемы с 
учетом требований интерфейса, заданных характеристик входов и выходов, 
физической модели системы, выбранных соотношений/алгоритмов/правил и 
обработки недопустимых входных данных или условий.<br><br></p><h3>12.16 Описание проекта ПО</h3><p style="text-align: justify;"><br>Документ
 "Описание проекта ПО" содержит описание архитектуры и требований 
нижнего уровня к ПО, которые должны удовлетворять требованиям верхнего 
уровня к ПО. Этот документ должен включать в себя:<br><br>- 
детализированное описание того, как ПО удовлетворяет специфицированным 
требованиям верхнего уровня к ПО, включая алгоритмы, структуры данных, и
 описание распределения по процессорам и задачам требований к ПО;<br><br>- описание архитектуры ПО, которая определяет структуру ПО, предназначенного для реализации заданных требований;<br><br>- описание входных/выходных данных (например, словарь данных) для внутренних и внешних интерфейсов архитектуры ПО;<br><br>- описание потока данных и потока управления;<br><br>-
 ограничения на использование ресурсов, стратегию для управления каждым 
ресурсом, границы рабочего диапазона и методы измерения этих границ, 
например, времени выполнения и памяти;<br><br>- процедуры планирования и
 механизмы межпроцессорной и межзадачной связей, включая жесткую 
временную последовательность, приоритетное планирование, механизмы 
рандеву в языке Ада и прерывания;<br><br>- методы, используемые в 
проекте, и детали их реализации, например загрузку данных ПО, 
модифицируемое пользователем ПО или многоверсионное неидентичное ПО;<br><br>- методы разбиения ПО и средства обеспечения целостности при разбиении;<br><br>-
 описания компонентов ПО с указаниями о том, являются ли они вновь 
создаваемыми или ранее разработанными и, если они ранее разработаны, 
делаются ли ссылки на базовую линию;<br><br>- производные требования, полученные в процессе проектирования ПО;<br><br>- для отключенного кода описание средств, гарантирующих невозможность его непреднамеренного выполнения;<br><br>- обоснование тех решений проекта, которые относятся к требованиям, связанным с безопасностью системы.<br><br></p><h3>12.17 Описание проекта интерфейса</h3><p style="text-align: justify;"><br>Описание
 проекта интерфейса содержит описание характеристик интерфейсов одной 
или более систем, подсистем, элементов конфигурации аппаратуры и ПО и 
других системных компонентов. Данный документ включает в себя:<br><br>- идентификацию и диаграммы всех интерфейсных связей;<br><br>- приоритеты и типы интерфейсов;<br><br>- характеристики передаваемых данных, методов коммуникации, протоколов.<br><br></p><h3>12.18 Описание проекта базы данных</h3><p style="text-align: justify;"><br>Описание
 проекта базы данных включает в себя описание базы данных, 
рассматриваемой как набор связанных данных, хранящихся в одном или более
 компьютерных файлах, доступ к которым пользователем осуществляется 
через систему управления базами данных.<br><br>В данном документе должны
 быть описаны проектные решения, связанные с базой данных, поведение 
базы данных с точки зрения пользователя, способы доступа к базе данных, 
интерфейсы базы данных с другими системами, элементами конфигурации ПО и
 аппаратуры. Определяется реакция базы данных на входные запросы, 
включая действия, время реакции и другие эксплуатационные 
характеристики, выбранные соотношения/алгоритмы/правила/обработка 
недопустимых входных данных.<br><br>Детальный проект базы данных 
содержит характеристики элементов данных, проект программных модулей, 
осуществляющих доступ к базе данных или работу с ней, алгоритмы работы с
 базой, возможные ограничения, язык программирования, интерфейсы между 
программными модулями, характеристики интерфейсов, характеристики 
методов коммуникации, характеристики протоколов.<br><br>В данном документе должна быть показана трассируемость проектных требований к системным требованиям и требованиям к ПО.<br><br></p><h3>12.19 Исходный код ПО</h3><p style="text-align: justify;"><br>Этот
 документ содержит код ПО, написанный на исходном(ых) языке(ах) 
программирования, и команды компилятора, генерирующие объектный код из 
исходного текста, а также информацию для редактирования связей и 
загрузки. Документ должен содержать идентификацию ПО, включая 
идентификатор и дату создания версии.<br><br></p><h3>12.20 Исполняемый объектный код ПО</h3><p style="text-align: justify;"><br>Исполняемый
 объектный код представляет собой код, который является непосредственно 
пригодным для использования центральным процессором объектного 
компьютера, и является, следовательно, загружаемым в аппаратные средства
 или систему ПО.<br><br></p><h3>12.21 Процедуры верификации ПО</h3><p style="text-align: justify;"><br>Процедуры
 верификации ПО детально описывают выполнение работ процесса верификации
 ПО. Данный документ должен включать в себя следующие описания:<br><br>-
 процедуры выполнения просмотра и анализа: детализация информации Плана 
верификации ПО в части области действия, глубины методов просмотров или 
анализа;<br><br>- тестовые варианты: назначение каждого тестового 
варианта, набор входных данных, условия, ожидаемые результаты, требуемые
 критерии покрытия и критерии прохода/невыполнения тестов;<br><br>- 
процедуры тестирования: пошаговые инструкции того, как каждый тестовый 
вариант должен быть инициирован и выполнен, как должны быть оценены 
результаты тестирования и какая среда тестирования должна быть 
использована.<br><br></p><h3>12.22 Описание квалификационного тестирования ПО</h3><p style="text-align: justify;"><br>Данный
 документ описывает организацию квалификационного тестирования 
(испытаний), тестовые варианты и процедуры тестирования, которые 
используют для выполнения квалификационного тестирования системы или 
подсистемы ПО.<br><br>Организация тестирования: каждый тест должен иметь
 уникальный для данного проекта идентификатор; должны быть представлены 
инструкции для проведения тестирования, описание аппаратуры и ПО 
тестирования, а также инструкции для выполнения повторного тестирования.<br><br>Описание
 тестов: каждый тест должен иметь уникальный для проекта идентификатор и
 ссылку на соответствующий пункт в разделе организации тестирования, 
последнее относится и к тестовым вариантам. Кроме того, должны быть 
приведены ссылки на проверяемые требования, указаны условия выполнения 
(конфигурация аппаратуры и ПО и др.), входные данные, ожидаемые 
результаты, критерии оценки результатов, процедура тестирования для 
каждого тестового варианта, допущения и ограничения.<br><br>Допускается 
включение перечисленной в данном подразделе информации в документ 
"Процедуры верификации ПО" (см. 12.21), если заказчик не требует 
разработки отдельного документа, описывающего квалификационное 
тестирование.<br><br></p><h3>12.23 Результаты верификации ПО</h3><p style="text-align: justify;"><br>Документ "Результаты верификации ПО" описывает выходные результаты процесса верификации ПО. Результаты верификации ПО должны:<br><br>-
 указать результат выполнения (прошел/не прошел) для каждого просмотра, 
анализа и выполненного теста и заключительный результат верификации;<br><br>- идентифицировать элемент конфигурации и/или версию ПО, которые прошли просмотр, анализ или тестирование;<br><br>-
 содержать результаты анализа покрытия и анализа трассируемости для 
тестов, просмотров и анализов, выполненных в процессе верификации.<br><br></p><h3>12.24 Отчет о квалификационном тестировании ПО</h3><p style="text-align: justify;"><br>Отчет
 о тестировании ПО - отчет о квалификационном тестировании (испытаниях),
 выполненном для системы или подсистемы ПО. Данный документ должен 
включать в себя:<br><br>- общую оценку результатов тестирования, идентификацию всех несоответствий и ограничений;<br><br>- описание возможных различий тестовой и эксплуатационной сред;<br><br>- описание рекомендуемых улучшений в тестируемом ПО;<br><br>- детальные результаты тестирования;<br><br>- описание обнаруженных дефектов.<br><br>Допускается
 включение перечисленной в данном разделе информации в документ 
"Результаты верификации ПО" (12.23), если заказчик не требует разработки
 отдельного документа, описывающего результаты квалификационного 
тестирования.<br><br></p><h3>12.25 Указатель конфигурации среды жизненного цикла ПО</h3><p style="text-align: justify;"><br>Документ
 "Указатель конфигурации среды жизненного цикла ПО" идентифицирует 
конфигурацию среды жизненного цикла ПО, определяет аппаратную и 
программную среду разработки для регенерации ПО, повторной верификации 
или модификации ПО. Этот указатель должен идентифицировать:<br><br>- аппаратную среду и системное ПО, используемые для разработки ПО на протяжении всего жизненного цикла;<br><br>-
 инструментальные средства разработки ПО, такие как компиляторы, 
редакторы связей и загрузчики, средства обеспечения целостности данных 
(такие, как средства вычисления контрольных сумм или циклического 
избыточного кода);<br><br>- среду тестирования, используемую для верификации программного средства, например инструментальные средства верификации ПО;<br><br>- аттестованные инструментальные средства и соответствующие документы об аттестации этих средств.<br><br>Примечание - Данный документ может быть включен в Указатель конфигурации ПО как его часть.<br><br></p><h3>12.26 Указатель конфигурации ПО</h3><p style="text-align: justify;"><br>Указатель конфигурации ПО определяет конфигурацию программного средства. Указатель конфигурации ПО должен идентифицировать:<br><br>- программное средство;<br><br>- исполняемый объектный код;<br><br>- каждый компонент исходного кода;<br><br>- ранее разработанное ПО, если оно используется в данном программном средстве;<br><br>- документы жизненного цикла ПО;<br><br>- носители данных для архива и выпуска версии;<br><br>-
 инструкции для компоновки исполняемого объектного кода, включая, 
например, инструкции и информацию для компилирования и редактирования 
связей; процедуры, используемые для восстановления ПО при регенерации, 
тестировании или модификации;<br><br>- ссылку на Указатель конфигурации среды жизненного цикла ПО (12.25), если он оформлен как отдельный документ;<br><br>- способ контроля целостности данных для исполняемого объектного кода, если он используется.<br><br>Примечание
 - Данный документ может быть создан для одной версии программного 
средства или может включать в себя информацию о последующих или 
альтернативных версиях программного средства.<br><br></p><h3>12.27 Спецификация программного средства</h3><p style="text-align: justify;"><br>Спецификация
 программного средства содержит описание или ссылки на описания 
исполняемого ПО, исходных файлов и информацию о программной реализации, 
включая информацию проекта построения, компиляции, построения и 
процедуры модификации для ЭКПО.<br><br>Спецификация программного средства должна содержать описание:<br><br>-
 требований, включающих в себя обеспечение передачи ПО и обоснование 
требований, которым должна соответствовать достоверная копия ЭКПО;<br><br>- методов, используемых для демонстрации того, что данное ПО является достоверной копией ЭКПО.<br><br></p><h3>12.28 Сообщения о дефектах</h3><p style="text-align: justify;"><br>Сообщения
 о дефектах являются средством для идентификации и регистрации 
аномального поведения программного средства, несогласованности процессов
 с планами ПО и стандартами разработки ПО и недостатков документации 
жизненного цикла ПО. Сообщения о дефектах должны включать в себя:<br><br>- идентификацию элемента конфигурации и/или этапа жизненного цикла ПО, где был обнаружен дефект;<br><br>- идентификацию элемента конфигурации, который необходимо модифицировать, или описание процесса, который должен быть изменен;<br><br>- описание дефекта, достаточное для его понимания и устранения;<br><br>- описание корректирующих действий, предназначенных для устранения зарегистрированного дефекта.<br><br></p><h3>12.29 Протоколы управления конфигурацией ПО</h3><p style="text-align: justify;"><br>Результаты
 работ процесса управления конфигурацией ПО должны быть зарегистрированы
 в протоколах управления конфигурацией ПО. Они включают в себя, 
например, все идентификации конфигурации, протоколы об установлении 
базовой линии и регистрации в библиотеке, отчеты об истории изменений, 
протоколы о передаче в архив и протоколы о выпуске версии. Приведенные 
выше примеры не содержат всех конкретных типов информации, которую 
необходимо представлять в указанных документах.<br><br>Примечание - 
Поскольку процесс управления конфигурацией ПО интегральный по своей 
природе, результаты его часто включают как составную часть в другие 
документы жизненного цикла ПО.<br><br></p><h3>12.30 Протоколы обеспечения качества ПО</h3><p style="text-align: justify;"><br>Результаты
 работ процесса обеспечения качества ПО должны быть зарегистрированы в 
протоколах обеспечения качества. Они могут включать в себя протоколы 
просмотров и аудитов, протоколы совещаний, регистрацию отклонений от 
санкционированных процессов или протоколы проверки соответствия ПО.<br><br></p><h3>12.31 Итоговый документ разработки ПО</h3><p style="text-align: justify;"><br>Итоговый
 документ разработки ПО - основной документ по демонстрации соответствия
 Плану сертификации в части ПО. Этот документ должен содержать следующие
 разделы:<br><br>- Краткий обзор системы. Данный раздел содержит краткий
 обзор системы, включая описание ее функций и их распределение на 
программную и аппаратную реализацию, архитектуру, используемые 
процессоры, интерфейсы аппаратных средств/ПО, требования по обеспечению 
безопасности. Этот раздел также описывает все отличия от краткого обзора
 системы в Плане сертификации в части ПО.<br><br>- Краткий обзор ПО. 
Этот раздел кратко описывает функции ПО с акцентированием на обеспечении
 безопасности и используемой концепции разбиения и объясняет отличия от 
краткого обзора ПО в Плане сертификации в части ПО.<br><br>- Вопросы 
сертификации. Этот раздел вновь рассматривает вопросы сертификации, 
определенные в Плане сертификации в части ПО, и объясняет все 
существующие от указанного плана отличия.<br><br>- Характеристики ПО. В 
этом разделе указаны размер исполняемого объектного кода, ограничения по
 времени и памяти, ограничения ресурсов и способы измерения каждой 
характеристики.<br><br>- Жизненный цикл ПО. Этот раздел описывает 
фактически используемую модель жизненного цикла ПО и объясняет ее 
отличия от предложенной в Плане сертификации в части ПО.<br><br>- 
Документы жизненного цикла ПО. В этом разделе даны ссылки на документы 
жизненного цикла ПО, являющиеся выходными результатами процессов 
разработки ПО и интегральных процессов. Здесь описаны связь между 
представляемыми документами и другими документами, определяющими 
систему, а также способы передачи документов жизненного цикла ПО 
сертифицирующей организации. В этом разделе также рассмотрены любые 
отклонения в описании документов от Плана сертификации в части ПО.<br><br>- Идентификация ПО. Этот раздел идентифицирует конфигурацию ПО посредством указания регистрационного номера и версии.<br><br>-
 Хронология изменения. В случае необходимости этот раздел включает в 
себя резюме изменений ПО с указанием изменений, вызванных отказами, 
влияющими на безопасность, и идентификацией изменений, выполненных после
 предыдущей сертификации.<br><br>- Текущее состояние ПО. Этот раздел 
содержит резюме сообщений о дефектах, не устраненных ко времени 
сертификации, включая заявления о функциональных ограничениях.<br></p><p style="text-align: justify;">-
 Утверждение о соответствии. Этот раздел включает в себя утверждение о 
соответствии требованиям настоящего стандарта и резюме методов, 
позволяющих показать выполнение критериев, определенных в планах ПО. 
Этот раздел также указывает дополнительные соглашения и отклонения от 
требований планов, стандартов разработки и настоящего стандарта.<br><br></p><h3>12.32 Описание эксплуатационной концепции</h3><p style="text-align: justify;"><br>Описание
 эксплуатационной концепции для системы управления содержит описание 
действий пользователя, необходимых для работы с предлагаемой системой, 
ее связи с существующими системами и процедурами. Данное описание 
используют для получения соглашения между поставщиком, разработчиком, 
организацией, осуществляющей поддержку, и пользователями.<br><br>Данный 
документ фиксирует текущее состояние системы, ее назначение, возможности
 и ограничения в зависимости от режима или конкретного состояния 
эксплуатации (например, стандартный режим, сопровождение, обучение, 
снижение функций, аварийные ситуации) и включает в себя описание:<br><br>- конкретной эксплуатационной среды и ее характеристики;<br><br>- основных компонентов системы и связей между ними;<br><br>- внешних интерфейсов системы;<br><br>- возможностей/функций системы;<br><br>-
 таблиц и дополнительных графических представлений входов, выходов, 
потоков данных, а также руководств, позволяющих разобраться в текущем 
состоянии системы с точки зрения пользователя;<br><br>- состава персонала, его организационной структуры, технической подготовки, обязанностей, взаимодействия;<br><br>- критериев ремонта/замены;<br><br>- уровней и циклов технического обслуживания;<br><br>- форм регистрации обнаруженных дефектов.<br><br>Данный документ также содержит:<br><br>-
 соглашения о внесении изменений, возникающих в процессе сопровождения 
(их классификация и порядок внесения, включая поставку необходимого 
оборудования и обучение персонала);<br><br>- концепцию поставки новой или модифицированной версии, эксплуатационный сценарий;<br><br>-
 информацию о взаимодействии пользователей, поставщика, разработчика и 
организации, осуществляющей поддержку, во время эксплуатационного 
периода.<br><br></p><h3>12.33 Руководство по эксплуатации компьютера</h3><p style="text-align: justify;"><br>Руководство
 по эксплуатации компьютера обеспечивает информацию, необходимую для 
эксплуатации компьютера, на котором будет выполняться разработанное ПО, и
 его периферийного оборудования. Данное руководство, главным образом, 
касается эксплуатации самого компьютера, а не конкретного ПО, которое на
 нем будет выполняться. Содержание этого руководства:<br><br>- 
эксплуатационные процедуры для компьютерной системы (включение и 
отключение, сбой питания, инициализация, ввод/вывод, мониторинг и др.);<br><br>- процедуры обработки ошибок;<br><br>-
 диагностические процедуры, включая идентификацию аппаратных, 
программных и программно-аппаратных средств, необходимых для выполнения 
этих процедур; пошаговые инструкции для выполнения процедур; 
диагностические сообщения и требуемые действия;<br><br>- диагностические инструментальные средства.<br><br></p><h3>12.34 Руководство по программированию для компьютера</h3><p style="text-align: justify;"><br>Руководство
 по программированию для компьютера содержит информацию, необходимую 
пользователю для создания программ для данного компьютера. Указанное 
руководство посвящено собственно описанию компьютера, а не 
функционального ПО, которое будет выполняться на компьютере. Руководство
 должно включать в себя:<br><br>- описание среды программирования - 
конфигурацию и перечень компонентов компьютерной системы, рабочие 
характеристики, возможности и ограничения, включая машинный цикл, длину 
слова, объем памяти и ее характеристики, перечень команд, прерываний, 
режимы работы (пакетный, интерактивный, привилегированный, 
непривилегированный), рабочие регистры, характеристики ввода/вывода, 
специальные возможности, описание носителей данных (ленты, диски и 
другие периферийные устройства);<br><br>- информацию о возможностях 
программирования - представление данных (байт, слово, целые, с плавающей
 точкой, двойная точность); формат команд и методы адресации; 
специальные регистры; команды передачи управления (условный и 
безусловный переходы и др.), процедуры и подпрограммы; обработка 
прерываний; синхронизация и таймеры, возможности защиты памяти; 
детальное описание каждой команды (их использование, синтаксис, время 
выполнения и др.); программирование управления вводом/выводом; примеры, 
демонстрирующие возможности программирования.<br><br></p><h3>12.35 Руководство поддержки программно-аппаратных средств</h3><p style="text-align: justify;"><br>Руководство
 поддержки программно-аппаратных средств содержит информацию, 
необходимую для программирования и перепрограммирования системных 
устройств программно-аппаратных средств. Это касается запоминающих и 
других устройств. Данное руководство содержит описание:<br><br>- самих устройств - аппаратуры и ПО;<br><br>- процедур для стирания устройств;<br><br>- процедур для загрузки ПО в устройства;<br><br>- процедур для контроля процесса загрузки;<br><br>- процедур маркировки загруженных устройств.<br><br></p><h3>12.36 Руководство оператора ПО</h3><p style="text-align: justify;"><br>Руководство
 оператора ПО содержит описание запуска системы управления либо 
непосредственно с центрального компьютера, либо другим централизованным 
способом, либо через сеть.<br><br>Данное руководство содержит описание аппаратных и программных средств, требуемых для работы системы:<br><br>- технические характеристики используемых устройств;<br><br>- структура ПО, обзор назначения/функционирования каждого компонента ПО;<br><br>- перечень входных команд, команд доступа к ПО и реакция на их выполнение;<br><br>- аварийные сообщения и другие выходные данные, формируемые ПО;<br><br>- типовые времена выполнения;<br><br>- последовательность действий для запуска;<br><br>- перечень требуемых библиотек поддержки, интерфейсов;<br><br>- форма и средства регистрации ошибок, возникающих в процессе эксплуатации ПО;<br><br>- перечень процедур, выполняемых оператором при установке ПО для конкретного выбранного окружения, конкретной конфигурации ПО.<br><br></p><h3>12.37 Руководство по входной/выходной информации ПО</h3><p style="text-align: justify;"><br>Руководство
 по входной/выходной информации ПО объясняет пользователю как 
представить, ввести входную информацию и как интерпретировать выходную 
информацию, в каком режиме (пакетном или интерактивном) работает система
 ПО, запускаемая непосредственно с центрального компьютера или другим 
централизованным способом, или через сеть.<br><br>Данное руководство 
содержит краткое описание прикладного ПО, перечень файлов, включая базу 
данных и файлы со справочной информацией для пользователя, описание 
аппаратуры, ПО и прочих ресурсов, необходимых для доступа к данному 
прикладному ПО и использования этого ПО в полном объеме, включая:<br><br>- режимы работы;<br><br>- описание процедур, позволяющих получить помощь при возникновении ошибочных ситуаций при работе с прикладным ПО;<br><br>- терминалы, принтеры и другие входные/выходные устройства;<br><br>- необходимые процедуры, утилиты, в том числе процедуры для установки ПО;<br><br>- форматы представления входной/выходной информации, их тип, объем;<br><br>- точность представления, скорость передачи, ожидаемое время реакции;<br><br>- способ задания конца информации и другие требуемые соглашения;<br><br>- ограничения и наиболее типичные ошибки задания информации;<br><br>- описание используемой системы управления базой данных.<br><br> </p><h3>12.38 Руководство пользователя ПО</h3><p style="text-align: justify;"><br>Руководство
 пользователя ПО описывает порядок действий пользователя ПО для 
установки и использования ЭКПО, группы ЭКПО или системы/подсистемы ПО.<br><br>Руководство
 разрабатывают для ПО, которое прогоняется самим пользователем, и для 
используемого им интерфейса, требуемого для введения входных данных и 
интерпретации получаемых выходных результатов. При наличии в системе 
встроенного ПО не требуется отдельного руководства для пользователя, 
перечень требуемых процедур для работы с таким ПО можно включить в 
данный документ. Содержание руководства:<br><br>- краткое описание характеристик ПО;<br><br>- перечень файлов, включая файлы базы данных, необходимых для работы ПО;<br><br>- порядок действий для продолжения или возобновления работы в случаях возникновения непредвиденных ситуаций;<br><br><span style="display:inline-block; width:30px"></span>- описание программной среды;<br><br>- организация ПО и функционирование ПО с точки зрения пользователя;<br><br>- описание процедур, позволяющих фиксировать ошибки;<br><br>- детальные, пошаговые действия пользователя при включении системы и дальнейшей работе с ней;<br><br>- ссылки на другие переданные руководства;<br><br>- перечень и пояснение выводимых системой сообщений.<br><br></p><h3>12.39 Описание версии ПО</h3><p style="text-align: justify;"><br>Документ
 "Описание версии ПО" является полным описанием версии ПО, которая 
предназначена для передачи пользователю. Данный документ должен 
содержать следующую информацию:<br><br>- полную идентификацию системы и 
ПО, к которым применяют данный документ, включая регистрационные номера 
управления конфигурацией и номера версий;<br><br>- краткий обзор 
назначения системы и ПО, историю разработки, эксплуатации и 
сопровождения системы, идентификацию заказчика, пользователя, 
разработчика, организации, осуществляющей поддержку, текущих и 
планируемых мест установки системы;<br><br>- полную идентификацию физических носителей, содержащих ПО и связанные с ними документы;<br><br>- полную идентификацию всех компьютерных файлов, содержащих ПО;<br><br>- перечень всех изменений, внесенных после выпуска предыдущей версии в ПО;<br><br>- перечень документов ПО, связанных с данной версией;<br><br>- инструкцию по установке ПО;<br><br>- перечень возможных проблем и известных ошибок.<br><br></p><h2>13 Дополнительные вопросы  </h2><p style="text-align: justify;">В
 этом разделе представлены дополнительные аспекты сертификации ПО в 
случаях использования ранее разработанного ПО и аттестации 
инструментальных средств ПО.<br><br></p><h3>13.1 Использование ранее разработанного ПО</h3><p style="text-align: justify;"><br>В
 последующих подразделах рассмотрены вопросы, связанные с использованием
 ранее разработанного ПО, включая оценку модификаций, изменение объекта 
среды приложения или среды разработки, обновление базовой линии 
разработки и вопросы управления конфигурацией и обеспечения качества. 
Намерение использовать ранее разработанное ПО должно быть отражено в 
Плане сертификации в части ПО.<br></p><p style="text-align: justify;">13.1.1 Модификация ранее разработанного ПО<br><br>Модификация
 ранее разработанного в соответствии с требованиями настоящего стандарта
 ПО может быть следствием изменения требований, обнаружения ошибок и/или
 расширения функциональных возможностей ПО. Анализ предполагаемой 
модификации заключается в следующем:<br><br>- пересмотр результатов оценки безопасности системы с учетом предполагаемой модификации;<br><br>- выполнение требования 13.1.4, если уровень ПО пересмотрен;<br><br>- анализ воздействия изменений требований к ПО и воздействия изменений архитектуры ПО;<br><br>- анализ последствий воздействия изменений требований к ПО на другие требования;<br><br>-
 учет связей между несколькими компонентами ПО, что может привести к 
повторной верификации дополнительного объема информации, включающей в 
себя также неизмененные участки кода;<br><br>- определение области, на 
которую воздействует изменение, что может быть выполнено с помощью 
анализа потока данных, анализа потока управления, временного анализа и 
анализа трассируемости;<br><br>- повторная верификация областей, на которые воздействует изменение, должна быть выполнена с учетом требований раздела 8.<br></p><p style="text-align: justify;">13.1.2 Изменение системы или объекта управления<br><br>Система
 или объект, содержащий ПО, которое было ранее сертифицировано в 
соответствии с определенными уровнем ПО и сертификационным базисом, 
могут быть использованы на другом объекте. При использовании ранее 
разработанного ПО на другом объекте необходимо:<br><br>- оценить 
безопасность системы или нового объекта и определить уровень ПО и 
сертификационный базис. Никаких дополнительных действий не будет 
требоваться, если они те же самые для новой установки, что и для 
предыдущей;<br><br>- если требуются функциональные модификации для новой установки, то необходимо учесть требования 13.1.1;<br><br><span style="display:inline-block; width:30px"></span>-
 если действия предыдущей разработки не обеспечивали выходных 
результатов, требуемых для подтверждения безопасности новой установки, 
то необходимо учесть требования 13.1.4.<br></p><p style="text-align: justify;">13.1.3 Изменения среды применения или среды разработки<br><br>Использование
 и модификация ранее разработанного ПО могут включать в себя новую среду
 разработки, новый объектный процессор или другие аппаратные средства, 
или интеграцию с ПО, которое отлично от используемого для 
первоначального применения.<br><br>Новая среда разработки может 
увеличивать или уменьшать объем некоторых работ в процессах жизненного 
цикла ПО. Новая среда применения может требовать проведения 
дополнительных работ процесса жизненного цикла ПО, которые предназначены
 для модификации. Требования для изменения среды применения или среды 
разработки следующие:<br><br>- если новая среда разработки использует 
инструментальные средства разработки ПО, то может быть необходимо 
применить требования 13.2;<br><br>- строгая оценка изменения среды 
применения должна включать в себя рассмотрение сложности и возможностей 
языка программирования. Например, строгость оценки для родовых функций 
Ада должна быть большей, если родовые параметры отличны в новом 
приложении. Для объектно-ориентированного языка строгость должна быть 
большей, если объекты отличны в новом приложении;<br><br>- когда 
используют другой компилятор или другой набор опций компилятора, что 
приводит к различиям в объектном коде, результаты предыдущих работ 
процесса верификации ПО, использующие объектный код, не могут быть 
рассмотрены как правильные и не должны быть использованы для нового 
применения. В этом случае предыдущие тестовые результаты больше не могут
 быть допустимы для критериев структурного покрытия в новом приложении. 
Точно так же соглашения относительно оптимизации компилятора не могут 
быть допустимы;<br><br>- когда применяют другой процессор, результаты 
предыдущих работ процесса верификации интерфейса аппаратных средств/ПО 
не могут быть использованы для нового применения; должны быть выполнены 
все ранее выполняемые тесты интеграции аппаратных средств/ПО; должна 
быть повторена проверка совместимости аппаратных средств/ПО; могут 
потребоваться дополнительные тесты интеграции аппаратных средств/ПО и 
просмотры;<br><br>- должна быть выполнена верификация интерфейсов ПО в 
тех случаях, когда ранее разработанное ПО использовали с другим 
программным интерфейсом.<br></p><p style="text-align: justify;">13.1.4 Обновление базовой линии разработки<br><br>В
 данном пункте рассмотрены требования для ПО, документы жизненного цикла
 которого из предыдущего применения признаны неадекватными или не 
удовлетворяющими требованиям настоящего стандарта из-за целей 
безопасности, связанных с новым применением. Эти требования 
предназначены для использования при сертификации:<br><br>- коммерчески доступного ПО;<br><br>- прикладного ПО, разработанного в соответствии со стандартами, отличными от настоящего стандарта;<br><br>- прикладного ПО, разработанного до принятия настоящего стандарта;<br><br>- ПО, ранее разработанного в соответствии с настоящим стандартом, но как ПО более низкого уровня.<br><br>При обновлении базовой линии разработки необходимо руководствоваться следующим:<br><br>-
 для удовлетворения требованиям настоящего стандарта могут быть 
использованы те документы жизненного цикла ПО предыдущей разработки, 
которые соответствуют требованиям нового применения;<br><br>- 
сертификация в части ПО должна регламентироваться отказными ситуациями и
 уровнями ПО, определенными процессом оценки безопасности системы. 
Сравнение с отказными ситуациями предыдущего применения позволит 
определить области, которые могут потребовать изменения;<br><br>- 
документы жизненного цикла ПО из предыдущей разработки должны быть 
оценены заново, чтобы гарантировать, что цели процесса верификации ПО 
требуемого уровня удовлетворены для нового применения;<br><br>- для 
восстановления документации жизненного цикла ПО, которая отсутствует или
 является неадекватной при удовлетворении целям данного документа, может
 быть применен метод обратной разработки. Кроме непосредственных работ 
по созданию программного средства, могут потребоваться дополнительные 
работы для удовлетворения целям процесса верификации ПО;<br><br>- необходимо определить стратегию, обеспечивающую соответствие Плана сертификации в части ПО с настоящим стандартом.<br></p><p style="text-align: justify;">13.1.5 Управление конфигурацией ПО<br><br>Если
 используют ранее разработанное ПО, то процесс управления конфигурацией 
ПО для нового применения должен включать в себя дополнительно к 
рекомендациям раздела 9 следующее:<br><br>- трассируемость от 
программного средства и его документов для предыдущего применения к 
программному средству и документам для нового применения;<br><br>- 
контроль изменений, который позволяет регистрировать дефекты, выяснять 
причины их появления и прослеживать изменения к программным компонентам,
 используемым в более чем одном приложении.<br></p><p style="text-align: justify;">13.1.6 Обеспечения качества ПО<br><br>Если
 используют ранее разработанное ПО, то процесс обеспечения качества для 
нового применения, в дополнение к рекомендациям раздела 10, должен 
включать в себя обеспечение того, что:<br><br>- компоненты ПО удовлетворяют или превышают критерии соответствующего уровня ПО для нового применения;<br><br>- изменения в процессах жизненного цикла ПО отражены в планах ПО.<br><br></p><h3>13.2 Аттестация инструментальных средств</h3><p style="text-align: justify;"><br>Аттестация
 инструментальных средств необходима, когда процессы, представленные в 
настоящем стандарте, могут быть исключены, сокращены или 
автоматизированы посредством использования инструментальных средств, без
 верификации их выходных данных, как это установлено в разделе 8. 
Использование инструментальных средств для автоматизации работ в 
процессах жизненного цикла ПО помогает обеспечить надежность системы, 
поскольку эти средства способствуют удовлетворению требованиям 
стандартов разработки ПО и осуществляют автоматический контроль.<br><br>Цель
 процесса аттестации - гарантировать, что инструментальное средство 
обеспечивает доверие, по крайней мере, эквивалентное доверию к тем 
процессам, которые будут исключены, сокращены или автоматизированы. Если
 возможна демонстрация разбиения инструментальных средств по функциям, 
то должны быть аттестованы только те средства, которые будут 
использованы в целях устранения, сокращения или автоматизации работ в 
процессах жизненного цикла, или те средства, выходные результаты которых
 не были аттестованы.<br><br>Могут быть аттестованы только 
детерминированные инструментальные средства. Это такие средства, которые
 выдают те же самые результаты для тех же самых входных данных при 
работе в той же самой среде. Процесс аттестации инструментальных средств
 может быть применен либо к одному средству, либо к группе средств.<br><br>Инструментальные средства могут быть классифицированы одним из двух типов:<br><br>-
 Инструментальные средства разработки ПО: инструментальные средства, 
выходные данные которых являются частью прикладного ПО и которые, таким 
образом, могут внести ошибки в разрабатываемое программное средство. 
Например, инструментальное средство, генерирующее исходный текст 
непосредственно из требований нижнего уровня, должно быть аттестовано, 
если генерируемый исходный текст не верифицируется, как установлено в 
разделе 8.<br><br>- Инструментальные средства верификации ПО: 
инструментальные средства, которые не могут внести ошибки, но могут 
пропустить последние при их выявлении. Например, статический анализатор,
 который автоматизирует работы процесса верификации ПО, должен быть 
аттестован, если функции, которые он выполняет, не верифицируются другим
 способом; средства контроля типов данных, средства анализа и средства 
тестирования являются другими примерами подобных инструментальных 
средств.<br><br>Требования к аттестации инструментальных средств:<br><br>- инструментальные средства должны быть аттестованы в соответствии с их типом, определенным выше;<br><br>-
 комбинированные инструментальные средства разработки и верификации 
должны быть аттестованы в соответствии с требованиями 13.2.1, даже если 
может быть продемонстрировано разделение этих двух функций;<br><br>- все
 виды работ процессов управления конфигурацией и обеспечения качества 
обязательно выполняются для прикладного ПО, а также и для аттестуемых 
инструментальных средств.<br><br>Цели процесса верификации для инструментальных средств разработки ПО представлены в 13.2.1, перечисление г).<br><br>Инструментальные
 средства могут быть аттестованы только для использования конкретными 
системами, для которых использование данных средств включено в План 
сертификации в части ПО. Использование этих средств другими системами 
может потребовать дополнительной аттестации.<br></p><p style="text-align: justify;">13.2.1 Критерии аттестации для инструментальных средств разработки ПО<br><br>Критерии аттестации для инструментальных средств разработки ПО следующие:<br></p><p style="text-align: justify;">а)
 если инструментальное средство разработки ПО должно быть аттестовано, 
то процессы разработки ПО для этого средства должны удовлетворять тем же
 самым целям, что и процессы разработки прикладного ПО, при разработке 
которого предполагается использовать это инструментальное средство;<br></p><p style="text-align: justify;">б)
 уровень ПО, назначенный инструментальным средствам, должен быть таким 
же, как и для прикладного ПО, которое с их помощью разрабатывают, за 
исключением тех случаев, когда соискатель может обосновать для 
сертифицирующей организации возможность снижения уровня ПО для этих 
средств.<br><br>Примечание - Возможность снижения уровня ПО для 
инструментальных средств разработки зависит от значимости работ 
процессов верификации ПО, которые будут исключены, сокращены или 
автоматизированы в результате применения данного средства, в сравнении с
 полным набором всех работ по верификации. Значимость является функцией:<br><br>-
 вида работ процесса верификации ПО, которые могут быть устранены, 
сокращены или автоматизированы. Например, работы верификации по проверке
 согласования исходного текста со стандартами по структурированному 
представлению текста являются менее важными, чем работы верификации, 
направленные на определение соответствия исполняемого объектного кода 
требованиям верхнего уровня;<br><br>- вероятности того, что другие верификационные работы выявят те же самые ошибки;<br><br></p><p style="text-align: justify;">в)
 соискатель должен продемонстрировать, что средства соответствуют 
эксплуатационным требованиям к инструментальным средствам (13.2.3); эта 
демонстрация может включать в себя период испытаний, во время которого 
выполняют верификацию выходных результатов инструментального средства и 
анализируют, регистрируют и корректируют ошибки, связанные с работой 
средства;<br></p><p style="text-align: justify;">г) инструментальные 
средства разработки ПО должны быть верифицированы, чтобы 
проконтролировать корректность, согласованность и полноту 
эксплуатационных требований к этим средствам и продемонстрировать 
соответствие этим требованиям. Цели процесса верификации 
инструментальных средств отличаются от аналогичных целей для прикладного
 ПО, так как требованиями верхнего уровня для инструментальных средств 
являются их эксплуатационные требования вместо системных требований, как
 в случае прикладного ПО. Цели верификации инструментальных средств 
разработки ПО могут быть достигнуты с помощью:<br></p><p style="text-align: justify;">1) просмотра документа "Эксплуатационные требования к инструментальному средству", как описано в 8.3.1, перечисления а), б);<br></p><p style="text-align: justify;">2)
 демонстрации того, что инструментальное средство удовлетворяет 
Эксплуатационным требованиям к инструментальному средству для 
нормального рабочего режима;<br></p><p style="text-align: justify;">3) 
демонстрации того, что средство соответствует Эксплуатационным 
требованиям к инструментальному средству для внештатных рабочих условий,
 включая внешние помехи и выборочные отказы, возникающие в 
инструментальном средстве и среде его функционирования;<br></p><p style="text-align: justify;">4) анализа покрытия, основанного на требованиях, и дополнительного тестирования для завершения покрытия требований;<br></p><p style="text-align: justify;">5) анализа структурного покрытия, соответствующего уровню ПО для инструментального средства;<br></p><p style="text-align: justify;">6) тестирования на устойчивость к ошибкам в соответствии с уровнем ПО инструментального средства, как описано в 8.4.2;<br></p><p style="text-align: justify;">7)
 анализа потенциальных ошибок, возникающих из-за использования средства,
 чтобы подтвердить достоверность Плана аттестации инструментального 
средства.<br></p><p style="text-align: justify;">13.2.2 Критерии аттестации для инструментальных средств верификации ПО<br><br>Критерии
 аттестации для инструментальных средств верификации ПО удовлетворяются 
демонстрацией того, что указанные средства соответствуют 
Эксплуатационным требованиям к инструментальному средству для нормальных
 условий эксплуатации.<br></p><p style="text-align: justify;">13.2.3 Документы по аттестации инструментальных средств<br><br>Требования к документам по аттестации инструментальных средств:<br></p><p style="text-align: justify;">а)
 в случае аттестации инструментальных средств План сертификации в части 
ПО для прикладного ПО должен определить те инструментальные средства, 
которые должны быть аттестованы, и иметь ссылки на документы по 
аттестации этих средств;<br></p><p style="text-align: justify;">б) 
документы по аттестации инструментальных средств должны иметь 1-ю 
категорию контроля для средств разработки ПО и 2-ю категорию контроля 
для средств верификации ПО;<br></p><p style="text-align: justify;">в) 
документы по аттестации инструментальных средств разработки ПО должны 
соответствовать документам раздела 11, иметь те же характеристики и 
содержать ту же информацию, что и для прикладного ПО, с учетом того, 
что:<br></p><p style="text-align: justify;">1) План аттестации инструментального средства решает те же задачи, что и План сертификации в части ПО для прикладного ПО;<br></p><p style="text-align: justify;">2) Эксплуатационные требования к инструментальному средству соответствуют Спецификации требований к ПО для прикладного ПО;<br></p><p style="text-align: justify;">3)
 Итоговый документ разработки инструментального средства для 
инструментальных средств содержит ту же информацию, что и Итоговый 
документ разработки ПО для прикладного ПО.<br><br>Для инструментальных 
средств разработки ПО, которые должны быть аттестованы, План аттестации 
инструментального средства описывает процесс аттестации средства. 
Указанный план должен включать в себя:<br><br>- идентификацию конфигурации для инструментального средства;<br><br>-
 описание полученного в результате применения инструментального средства
 сертификационного доверия, т.е. тех работ процесса верификации, которые
 будут исключены, сокращены или автоматизированы;<br><br>- указание уровня ПО, присваиваемого для инструментального средства;<br><br>- описание архитектуры инструментального средства;<br><br>- работы, которые должны быть выполнены для аттестации инструментального средства;<br><br>- документы по аттестации инструментального средства.<br><br>Документ
 "Эксплуатационные требования к инструментальному средству" описывает 
инструментальное средство на функциональном уровне. Этот документ должен
 включать в себя:<br><br>- описание функций инструментального средства и
 его технических возможностей. Для средств разработки ПО документ должен
 включать в себя описание работ процессов разработки, выполняемых с 
помощью данного средства;<br><br>- информацию для пользователя, такую как руководство для установки и руководство пользователя;<br><br>- описание операционной среды, необходимой для работы инструментального средства;<br><br>- ожидаемую ответную реакцию средств разработки ПО в случаях внештатных условий работы.<br></p><p style="text-align: justify;">13.2.4 Согласие сертифицирующей организации на использование инструментального средства<br><br>Выдача согласия сертифицирующей организации на использование инструментального средства включает в себя два этапа:<br><br>-
 для средств разработки ПО - согласие с Планом аттестации 
инструментального средства; для средств верификации ПО - согласие с 
Планом сертификации в части ПО для прикладного ПО;<br><br>- для средств 
разработки ПО - согласие с Итоговым документом разработки 
инструментального средства; для средств верификации ПО - согласие с 
Итоговым документом разработки ПО для прикладного ПО.<br><br></p><h2>ПРИЛОЖЕНИЕ А (рекомендуемое). Цели и результаты процессов в зависимости от уровня ПО  </h2><p style="text-align: center;">ПРИЛОЖЕНИЕ А<br>(рекомендуемое)<br></p><p style="text-align: justify;">В
 настоящем приложении приведено описание требований сертификации для 
целей и результатов процессов жизненного цикла ПО в зависимости от 
уровня ПО. В таблицах А.1-А.10 даны ссылки на ранее описанные в 
настоящем стандарте цели и результаты.<br><br><br>Таблица А.1 - Процесс планирования ПО<br></p><p></p><table class="table table-condensed"><tbody><tr><td colspan="2" style="" valign="top"><p style="text-align: center;">Цель<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Применимость к уровням ПО<br></p></td><td colspan="2" style="" valign="top"><p style="text-align: center;">Результат<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Категория контроля по уровням ПО<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">C<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">С<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Определить виды работ процессов разработки ПО и интегральных процессов </p></td><td style="" valign="top"><p style="text-align: justify;">6.1а), 6.3<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">План сертификации в части ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">План разработки ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.2<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">План верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.3<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Определить критерии перехода, взаимосвязи и последовательность выполнения процессов </p></td><td style="" valign="top"><p style="text-align: justify;">6.1б), 6.3<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">План квалификационного тестирования ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.4<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">План управления конфигурацией ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.5<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Определить среду жизненного цикла ПО </p></td><td style="" valign="top"><p style="text-align: justify;">6.1 в)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">План обеспечения качества ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.6<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">План установки ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.7<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Рассмотреть дополнительные вопросы<br></p></td><td style="" valign="top"><p style="text-align: justify;">6.1 г)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">План передачи ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.8<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Определить стандарты на разработку ПО </p></td><td style="" valign="top"><p style="text-align: justify;">6.1 д)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Стандарты на разработку требований к ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.9<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br> </p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Стандарты на процесс проектирования ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.10<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Стандарты кодирования ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.11<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Согласование планов ПО с настоящим стандартом </p></td><td style="" valign="top"><p style="text-align: justify;">6.1 е), 6.7<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Протоколы обеспечения качества ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.30<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Координация планов создания ПО </p></td><td style="" valign="top"><p style="text-align: justify;">6.1 ж), 6.7<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Протоколы обеспечения качества ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.30<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td colspan="12" style="" valign="top"><p>Обозначения:<br><br>0 - цель должна быть удовлетворена;<br><br>пробел - удовлетворение цели на усмотрение заказчика;<br><br>1 - документ должен удовлетворять целям категории контроля 1 (КК1);<br><br>2 - документ должен удовлетворять целям категории контроля 2 (КК2).<br></p></td></tr></tbody></table><p></p><p style="text-align: justify;"><br><br>Таблица А.2 - Процессы разработки ПО<br></p><p></p><table class="table table-condensed"><tbody><tr><td colspan="2" style="" valign="top"><p style="text-align: center;">Цель<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Применимость к уровням ПО<br></p></td><td colspan="2" style="" valign="top"><p style="text-align: center;">Результат<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Категория контроля по уровням ПО<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">C<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">С<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Разработать требования верхнего уровня </p></td><td style="" valign="top"><p style="text-align: justify;">7.1.1 а)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Спецификация системы/подсистемы<br></p></td><td style="" valign="top"><p style="text-align: center;">12.12<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Спецификация требований к ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.13<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Спецификация требований к интерфейсу<br></p></td><td style="" valign="top"><p style="text-align: center;">12.14<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Определить производные требования верхнего уровня </p></td><td style="" valign="top"><p style="text-align: justify;">7.1.1 б)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Спецификация требований к ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.13<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Спецификация требований к интерфейсу<br></p></td><td style="" valign="top"><p style="text-align: center;">12.14<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Разработать архитектуру ПО </p></td><td style="" valign="top"><p style="text-align: justify;">7.2.1 а)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Описание проекта системы/ подсистемы<br></p></td><td style="" valign="top"><p style="text-align: center;">12.15<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Описание проекта ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.16<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Описание проекта интерфейса<br></p></td><td style="" valign="top"><p style="text-align: center;">12.17<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Описание проекта базы данных<br></p></td><td style="" valign="top"><p style="text-align: center;">12.18<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Разработать требования нижнего уровня<br></p></td><td style="" valign="top"><p style="text-align: justify;">7.2.1 а)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Описание проекта ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.16<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Определить производные требования нижнего уровня<br></p></td><td style="" valign="top"><p style="text-align: justify;">7.2.1 б)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Описание проекта ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.16<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Разработать исходный код<br></p></td><td style="" valign="top"><p style="text-align: justify;">7.3.1<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Исходный код ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.19<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Получить исполняемый объектный код и выполнить интеграцию ПО/аппаратуры<br></p></td><td style="" valign="top"><p style="text-align: justify;">7.4.1<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Исполняемый объектный код ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.20<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Подготовить руководства пользователя и руководства<br>поддержки </p></td><td style="" valign="top"><p style="text-align: justify;">5.9.3, 5.10.6<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Спецификация программного средства<br></p></td><td style="" valign="top"><p style="text-align: center;">12.27<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Описание эксплуатационной концепции<br></p></td><td style="" valign="top"><p style="text-align: center;">12.32<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Руководство по эксплуатации компьютера<br></p></td><td style="" valign="top"><p style="text-align: center;">12.33<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Руководство по программированию для компьютера<br></p></td><td style="" valign="top"><p style="text-align: center;">12.34<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Руководство поддержки программно-аппаратных средств<br></p></td><td style="" valign="top"><p style="text-align: center;">12.35<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Руководство оператора ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.36<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br> <!-- SAPE RTB JS -->
<script async="async" src="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/113398_002.js" type="text/javascript">
</script>
<!-- SAPE RTB END --></p></td><td style="" valign="top"><p style="text-align: justify;">Руководство по входной/выходной информации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.37<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Руководство пользователя ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.38<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Описание версии ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.39<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td colspan="12" style="" valign="top"><p style="text-align: justify;">Обозначения:<br><br>0 - цель должна быть удовлетворена;<br><br>пробел - удовлетворение цели на усмотрение заказчика;<br><br>1 - документ должен удовлетворять целям категории контроля 1 (КК1);<br><br>2 - документ должен удовлетворять целям категории контроля 2 (КК2).<br></p></td></tr></tbody></table><p></p><p style="text-align: justify;"><br><br>Таблица А.3 - Верификация результатов процесса разработки требований к ПО<br></p><p></p><table class="table table-condensed"><tbody><tr><td colspan="2" style="" valign="top"><p style="text-align: center;">Цель<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Применимость к уровням ПО<br></p></td><td colspan="2" style="" valign="top"><p style="text-align: center;">Результат<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Категория контроля по уровням ПО<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">B<br></p></td><td style="" valign="top"><p style="text-align: center;">C<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">С<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Требования верхнего уровня к ПО согласуются с требованиями к системе<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.1 а)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p>0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Требования верхнего уровня точны и непротиворечивы<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.1 б)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p>0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Требования верхнего уровня совместимы с объектным компьютером<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.1 в)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Требования верхнего уровня верифицируемы<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.1 г)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Требования верхнего уровня соответствуют стандартам на разработку требований к ПО<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.1 д)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p>0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Требования верхнего уровня трассируемы к системным требованиям<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.1 е)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p>0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Алгоритмы точны и корректны<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.1 ж)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td colspan="12" style="" valign="top"><p>Обозначения:<br><br>* - цель должна быть удовлетворена с обеспечением независимости;<br><br>0 - цель должна быть удовлетворена;<br><br>пробел - удовлетворение цели на усмотрение заказчика;<br><br>2 - документ должен удовлетворять целям категории контроля 2 (КК2).<br></p></td></tr></tbody></table><p></p><p style="text-align: justify;"><br><br>Таблица А.4 - Верификация результатов процесса проектирования ПО<br></p><p></p><table class="table table-condensed"><tbody><tr><td colspan="2" style="" valign="top"><p style="text-align: center;">Цель<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Применимость к уровням ПО<br></p></td><td colspan="2" style="" valign="top"><p style="text-align: center;">Результат<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Категория контроля по уровням ПО<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">B<br></p></td><td style="" valign="top"><p style="text-align: center;">C<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">С<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Требования нижнего уровня к ПО согласуются с требованиями верхнего уровня<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.3 а)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Требования нижнего уровня точны и непротиворечивы<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.3 б)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Требования нижнего уровня совместимы с объектным компьютером<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.3 в)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Требования нижнего уровня верифицируемы<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.3 г)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Требования нижнего уровня соответствуют стандартам<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.3 д)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Требования нижнего уровня трассируемы к требованиям верхнего уровня<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.3 е)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Алгоритмы точны и корректны<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.3 ж)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Архитектура ПО согласуется с требованиями верхнего уровня<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.2 а)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Архитектура ПО непротиворечива<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.2 б)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Архитектура ПО совместима с объектным компьютером<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.2 в)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Архитектура ПО верифицируема<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.2 г)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Архитектура ПО соответствует стандартам на процесс проектирования ПО<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.2 д)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Подтверждается целостность разбиения ПО<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.2 е)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td colspan="12" style="" valign="top"><p style="text-align: justify;">Обозначения:<br><br>* - цель должна быть удовлетворена с обеспечением независимости;<br><br>0 - цель должна быть удовлетворена;<br><br>пробел - удовлетворение цели на усмотрение заказчика;<br><br>2 - документ должен удовлетворять целям категории контроля 2 (КК2).<br></p></td></tr></tbody></table><p></p><p style="text-align: justify;"><br><br>Таблица А.5 - Верификация результатов процесса кодирования и интеграции ПО<br></p><p></p><table class="table table-condensed"><tbody><tr><td colspan="2" style="" valign="top"><p style="text-align: center;">Цель<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Применимость к уровням ПО<br></p></td><td colspan="2" style="" valign="top"><p style="text-align: center;">Результат<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Категория контроля по уровням ПО<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">B<br></p></td><td style="" valign="top"><p style="text-align: center;">C<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">С<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Исходный код согласуется с требованиями нижнего уровня<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.4 а)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Исходный код согласуется с архитектурой ПО<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.4 б)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Исходный код верифицируем<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.4 в)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Исходный код соответствует стандартам<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.4 г)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Исходный код трассируем к требованиям нижнего уровня<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.3.4 д)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p>Исходный код точен и непротиворечив<br></p></td><td style="" valign="top"><p>8.3.4 е)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p>Результаты процесса интеграции ПО полны и корректны<br></p></td><td style="" valign="top"><p>8.3.5<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td colspan="12" style="" valign="top"><p style="text-align: justify;">Обозначения:<br><br>* - цель должна быть удовлетворена с обеспечением независимости;<br><br>0 - цель должна быть удовлетворена;<br><br>пробел - удовлетворение цели на усмотрение заказчика;<br><br>2 - документ должен удовлетворять целям категории контроля 2 (КК2).<br></p></td></tr></tbody></table><p></p><p style="text-align: justify;"><br><span style="display:inline-block; width:50px"></span><br>Таблица А.6 - Тестирование результатов процесса интеграции ПО<br></p><p></p><table class="table table-condensed"><tbody><tr><td colspan="2" style="" valign="top"><p style="text-align: center;">Цель<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Применимость к уровням ПО<br></p></td><td colspan="2" style="" valign="top"><p style="text-align: center;">Результат<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Категория контроля по уровням ПО<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">B<br></p></td><td style="" valign="top"><p style="text-align: center;">C<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">С<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Исполняемый объектный код согласуется с требованиями верхнего уровня </p></td><td style="" valign="top"><p style="text-align: justify;">8.4.2, 8.4.3 а), б), 8.5.4 </p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Процедуры верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.21<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p style="text-align: justify;">Описание квалификационного тестирования ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.22 </p></td><td style="" valign="top"><p style="text-align: center;">1 </p></td><td style="" valign="top"><p style="text-align: center;">1 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Отчет о квалификационном тестировании ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.24<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Исполняемый объектный код устойчив относительно входов, определенных требованиями верхнего уровня </p></td><td style="" valign="top"><p style="text-align: justify;">8.4.2, 8.4.3 а), б), 8.5.4 </p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Процедуры верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.21<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Описание квалификационного тестирования ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.22<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td></tr><tr><td style="" valign="top"><p></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Отчет о квалификационном тестировании ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.24<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Исполняемый объектный код согласуется с требованиями нижнего уровня </p></td><td style="" valign="top"><p style="text-align: justify;">8.4.2, 8.4.3 в)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Процедуры верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.21<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p>Результаты верификации ПО<br></p></td><td style="" valign="top"><p>12.23 </p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Исполняемый объектный код устойчив относительно входов, определенных требованиями нижнего уровня </p></td><td style="" valign="top"><p style="text-align: justify;">8.4.2, 8.4.3 в)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Процедуры верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.21<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Исполняемый код совместим с объектным компьютером </p></td><td style="" valign="top"><p style="text-align: justify;">8.4.3 а)<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Процедуры верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.21<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p style="text-align: justify;">Описание квалификационного тестирования ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.22<br></p></td><td style="" valign="top"><p style="text-align: center;">1 </p></td><td style="" valign="top"><p style="text-align: center;">1 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Отчет о квалификационном тестировании ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.24<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td colspan="12" style="" valign="top"><p style="text-align: justify;">Обозначения:<br><br>* - цель должна быть удовлетворена с обеспечением независимости;<br><br>0 - цель должна быть удовлетворена;<br><br>пробел - удовлетворение цели на усмотрение заказчика;<br><br>1 - документ должен удовлетворять целям категории контроля 1 (КК1);<br><br>2 - документ должен удовлетворять целям категории контроля 2 (КК2).<br></p></td></tr></tbody></table><p></p><p style="text-align: justify;"><br><br>Таблица А.7 - Верификация результатов процесса верификации ПО<br></p><p></p><table class="table table-condensed"><tbody><tr><td colspan="2" style="" valign="top"><p style="text-align: center;">Цель<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Применимость к уровням ПО<br></p></td><td colspan="2" style="" valign="top"><p style="text-align: center;">Результат<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Категория контроля по уровням ПО<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">C<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">С<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Тестовые процедуры корректны </p></td><td style="" valign="top"><p style="text-align: justify;">8.3.6 б), 8.5.4 </p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Процедуры верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.21<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p style="text-align: justify;">Описание квалификационного тестирования ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.22 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Результаты тестов корректны и все расхождения объяснены </p></td><td style="" valign="top"><p style="text-align: justify;">8.3.6 в), 8.5.4 </p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br><br></p></td><td style="" valign="top"><p style="text-align: center;">2<br><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p style="text-align: justify;">Отчет о квалификационном тестировании ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.24 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Тестовое покрытие требований верхнего уровня достигнуто </p></td><td style="" valign="top"><p style="text-align: justify;">8.4.4.1, 8.5.4<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p style="text-align: justify;">Отчет о квалификационном тестировании ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.24 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Тестовое покрытие требований нижнего уровня достигнуто<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.4.4.1<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Тестовое покрытие структуры ПО (модифицированное покрытие условий/решений) достигнуто<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.4.4.2<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Тестовое покрытие структуры ПО (покрытие решений) достигнуто<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.4.4.2 а), 8.4.4.2 б)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Тестовое покрытие структуры ПО (покрытие операторов) достигнуто<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.4.4.2 а), 8.4.4.2 б)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Тестовое покрытие структуры ПО (связи по управлению и связи по данным) достигнуто<br></p></td><td style="" valign="top"><p style="text-align: justify;">8.4.4.2 в)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Результаты верификации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.23<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td colspan="12" style="" valign="top"><p style="text-align: justify;">Обозначения:<br><br>* - цель должна быть удовлетворена с обеспечением независимости;<br><br>0 - цель должна быть удовлетворена;<br><br>пробел - удовлетворение цели на усмотрение заказчика;<br><br>2 - документ должен удовлетворять целям категории контроля 2 (КК2).<br></p></td></tr></tbody></table><p></p><p style="text-align: justify;"><br><br>Таблица А.8 - Процесс управления конфигурацией ПО<br></p><p></p><table class="table table-condensed"><tbody><tr><td colspan="2" style="" valign="top"><p style="text-align: center;">Цель </p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Применимость к уровням ПО<br></p></td><td colspan="2" style="" valign="top"><p style="text-align: center;">Результат<br><br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Категория контроля по уровням ПО<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">C<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">С<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Элементы конфигурации идентифицированы<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.1<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Протоколы управления конфигурацией ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.29<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Установлены базовая линия и трассируемость </p></td><td style="" valign="top"><p style="text-align: justify;">9.2.3<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Указатель конфигурации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.26<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td></tr><tr><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p style="text-align: justify;">Протоколы управления конфигурацией ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.29 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td><td style="" valign="top"><p style="text-align: center;">2 </p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Установлены отчетность о дефектах, просмотры изменений, регистрация состояния конфигурацией </p></td><td style="" valign="top"><p style="text-align: justify;">9.2.4, 9.2.5 9.2.6, 9.2.7 </p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Сообщения о дефектах<br></p></td><td style="" valign="top"><p style="text-align: center;">12.28<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Протоколы управления конфигурацией ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.29<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Установлены архивирование, получение из архива и выпуск версии<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.8<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Протоколы управления конфигурацией ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.29<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Установлено управление загрузкой ПО<br></p></td><td style="" valign="top"><p style="text-align: justify;">9.2.9<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Протоколы управления конфигурацией ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.29<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Установлен контроль среды жизненного цикла ПО </p></td><td style="" valign="top"><p style="text-align: justify;">9.2.10<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Указатель конфигурации среды жизненного цикла ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.25<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: justify;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Протоколы управления конфигурацией ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.29<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td colspan="12" style="" valign="top"><p style="text-align: justify;">Обозначения:<br><br>0 - цель должна быть удовлетворена;<br><br>1 - документ должен удовлетворять целям категории контроля 1 (КК1);<br><br>2 - документ должен удовлетворять целям категории контроля 2 (КК2).<br></p></td></tr></tbody></table><p></p><p style="text-align: justify;"><br><br>Таблица А.9 - Процесс обеспечения качества ПО<br></p><p></p><table class="table table-condensed"><tbody><tr><td colspan="2" style="" valign="top"><p style="text-align: center;">Цель<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Применимость к уровням ПО<br></p></td><td colspan="2" style="" valign="top"><p style="text-align: center;">Результат<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Категория контроля по уровням ПО<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">С<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">С<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Обеспечена
 уверенность в том, что процессы разработки ПО и интегральные процессы 
соответствуют утвержденным планам и стандартам ПО<br></p></td><td style="" valign="top"><p style="text-align: justify;">10.1 а)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: justify;">Протоколы обеспечения качества ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.30<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Обеспечена уверенность, что удовлетворены критерии переходов между процессами жизненного цикла ПО<br></p></td><td style="" valign="top"><p style="text-align: justify;">10.1 б)<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: justify;">Протоколы обеспечения качества ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.30<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td><td style="" valign="top"><p style="text-align: center;"><br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Выполнен просмотр соответствия ПО<br></p></td><td style="" valign="top"><p style="text-align: justify;">10.1 в), 10.3<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: center;">*<br></p></td><td style="" valign="top"><p style="text-align: justify;">Протоколы обеспечения качества ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.30<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td><td style="" valign="top"><p style="text-align: center;">2<br></p></td></tr><tr><td colspan="12" style="" valign="top"><p style="text-align: justify;">Обозначения:<br><br>* - цель должна быть удовлетворена с обеспечением независимости;<br><br>пробел - удовлетворение цели на усмотрение заказчика;<br><br>2 - документ должен удовлетворять целям категории контроля 2 (КК2).<br></p></td></tr></tbody></table><p></p><p style="text-align: justify;"><br><br>Таблица А.10 - Процесс сертификационного сопровождения ПО<br></p><p></p><table class="table table-condensed"><tbody><tr><td colspan="2" style="" valign="top"><p style="text-align: center;">Цель<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Применимость к уровням ПО<br></p></td><td colspan="2" style="" valign="top"><p style="text-align: center;">Результат<br></p></td><td colspan="4" style="" valign="top"><p style="text-align: center;">Категория контроля по уровням ПО<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">С<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td><td style="" valign="top"><p style="text-align: center;">Описание<br></p></td><td style="" valign="top"><p style="text-align: center;">Ссылка<br></p></td><td style="" valign="top"><p style="text-align: center;">А<br></p></td><td style="" valign="top"><p style="text-align: center;">В<br></p></td><td style="" valign="top"><p style="text-align: center;">С<br></p></td><td style="" valign="top"><p style="text-align: center;">D<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Установлено взаимодействие и взаимопонимание между соискателем и сертифицирующей организацией<br></p></td><td style="" valign="top"><p style="text-align: justify;">11<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">План сертификации в части ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Предложены средства достижения согласия и достигнута согласованность с Планом сертификации в части ПО<br></p></td><td style="" valign="top"><p style="text-align: justify;">11.1<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">План сертификации в части ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td></tr><tr><td style="" valign="top"><p style="text-align: justify;">Представлены доказательства согласованности </p></td><td style="" valign="top"><p style="text-align: justify;">11.2<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: center;">0<br></p></td><td style="" valign="top"><p style="text-align: justify;">Итоговый документ разработки ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.31<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td><td style="" valign="top"><p style="text-align: center;">1<br></p></td></tr><tr><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p></p></td><td style="" valign="top"><p style="text-align: justify;">Указатель конфигурации ПО<br></p></td><td style="" valign="top"><p style="text-align: center;">12.26 </p></td><td style="" valign="top"><p style="text-align: center;">1 </p></td><td style="" valign="top"><p style="text-align: center;">1 </p></td><td style="" valign="top"><p style="text-align: center;">1 </p></td><td style="" valign="top"><p style="text-align: center;">1 </p></td></tr><tr><td colspan="12" style="" valign="top"><p style="text-align: justify;">Обозначения:<br><br>0 - цель должна быть удовлетворена;<br><br>1 - документ должен удовлетворять целям категории контроля 1 (КК1).<br></p></td></tr></tbody></table><p></p><p style="text-align: justify;"><br><br><br></p></div></div>

</div>

<div class="row">
<div class="col-sm-6">Copyright © 2023</div>
<div class="col-sm-6"><a href="https://engenegr.ru/map/">Карта сайта</a></div>													
</div>

<script>
$('#backToTopBtn').click(function(){
    $('html,body').animate({scrollTop:0},'slow');return false;
});    
</script>


</div></div><iframe src="%D0%93%D0%9E%D0%A1%D0%A2%20%D0%A0%2051904-2002%20-%20%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5%20%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D1%85%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC_files/a.html" style="width:1px;height:1px;display:none;" width="0" height="0" frameborder="0"></iframe><ul class="ui-autocomplete ui-front ui-menu ui-widget ui-widget-content" id="ui-id-1" tabindex="0" style="display: none;"></ul><span role="status" aria-live="assertive" aria-relevant="additions" class="ui-helper-hidden-accessible"></span></body></html>